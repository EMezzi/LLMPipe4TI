{
    "title": "obfuscation in the wild_ targeted attackers lead the way in evasion techniques _ fireeye inc",
    "text": " PREVIOUS POST nEXT POSTThreat Research Obfuscation in the Wil d: Targeted attacke rs Lead the Way in Evasion Techniq ues June 30, 2017 | by Daniel Bohannon , nick Carr OBFUSCaT IOn  EVaSIOn TECHnIQUES Throughout 2017 we have ob served a marked increase in the use of comman d line eva sion and obfuscation by a range of ta rgeted attacke rs. Cyber espionage g roups and financial th reat acto rs continue to adopt the late st cutting-edge application whitelisting bypa ss techniq ues and introduce innovative obf uscation into thei r phishing lures. These techniq ues often bypa ss static an d dynamic analy sis metho ds and highlight why signature-based detection alone will always be at lea st one step behin d creative attacke rs. In early 2017, FIn8 began using envi ronment va riables paired with PowerShell’s ability to receive comman ds via StdIn (standard input) to eva de detection ba sed on process comman d line arguments. In the Feb ruary 2017 phishing document “COMPLa InT Homer Glynn.doc” (MD 5: cc89dd ac1afe69069 eb18bac58c6a9e4), the file contain s a macro that sets the Po werShell comman d in one envi ronment va riable (_MICROSOFT_UPDaT E_CaTaLOG) an d then the string “po wershell -” in anothe r environment va riable (MICROSOFT_UPDaT E_SERVICE). When a Po werShell comman d ends in a dash then Po werShell will execute the comman d that it receives via StdIn, and only thi s dash will appea r in powershell.exe’ s comman d line arguments. Figure 1 provides the comman ds that were extracted using Man diant con sultant nick Carr’s FIn8 macro decoder. Figure 1: FIn8 environment va riable comman ds extracted from “COMPLa InT Homer Glynn.doc” mac ros To evade many detection s based on parent-chil d process relationships, FIn8 crafted this macro to use WMI to spawn the cm d.exe exec ution. The refore, WinWo rd.exe neve r creates a child process, but the process tree look s like: wmiprvse.exe > cm d.exe > po wershell.exe. F In8 has regularly used obfuscation an d WMI to remotely la unch their PUnCHTRaCK POS- scraping mal ware, and the 2017 activity i s an implementation of the se evasion techniq ues at an ea rlier stage of comp romise. as new application whitelisting bypa ss techniq ues have surfaced, targeted attacke rs have q uickly adopted these into thei r campaign s with extra layers of obfuscation to stay ahea d of many defenders. Many g roups leverage the regsvr32.exe application whitelisting bypa ss, including aPT 19 in their 2017 campaign again st law firms. The cyber espionage g roup aPT32 heavily obf uscates their backdoors and scripts, and Mandiant con sultants observed aPT32 implement a dditional comman d argument obf uscation in ap ril 2017. Instead of using the argument /i:http fo r the regsvr32.exe bypa ss, aPT32 used cmd.exe obf uscation techniq ues to attempt to b reak signature-based detection of thi s argument. at Fi reEye we have seen them incl ude both /i:^h^t^t^p an d /i:h”t”t”p in their lures. Figure 2 shows a redacted screenshot of o ur Host Investigative Platfo rm (HIP) capt uring real-time attacke r activity during one of o ur Mandiant inci dent response engagement s for aPT32 activity. Figure 2: aPT32 comman d obfuscation fo r regsvr32.exe application whitelisting bypa ss Meanwhile, FIn7 has continued to wreak havoc  on the restaurant, hospitality, an d financial services sectors in 2017. To en sure their arsenal did not grow stale, in ap ril 2017 FIn7 shifted to using wscript.exe to run JavaSc ript payloads that retrieve an a dditional payloa d hidden in the phi shing document by use of the Wo rd.application COM object. This week, FireEye identified FIn7 introducing additional obf uscation techniq ues at both the JavaSc ript and cmd.exe level s. These metho ds rely on F In7’s preferred metho d of hiding shortcut files (LnK files) in thei r DOCX and RTF phi shing documents to initiate the infection. at the time of thi s blog, the file s implementing thi s techniq ue were detected by 0 antivirus engine s. For JavaSc ript, instead of specifying “Wo rd.application” fo r the COM object in stantiation, F In7 began concatenating the string to “Wo r”+”d.application”. In addition, JavaSc ript’s suspicious “eval” string was transformed into “thi s[String.fromCha rCode(101)+’va’+’l’]”. Finally, they used a little- known character replacement f unctionality supported by cmd.exe. The wscript.exe comman d is set in a p rocess- level envi ronment va riable “x”, b ut is obfuscated with the “ @” character. When the “x” va riable is echoed at the end of the script the “ @” character is removed by the syntax “%x: @=%”. Fig ure 3 shows this comman d extracted from a LnK file embe dded within a ne w FIn7 phishing document. Figure 3: FIn7 comman d obfuscation f rom LnK file phi shing document In this example, F In7 implement s FIn8’s passing of comman ds via StdIn – this time pa ssing it to cm d.exe instead of powershell.exe – b ut the eva sion effect i s the same. While thi s example will expose these arguments in the fi rst cmd.exe’s comman d execution, if thi s environment va riable were set within the L nK or a macro and pushed to cmd.exe via St dIn from VBa, then nothing would appear on the comman d line. The FireEye iSIGHT Intelligence MyS IGHT Portal contain s detailed information on the se attacke rs – and all financial an d cyber espionage g roups that we track – incl uding analy sis of their malware, tactic s, and further intelligence att ribution. We fully expect ta rgeted attacke rs to contin ue this pattern of adopting ne w bypass techniq ues and adding innovative obf uscation at both the mac ro and comman d line level s. as for what we might see next, we’d recommen d reading up on DOS comman d line tricks so that monito ring your network isn’t the fi rst time yo u see new attacke r tricks. network defenders must understand what obf uscation i s possible, assess their endpoint an d network visibility, an d most importantly not rely on a single metho d to detect the se attack s.  Email Up dates Information an d insight on to day's advanced threats from FireEye. SHaRE Recent Po sts 17 Mar 2020 16 Mar 2020 09 Mar 2020 RSS FEED: STaY CO nnECTED  First name Last name Email address Company name Threat Research Blog FireEye Stories Blog Industry Perspective s Blog Yes, I would like to receive communication s from FireEye. Please read more about our information collection an d use. SUBSCR IBE Six Fact s about address Space Layout Randomization on Windows  They Come in the night: Ransomware Deployment T rends  Crescendo: Real Time Event Vie wer for macOS    Home  FireEye Blog s Threat Research  Obfuscation in the Wil d: Targeted attacke rs Lead t...    Company Why Fi reEye? Customer Stories Careers Certification s and Compliance Investor Relation s Supplier Documents news and Events newsroom Press Releases Webina rs Events awards and Honors Email Preferences Technical S upport Incident? Report Security Issue Contact S upport Customer Portal Communities Documentation Po rtal FireEye Blog s Threat Research FireEye Stories Industry Perspective s Threat Map View the Late st Threats Contact U s +1 877-347-3393   Stay Connecte d  Copyright   2020  FireEye, Inc. all rights reserved.  Privacy & Cookie s Policy  | Privacy Shiel d | Legal Doc umentationSite Lang uage English Solutions Services Customers Partners Resources Company  "
}