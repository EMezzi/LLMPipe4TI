{
    "title": "fireeye uncovers cve-2017-8759_ zero-day used in the wild to distribute finspy_fireeye uncovers cve-2017-8759_ zero-day used in the wild to distribute finspy _ fireeye inc",
    "text": " PREVIOUS POST nEXT POSTThreat Research FireEye Uncove rs CVE-2017-8759: Zero-Day U sed in the Wild to Distribute FInSPY,FireEye Uncove rs CVE-2017- 8759: Zero-Day U sed in the Wil d to Distribute FInSPY Septembe r 12, 2017 | by Genwei Jiang , Ben Rea d, James T. Bennett ZERO-DaY VUL nERaBILITY  FLaRE  0-DaY FireEye recently detected a malicio us Microsoft Office RTF document that leve raged CVE-2017-8759, a SOaP WSDL  parser code injection v ulnerability. Thi s vulnerability allo ws a malicio us actor to inject a rbitrary code during the parsing of SOaP WSDL definition content s. Mandiant analyzed a Microsoft Word document where attacke rs used the arbitrary code injection to download and execute a Visual Basic script that containe d PowerShell comman ds. FireEye shared the details of the v ulnerability with Microsoft and has been coo rdinating p ublic disclosure timed with the release of a patch to a ddress the vulnerability an d security guidance, which can be fo und here. FireEye email, en dpoint an d network products detected the malicio us documents. Vulnerability U sed to Target Russian Speake rs The malicio us document, “ Проект .doc” (MD 5: fe5c4d6bb78e170abf5cf3741868ea4c), might have been used to target a R ussian speaker. Upon successful exploitation of CV E-2017-8759, the document downloads multiple component s (details follow), and eventually launches a FInSPY payloa d (MD5: a7b990d5 f57b244dd17e9a937a41e7f5). FInSPY mal ware, also reported as FinFisher or WingBird, is available fo r purchase as part of a “la wful intercept” capability. Ba sed on this and previous use of FInSPY, we assess with moderate confi dence that thi s malicio us document was used by a nation- state to ta rget a R ussian-speaking entity fo r cyber espionage p urposes. additional detection s by FireEye’s Dynamic Th reat Intelligence system indicates that related activity, tho ugh potentially fo r a different client, might have occ urred as early as July 2017. CVE-2017-8759 WSDL Pa rser Code Injection a code injection v ulnerability exi sts in the WSDL pa rser module within the P rintClientP roxy metho d (http://referencesource.microsoft.com/ - Sy stem.Runtime.Remoting/meta data/wsdlparser.cs,6111). The IsValidUrl does not pe rform correct validation if p rovided data that contain s a CRLF sequence. Thi s allows an attacke r to inject an d execute arbitrary code. a po rtion of the v ulnerable co de is shown in Fig ure 1. Figure 1: Vulnerable WSDL Pa rser When m ultiple address definition s are provided in a SOaP response, the co de inserts the “//base.Config ureProxy(this.GetType(),” string afte r the first address, commenting o ut the remaining a ddresses. However, if a CRLF sequence is in the a dditional a ddresses, the co de following the CRLF will not be commente d out. Figure 2 shows that due to lack vali dation of CRLF, a Sy stem.Diagno stics.Process.Start metho d call is injected. The gene rated code will be compile d by csc.exe of . nET framework, and loaded by the Office executables as a DLL. Figure 2: SOaP definition VS Gene rated code The In-the-Wil d attack s The attack s that Fi reEye observed in the wild leveraged a Rich Text Fo rmat (RTF) document, similar to the CVE- 2017-0199  documents we previously reported on. The malicio us sampled containe d an embe dded SOaP monikers to facilitate exploitation (Fig ure 3). Figure 3: SOaP Monike r The payloa d retrieves the malicio us SOaP WSDL definition f rom an attacke r-controlled server. The WSDL pa rser, implemente d in System.Runtime.Remoting.ni. dll of .nET framework, parses the content an d generates a .cs source code at the working directory. The c sc.exe of . nET framework then compile s the gene rated source code into a lib rary, namely http[ url path].dll. Microsoft Office then loa ds the library, completing the exploitation stage.  Figure 4 shows an example lib rary loaded as a result of exploitation. Figure 4: DLL loa ded Upon successful exploitation, the injecte d code creates a new process and leverages mshta.exe to retrieve a HTa script name d “word.db” from the same server. The HTa script removes the source code, compile d DLL an d the PDB file s from disk and then downloads and executes the FInSPY mal ware name d “left.jpg,” which in spite of the .jpg exten sion and “image/jpeg” content-type, i s actually an exec utable. Fig ure 5 shows the details of the PCaP of thi s malware transfer. Figure 5: Live requests The mal ware will be place d at %app data%\\Mic rosoft\\Win dows\\OfficeUp dte-KB[ 6 random numbers ].exe. Figure 6 shows the process create chain under Process Monito r. Figure 6: Process Created Chain The Mal ware The “left.jpg” (m d5: a7b990d5 f57b244dd17e9a937a41e7f5) is a variant of F InSPY. It leverages heavily obfuscated code that employ s a built-in virtual machine – among othe r anti-analy sis techniq ues – to make reversing more difficult. as likely anothe r unique anti-analy sis techniq ue, it parses its own full path an d searches for the string representation of it s own MD5 hash. Many resources, such as analysis tools and sandboxes, rename file s/samples to thei r MD5 hash in order to ensure unique filename s. This variant runs with a mutex of \"WininetSta rtupMutex0\". Conclusion CVE-2017-8759 is the second zero-day vulnerability used to distribute FInSPY uncovered by FireEye in 2017. These exposures demonstrate the significant resources available to “la wful intercept” companie s and their customers. Furthermore, FInSPY ha s been sold to multiple client s, suggesting the v ulnerability was being used against other targets. It is possible that CV E-2017-8759 was being used by additional acto rs. While we have not fo und evidence of this, the zero day being used to distribute FInSPY in ap ril 2017, CVE-2017-0199  was simultaneously being used by a financially motivate d actor. If the acto rs behind FInSPY obtaine d this vulnerability f rom the same source used previously, it is possible that source sold it to additional acto rs. acknowledgement Thank yo u to Dhane sh Kizhakkinan, Jo seph Reye s, FireEye Labs Team, Fi reEye FLaR E Team an d FireEye iSIGHT Intelligence  for their contributions to this blog. We al so thank eve ryone from the Mic rosoft Security Response Center (MSRC) who worked with us on this issue.  Email Up dates Information an d insight on to day's advanced threats from FireEye. SHaRE Recent Po sts 17 Mar 2020 16 Mar 2020 09 Mar 2020 RSS FEED: STaY CO nnECTED  First name Last name Email address Company name Threat Research Blog FireEye Stories Blog Industry Perspective s Blog Yes, I would like to receive communication s from FireEye. Please read more about our information collection an d use. SUBSCR IBE Six Fact s about address Space Layout Randomization on Windows  They Come in the night: Ransomware Deployment T rends  Crescendo: Real Time Event Vie wer for macOS    Home  FireEye Blog s Threat Research  ,    Company Why Fi reEye? Customer Stories Careers Certification s and Compliance Investor Relation s Supplier Documents news and Events newsroom Press Releases Webina rs Events awards and Honors Email Preferences Technical S upport Incident? Report Security Issue Contact S upport Customer Portal Communities Documentation Po rtal FireEye Blog s Threat Research FireEye Stories Industry Perspective s Threat Map View the Late st Threats Contact U s +1 877-347-3393   Stay Connecte d  Copyright   2020  FireEye, Inc. all rights reserved.  Privacy & Cookie s Policy  | Privacy Shiel d | Legal Doc umentationSite Lang uage English Solutions Services Customers Partners Resources Company  "
}