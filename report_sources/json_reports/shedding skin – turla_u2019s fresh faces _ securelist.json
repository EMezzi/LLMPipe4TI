{
    "title": "shedding skin – turla_u2019s fresh faces _ securelist",
    "text": "Share post on:Turla, also known as Venomous Bear, Waterbug, and Uroboros, may be best known for what was at the time an “ultra\ncomplex” snake rootkit focused on NATO-related targets, but their malware set and activity is much broader. Our current\nfocus is on more recent and upcoming activity from this APT, which brings an interesting mix of old code, new code, and\nnew speculations as to where they will strike next and what they will shed.\nMuch of our 2018 research focused on Turla’s KopiLuwak javascript backdoor , new variants of the Carbon framework and\nmeterpreter delivery techniques. Also interesting was Mosquito’s changing delivery techniques, customized PoshSec-Mod\nopen-source powershell use, and borrowed injector code. We tied some of this activity together with infrastructure and\ndata points from WhiteBear and Mosquito infrastructure and activity in 2017 and 2018.\nFor a first, our KopiLuwak research identified targets and delivery techniques, bringing more accuracy and reliability to the\ndiscussion. Also interesting is a review of Turla scripting artefacts leading to newer efforts like KopiLuwak, tracing from older\nscripting in development efforts in WhiteAtlas and WhiteBear. And, we find 2018 KopiLuwak delivery techniques that\nunexpectedly matched Zebrocy spearphishing techniques for a first time as well.\nAlso highly interesting and unusual was the MiTM techniques delivering Mosquito backdoors. In all likelihood, Turla delivered\na physical presence of some sort within Wifi range of targets. Download sessions with Adobe’s website were intercepted and\ninjected to deliver Mosquito trojanized installers. This sort of hypothesis is supported by Mosquito installers’ consistent wifi\ncredential theft. Meanwhile, injection and delivery techniques are undergoing changes in 2018 with reflective loaders and\ncode enhancements. We expect to see more Mosquito activity into 2019.\nAnd finally, we discuss the Carbon framework, tying together the older, elegant, and functional codebase sometimes called\n“Snake lite” with ongoing efforts to selectively monitor high value targets. It appears that the backdoor is pushed with\nmeterpreter now. And, as we see code modifications and deployment in 2018, we predict more development work on this\nmatured codebase along with selective deployment to continue into 2019.\nEssentially, we are discussing ongoing activity revolving around several malware families:\nKopiLuwak and IcedCoffeer\nCarbon\nMosquito\nWhiteBear\nTechnical Rattle\nTurla’s Shifting to Scripting\nKopiLuwak and IcedCoﬀee, WhiteBear, and WhiteAtlas\nSince at least 2015 Turla has leveraged Javascript, powershell, and wsh in a number of ways, including in their malware\ndropper/installation operations as well as for implementing complete backdoors. The White Atlas framework often utilized a\nsmall Javascript script to execute the malware dropper payload after it was decrypted by the VBA macro code, then to\ndelete the dropper afterwards. A much more advanced and highly obfuscated Javascript script was utilized in White Atlas\nsamples that dropped a Firefox extension backdoor developed by Turla, but again the script was responsible for the simple\ntasks of writing out the extension.json configuration file for the extension and deleting itself for cleanup purposes.\nIcedCoﬀee\nTurla’s first foray into full-fledged Javascript backdoors began with the usage of the IcedCoffee backdoor that we reported\non in our private June 2016 “Ice Turla” report (available to customers of Kaspersky APT Intelligence Services), which led\nlater to their more fully functional and complex, recently deployed, KopiLuwak backdoor. IcedCoffee was initially dropped\nby exploit-laden RTF documents, then later by macro-enabled Office documents. The macro code used to drop\nIcedCoffee was a slightly modified version of that found in White Atlas, which is consistent with the code sharing present in\nmany Turla tools. A noteworthy change to the macro code was the addition of a simple web beacon that relayed basic\ninformation to Turla controlled servers upon execution of the macro, which not only helped profile the victim but also\ncould be used to track the effectiveness of the attack.\nIcedCoffee is a fairly basic backdoor which uses WMI to collect a variety of system and user information from the system,\nwhich is then encoded with base64, encrypted with RC4 and submitted via HTTP POST to the C2 server. IcedCoffee has no\nbuilt-in command capability, instead it may receive javascript files from the C2 server, which are deobfuscated and executed\nin memory, leaving nothing behind on disk for forensic analysis. IcedCoffee was not widely deployed, rather it was targeted\nat diplomats, including Ambassadors, of European governments.\nKopiLuwak\nIn November 2016, Kaspersky Lab observed a new round of weaponized macro documents that dropped a new, heavily\nobfuscated Javascript payload that we named KopiLuwak (one of the rarest and most expensive types of coffee in the\nworld). The targeting for this new malware was consistent with earlier Turla operations, focusing on European governments,\nbut it was even more selectively deployed than IcedCoffee.\nThe KopiLuwak script is decoded by macro code very similar to that previously seen with IcedCoffee, but the resulting script\nis not the final step. This script is executed with a parameter used as a key to RC4 decrypt an additional layer of javascript\nthat contains the system information collection and command and control beaconing functionality. KopiLuwak performs a\nmore comprehensive system and network reconnaissance collection, and like IcedCoffee leaves very little on disk for\ninvestigators to discover other than the base script.\nUnlike IcedCoffee, KopiLuwak contains a basic set of command functionality, including the ability to run arbitrary system\ncommands and uninstall itself. In mid-2017 a new version was discovered in which this command set had been further\nenhanced to include file download and data exfiltration capabilities.\nThe most recent evolution in the KopiLuwak life cycle was observed in mid-2018 when we observed a very small set of\nsystems in Syria and Afghanistan being targeted with a new delivery vector. In this campaign the KopiLuwak backdoor was\nencoded and delivered in a\nWindows shortcut (.lnk) file. The lnk files were an especially interesting development because the powershell code they\ncontain for decoding and dropping the payload is nearly identical to that utilized by the Zebrocy threat actor a month\nearlier.\nCarbon – the long tail\nCarbon continues to be deployed against government and foreign affairs related organizations in Central Asia. Carbon\ntargeting in this region has shifted across a few countries since 2014. Here, we find a new orchestrator v3.8.2 and a new\ninjected transport library v4.0.8 deployed to multiple systems. And while we cannot identify a concrete delivery event for\nthe dropper, its appearance coincides with the presence of meterpreter. This meterpreter reliance also coincides with wider\nTurla use of open source tools that we documented towards the end of 2017 and beginning of 2018.\nThe Epic Turla operation reported in 2014 involved highly selective Carbon delivery and was a long term global operation\nthat affected hundreds of victims. Only a small portion of these systems were upgraded to a malware set known as “the\nCarbon framework”, and even fewer received the Snake rootkit for “extreme persistence”. So, Carbon is known to be a\nsophisticated codebase with a long history and very selective delivery, and coincides with Snake rootkit development and\ndeployment. In light of its age, it’s interesting that this codebase is currently being modified, with additional variants\ndeployed to targets in 2018.\nWe expect Carbon framework code modifications and predict selective deployment of this matured codebase to continue\ninto 2019 within Central Asia and related remote locations. A complex module like this one must require some effort and\ninvestment, and while corresponding loader/injector and lateral movement malware moves to open source, this backdoor\npackage and its infrastructure is likely not going to be replaced altogether in the short term.\n.JS attachments deliver Skipper/WhiteAtlas and\nWhiteBear\nWe introduced WhiteBear actionable data to our private customers early 2017, and similar analysis to that report was\npublicly shared eight months later. Again, it was a cluster of activity that continued to grow past expectations. It is\ninteresting because WhiteBear shared known compromised infrastructure with KopiLuwak: soligro[.]com. WhiteBear scripted\nspearphish attachments also follows up on initial WhiteAtlas scripting development and deployment efforts.\nMosquito’s Changing 2018 Delivery Techniques\nIn March 2018, our private report customers received actionable data on Mosquito’s inclusion of fileless and customized\nPosh-SecMod metasploit components. When discussion of the group’s metasploit use was made public, their tactics began\nto change.\nThe “DllForUserFileLessInstaller” injector module maintained a compilation date of November 22, 2017, and was starting to\nbe used by Mosquito to inject ComRAT modules into memory around January 2018. It is a small piece of metasploit\ninjector code that accounts for issues with Wow64. Also, related open source powershell registry loader code oddly was\nmodified to avoid AES use, and opt for 3DES encryption instead. Here is the modified Mosquito code:\nAnd here is the default Posh-SecMod code that they ripped from:\nWe expect to see more open-source based or inspired fileless components and memory loaders from Mosquito throughout\n2018. Perhaps this malware enhancement indicates that they are more interested in maintaining current access to victim\norganizations than developing offensive technologies.\nMiTM and Ducking the Mosquito Net\nWe delivered actionable data on Mosquito to our private intel customers in early 2017. Our initial findings included data\naround an unusual and legitimate download URL for trojanized installers:\nhxxp://admdownload.adobe[.]com/bin/live/flashplayer23ax_ra_install.exe\nWhile we could not identify the MiTM techniques with accuracy at the time, it is possible either WiFi MiTM or router\ncompromise was used in relation to these incidents. It is unlikely, but possible, that ISP-level FinFisher MiTM was used,\nconsidering multiple remote locations across the globe were targeted.\nBut there is more incident data that should be elaborated on. In some cases, two “.js” files were written to disk and the\ninfected system configured to run them at startup. Their naming provides insight into the intention of this functionality,\nwhich is to keep the malware remotely updated via google application, and maintain local settings updates by loading and\nrunning “1.txt” at every startup. In a way, this staged script loading technique seems to be shared with the IcedCoffee\njavascript loading techniques observed in past Turla incidents focused on European government organizations. Updates are\nprovided from the server-side, leading to fewer malware set findings.\ngoogle_update_checker.js\nlocal_update_checker.js\nSo, we should consider the wifi data collection that Mosquito Turla performed during these updates, as it hasn’t been\ndocumented publicly. One of the first steps that several Mosquito installer packages performed after writing and running this\nlocal_update js file was to export all local host’s WiFi profiles (settings and passwords) to %APPDATA%\\<profile>.xml with a\ncommand line call:\ncmd.exe /c netsh wlan export profile key=clear folder=\"%APPDATA%\"\nThey then gather more network information with a call to ipconfig and arp -a. Maintaining ongoing host-based collection of\nwifi credentials for target networks makes it far easier to possess ongoing access to wifi networks for spoofing and MiTM, as\nbrute-forcing or otherwise cracking weakly secured WiFi networks becomes unnecessary. Perhaps this particular method of\nlocation-dependent intrusion and access is on the decline for Mosquito Turla, as we haven’t identified new URLs delivering\ntrojanized code.\nThe Next Strike\nIt’s very interesting to see ongoing targeting overlap, or the lack of overlap, with other APT activity. Noting that Turla was\nabsent from the milestone DNC hack event where Sofacy and CozyDuke were both present, but Turla was quietly active\naround the globe on other projects, provides some insight as to ongoing motivations and ambitions of this group. It is\ninteresting that data related to these organizations has not been weaponized and found online while this Turla activity quietly\ncarries on.\nBoth Turla’s Mosquito and Carbon projects focus mainly on diplomatic and foreign affairs targets. While WhiteAtlas and\nWhiteBear activity stretched across the globe to include foreign affairs related organizations, not all targeting consistently\nfollowed this profile. Scientific and technical centers were also targeted, and organizations outside of the political arena\ncame under focus as well. Turla’s KopiLuwak activity does not necessarily focus on diplomatic/foreign affairs, and also winds\ndown a different path. Instead, 2018 activity targeted government related scientific and energy research organizations, and a\ngovernment related communications organization in Afghanistan. This highly selective but wider targeting set most likely will\ncontinue into 2019.\nFrom the targeting perspective, we see closer ties between the KopiLuwak and WhiteBear activity, and closer alignments\nbetween Mosquito and Carbon activity.\nAnd WhiteBear and KopiLuwak shared infrastructure while deploying unusual .js scripting. Perhaps open source offensive\nmalware will become much more present in Mosquito and Carbon attacks as we see more meterpreter and injector code,\nand more uniquely innovative complex malware will continue to be distributed with KopiLuwak and a possible return of\nWhiteBear. And as we see with borrowed techniques from the previous zebrocy spearphishing, techniques are sometimes\npassed around and duplicated.\n \nKopiLuwak: A New JavaScript Payload from Turla\nIntroducing WhiteBear\nGazing at Gazer [pdf]\nAPT Trends report Q2 2017\nDiplomats in Eastern Europe bitten by a Turla mosquito [pdf]\nThe Epic Turla Operation\nPeering into Turla’s second stage backdoor\nAPT BACKDOOR  JAVASCRIPT  MACROS  MALWARE DESCRIPTIONS  MALWARE TECHNOLOGIES  MITM  \nROOTKITS  TURLA\nRelated Posts\nLEAVE A REPLY\nYour email address will not be published.  Required fields are marked *\nEnter your comment here\nName *\nEmail *\nSave my name, email, and website in this browser for the next time I comment.\n \nSUBMIT\nI'm not a robot\nreCAPTCHA\nPrivacy  - Terms\n \nIN THE SAME CATEGORY\nChafer used Remexi malware to spy on\nIran-based foreign diplomatic entities\nGreyEnergy’s overlap with Zebrocy\nA Zebrocy Go Downloader\nAPT review of the year\nDarkPulsar FAQ\nTHREATS\n CATEGORIES\n TAGS\n STATISTICS ENCYCLOPEDIA DESCRIPTIONS KSB 2019\nAPT REPORTS\nShedding Skin – Turla’s Fresh Faces\nBy GReAT  on October 4, 2018. 4:00 pm\n \nNotify me when new comments are added.\n© 2020 AO Kaspersky Lab.  All Rights Reserved. \nRegistered trademarks and service marks are the property of their respective owners.\nContact us  | Privacy Policy  | License AgreementEmail\n I agree to provide my email address to “AO Kaspersky Lab” to\nreceive information about new posts on the site. I understand\nthat I can withdraw this consent at any time via e-mail by\nclicking the “unsubscribe” link that I find at the bottom of any e-\nmail sent to me for the purposes mentioned above.\nSUBSCRIBE\nHunting APTs with YARA\n MonitorMinor: vicious\nstalkerware?\nCookiethief: a cookie-\nstealing Trojan for Android\nEnglish\nSolutions\n Industries\n Products\n Services\n Resource Center\n Contact Us GDPRCompanyAccount GET IN TOUCHSolutions for: Home Products  Small Business 1-50 employees Medium Business 51-999 employees Enterprise 1000+ employees\nWe use cookies to make your experience of our websites better. By using and further navigating this website you accept this. Detailed\ninformation about the use of cookies on this website is available by clicking on more information .ACCEPT AND CLOSE\n "
}