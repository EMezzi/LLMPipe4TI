{
    "title": "suckfly-revealing-secret-life-your-code-signing-certificates",
    "text": "Suckfly: Revealing the secret life of your code signing\ncertificates\nA China-based APT group has an insatiable appetite for stolen code-\nsigning certificates.\nBy\n:\n \nJon_DiMaggio\nCreated\n 15 Mar 2016\n0\nShare\nMany security-minded organizations utilize code signing to provide an additional layer of\nsecurity and authenticity for their software and files. Code signing is carried out using a type\nof digital certificate known as a code-signing certificate. The process of code signing\nvalidates the authenticity of legitimate software by confirming that an application is from the\n \nBlogs\n \nSecurity Response\nSecurity Response\nSymantec Official Blog\nSYMANTEC EMPLOYEE\n+3\n3 Votesorganization who signed it. While code-signing certificates can offer more security, they can\nalso live an unintended secret life providing cover for attack groups, such as the Suckfly\nAPT group.\nIn late 2015, Symantec identified suspicious activity involving a hacking tool used in a\nmalicious manner against one of our customers. Normally, this is considered a low-level alert\neasily defeated by security software. In this case, however, the hacktool had an unusual\ncharacteristic not typically seen with this type of file; it was signed with a valid code-signing\ncertificate. Many hacktools are made for less than ethical purposes and are freely available,\nso this was an initial red flag, which led us to investigate further.\nAs our investigation continued, we soon realized this was much larger than a few hacktools.\nWe discovered Suckfly, an advanced threat group, conducting targeted attacks using\nmultiple stolen certificates, as well as hacktools, and custom malware. The group had\nobtained the certificates through pre-attack operations before commencing targeted attacks\nagainst a number of government and commercial organizations spread across multiple\ncontinents over a two-year period. This type of activity and the malicious use of stolen\ncertificates emphasizes the importance of safeguarding certificates to prevent them from\nbeing used maliciously.\nAn appetite for stolen code-signing certificates\nSuckfly has a number of hacktools and malware varieties at its disposal. Figure 1 identifies\nthe malware and tools based on functionality and the number of signed files with unique\nhashes associated with them.\nFigure 1.  Suckfly hacking tools and malware, characterized by functionalityThe first signed hacktool we identified in late 2015 was a digitally signed brute-force server\nmessage block (SMB) scanner. The organization associated with this certificate is a South\nKorean mobile software developer. While initially suspicious because the hacktool was\nsigned, we became more suspicious when we realized a mobile software developer had\nsigned it, since this is not the type of software typically associated with a mobile application.\nBased on this discovery, we began to look for other binaries signed with the South Korean\nmobile software developer's certificate. This led to the discovery of three additional hacktools\nalso signed using this certificate. In addition to being signed with a stolen certificate, the\nidentified hacktools had been used in suspicious activity against a US-based health provider\noperating in India. This evidence indicates that the certificate’s rightful owner either misused\nit or it had been stolen from them. Symantec worked with the certificate owner to confirm\nthat the hacktool was not associated with them.\nFollowing the trail further, we traced malicious traffic back to where it originated from and\nlooked for additional evidence to indicate that the attacker persistently used the same\ninfrastructure. We discovered the activity originated from three separate IP addresses, all\nlocated in Chengdu, China.\nIn addition to the traffic originating from Chengdu, we identified a selection of hacktools and\nmalware signed using nine stolen certificates.\nThe nine stolen certificates originated from nine different companies who are physically\nlocated close together around the central districts of Seoul, South Korea. Figure 2 shows the\nregion in which the companies are located.\nFigure 2. Map showing the central districts of Seoul, where the companies with the stolen\ncertificates are located (Map data © 2016 SK planet)\nWhile we do not know the exact circumstances of how the certificates were stolen, the most\nlikely scenario was that the companies were breached with malware that had the ability to\nsearch for and extract certificates from within the organization. \nWe have seen this capability\nbuilt into a wide range of malware for a number of years now\n.\nThe organizations who owned the stolen certificates were from four industries (see Figure\n3).\nFigure 3. Owners of stolen certificates, by industry\nA timeline of misuse\nWe don't know the exact date Suckfly stole the certificates from the South Korean\norganizations. However, by analyzing the dates we first saw the certificates paired with\nhacktools or malware, we can gain insight into when the certificates may have been stolen.\nFigure 4 details how many times each stolen certificate was used in a given month.Figure 4. Tracking Suckfly’s use of stolen certificates, by month\nThe first sighting of three of the nine stolen certificates being used maliciously occurred in\nearly 2014. Those three certificates were the only ones used in 2014, making it likely that\nthe other six were not compromised until 2015. All nine certificates were used maliciously in\n2015.\nBased on the data in Figure 4, the first certificates used belonged to Company A\n(educational software developer) and Company B (video game developer #2). Company A's\ncertificate was used for over a year, from April 2014 until June 2015 and Company B's\ncertificate was used for almost a year, from July 2014 until June 2015. When we discovered\nthis activity, neither company was aware that their certificates had been stolen or how they\nwere being used. Since the companies were unaware of the activity, neither stolen certificate\nhad been revoked. When a certificate is revoked, the computer displays a window explaining\nthat the certificate cannot be verified and should not be trusted before asking the user if they\nwant to continue with the installation.\nSigned, sealed, and delivered\nAs noted earlier, the stolen certificates Symantec identified in this investigation were used to\nsign both hacking tools and malware. Further analysis of the malware identified what looks\nlike a custom back door. We believe Suckfly specifically developed the back door for use in\ncyberespionage campaigns. Symantec detects this threat as \nBackdoor.Nidiran\n.\nAnalysis of Nidiran samples determined that the back door had been updated three timessince early 2014, which fits the timeline outlined in Figure 4. The modifications were minor\nand likely performed to add capabilities and avoid detection. While the malware is custom, it\nonly provides the attackers with standard back door capabilities.\nSuckfly delivered Nidiran through a strategic web compromise. Specifically, the threat group\nused a specially crafted web page to deliver an exploit for the \nMicrosoft Windows OLE\nRemote Code Execution Vulnerability\n (CVE-2014-6332), which affects specific versions of\nMicrosoft Windows. This exploit is triggered when a potential victim browses to a malicious\npage using Internet Explorer, which can allow the attacker to execute code with the same\nprivileges as the currently logged-in user.\nOnce exploit has been achieved, Nidiran is delivered through a self-extracting executable\nthat extracts the components to a .tmp folder after it has been executed. The threat then\nexecutes “svchost.exe”, a PE file, which is actually a clean tool known as OLEVIEW.EXE.\nThe executable will then load iviewers.dll, which is normally a clean, legitimate file. Attackers\nhave been known to distribute malicious files masquerading as the legitimate iviewers.dll file\nand then use DLL load hijacking to execute the malicious code and infect the computer. This\ntechnique is associated with the Korplug/Plug-x malware\n and is frequently used in China-\nbased cyberespionage activity.\nHigh demand for code-signing certificates\nSuckfly isn’t the only attack group to use certificates to sign malware but they may be the\nmost prolific collectors of them. After all, \nStuxnet\n, widely regarded as the world’s first known\ncyberweapon, was signed using stolen \ncertificates\n from companies based in Taiwan with\ndates much earlier than Suckfly. Other cyberespionage groups, including \nBlack Vine\n and\nHidden Lynx\n, have also used stolen certificates in their campaigns\n.\nIn April 2013, a third-party vendor published a report about a cyberespionage group using\ncustom malware and stolen certificates in their \noperations\n. The report documented an\nadvanced threat group they attributed to China. Symantec tracks the group behind this\nactivity as Blackfly and detects the malware they use as \nBackdoor.Winnti\n.\nThe Blackfly attacks share some similarities with the more recent Suckfly attacks. Blackfly\nbegan with a campaign to steal certificates, which were later used to sign malware used in\ntargeted attacks. The certificates Blackfly stole were also from South Korean companies,\nprimarily in the video game and software development industry. Another similarity is that\nSuckfly stole a certificate from Company D (see Figure 4) less than two years after Blackfly\nhad stolen a certificate from the same company. While the stolen certificates were different,\nand stolen in separate instances, they were both used with custom malware in targeted\nattacks originating from China.\nWhy do attackers want signed malware?Signing malware with code-signing certificates is becoming more common, as seen in this\ninvestigation and the other attacks we have discussed. Attackers are taking the time and\neffort to steal certificates because it is becoming necessary to gain a foothold on a targeted\ncomputer. Attempts to sign malware with code-signing certificates have become more\ncommon as the Internet and security systems have moved towards a more trust and\nreputation oriented model. This means that untrusted software may not be allowed to run\nunless it is signed.\nAs we \nnoted in our previous research on the Apple threat landscape\n, some \noperating\nsystems\n, such as Mac OS X, are configured by default to only allow applications to run if\nthey have been signed with a valid certificate, meaning they are trusted.\nFigure 5. OS X can be configured to only permit trusted apps to execute\nHowever, using valid code-signing certificates stolen from organizations with a positive\nreputation can allow attackers to piggyback on that company’s trust, making it easier to slip\nby these defenses and gain access to targeted computers.\nConclusion\nSuckfly paints a stark picture of where cyberattack groups and cybercriminals are focusing\ntheir attentions. Our investigation shines a light on an often unknown and seedier secret life\nof code-signing certificates, which is completely unknown to their owners. The implications ofthis study shows that certificate owners need to keep a careful eye on them to prevent them\nfrom falling into the wrong hands. It is important to give certificates the protection they need\nso they can't be used maliciously.\nThe certificates are only as secure as the safeguards that organizations put around them.\nOnce a certificate has been compromised, so has the reputation of the organization who\nsigned it. An organization whose certificate has been stolen and used to sign malware will\nalways be associated with that activity.\nSymantec monitors for this type of activity to help prevent organizations from being tied to\nmalicious actions undertaken with their stolen certificates. During the course of this\ninvestigation, we ensured that all certificates compromised by Suckfly were revoked and the\naffected companies notified.\nOver the past few years, we have seen a number of advanced threats and \ncybercrime\ngroups\n who have stolen code-signing certificates. In all of the cases involving an advanced\nthreat, the certificates were used to disguise malware as a legitimate file or application.\nAs this trend grows, it is more important than ever for organizations to maintain strong\ncybersecurity practices and store their certificates and corresponding keys in a secure\nenvironment. Using encryption, and services such as \nSymantec’s Extended Validation (EV)\nCode Signing\n, and \nSymantec’s Secure App Service\n can provide additional layers of security.\nProtection\nSymantec has the following detections in place to protect against Suckfly’s malware:\nAntivirus\nBackdoor.Nidiran\nBackdoor.Nidiran!g1\nHacktool\nExp.CVE-2014-6332\nIntrusion prevention system\nWeb Attack: Microsoft OleAut32 RCE CVE-2014-6332\nWeb Attack: Microsoft OleAut32 RCE CVE-2014-6332 2\nWeb Attack: Microsoft OleAut32 RCE CVE-2014-6332 4\nWeb Attack: OLEAUT32 CVE-2014-6332 3\nSystem Infected: Trojan.Backdoor Activity 120\nFurther informationTo learn more about Symantec’s digital certificate solutions for code signing, please\nvisit our \nCode Signing Information Center\n.\nTo learn more about how best to protect your code-signing certificates, read our\nwhitepaper:\n Securing Your Private Keys As Best Practice for Code Signing Certificates\nTags:\n \nSecurity\n, \nSecurity Response\n, \nEndpoint Protection (AntiVirus)\n, \nAPT\n, \nBackdoor.Nidiran\n,\nBackdoor.Winnti\n, \nblack vine\n, \nChina\n, \ncode-signing certificates\n, \ndigital certificate\n, \nHacktool\n, \nHidden Lynx\n,\nKorplug\n, \nplug-x\n, \nStuxnet\n, \nSuckfly\nSubscriptions (0)\nJon_DiMaggio\nView Profile\nContact Us\nPrivacy Policy\nTerms and Conditions\nEarn Rewards\nRewards Terms and Conditions\n© 2016 \nSymantec Corporation\nLogin\n or \nRegister\n to post comments."
}