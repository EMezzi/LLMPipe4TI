{
    "title": "apt group ups targets us government with hacking team flash exploit",
    "text": "Tools Playbooks Speaking Events About Us\nAPT Group UPS Targets US Government with\nHacking Team Flash Exploit\n8,472 people reacted 1 4 min. read\nOn July 8, 2015, Unit 42 used the AutoFocus  Threat Intelligence service to locate and investigate activity\nconsistent with a spear‐phishing attack targeting the US Government. The attack exploited an Adobe Flash\nvulnerability that stems from the zero‐day vulnerabilities exposed from this month’s Hacking Team data breach.\nThe spear‐phishing attack used a link to a Flash exploit hosted on two subdomains of a legitimate website,\nperrydale[.]com; rpt.perrydale[.]com and report.perrydale[.]com. Both domains resolve to the same Ukraine‐\nbased IP 194.44.130.179.\nThere are no indications at this time that the actual website has been compromised, rather, this is more likely a\ncase of DNS hijacking. The Flash exploits, specifically located at rpt.perrydale[.]com/en/show.swf and\nreport.perrydale[.]com/ema/show.swf leverage one of the newly disclosed vulnerabilities from the Hacking Team\ndata breach, CVE‐2015‐5119. Successful exploitation leads to the affected host retrieving a secondary payload,\nb.gif, also located at the same two subdomains as the Flash exploit.\nThis attack shares similarities with a previous targeted attack , also using a Flash exploit, leveraging what was at\nthe time a zero‐day vulnerability in CVE‐2015‐3113. Analysis of both malicious Flash files indicates both these\nattacks are attributed to the APT group known as UPS or APT3.\nActionScript\nThe malicious Flash file named “show.gif” contains ActionScript that attempts to exploit a vulnerability and\nexecute shellcode to ultimately install a payload. Show.swf is composed of the following ActionScript classes:\nMainClass.as\nMyClass.as\nMyClass1.as\nMyClass2.as\nMyUtils.as\nShellWin32.as\nPreliminary analysis of class names revealed overlap with one of the two Flash zero‐day exploits disclosed\nfollowing the Hacking Team breach . When comparing the classes above with those associated with Hacking\nTeam’s Flash zero‐days, we found that MyClass.as, MyClass1.as, MyClass2.as, MyUtils.as and ShellWin32.as were\nshared within show.swf and Hacking Team’s Flash exploit. In addition, there are several log messages as well as\nmultiple function and variable names that exist in the ActionScript classes in both the UPS and the Hacking\nTeam’s Flash files. The most important overlap occurs in the “TryExpl” function within MyClass.as, where the\nsame functions and variables are used to create the use‐after‐free condition caused during the exploitation of\nthe CVE‐2015‐5119 vulnerability. Figure 1 shows the code in the “TryExpl” function that causes the use‐after‐\nfree vulnerability found in both the UPS and the Hacking Team’s Flash exploits. Also, the error message “can’t\ncause UaF” is found in both exploits.\nFigure 1. ActionScript Causing the Use‐After‐Free Vulnerability\nWhile analyzing the MainClass portion of show.swf, we also observed shared functions with a previous attack\nattributed to UPS that was designed to exploit an earlier Flash zero‐day, CVE‐2015‐3113. The CVE‐2015‐3113\nActionScript is publically available and can be obtained from the following link:\nhttps://gist.github.com/mak/bd71962aae98ab0b0441\nThe shared function names, seen below, include several functions used for data type manipulation, logging, and\ndecrypting the shellcode executed in the event of successful exploitation:\ndecode\nhexToIntArray\nlogMsg\nfunc_prepare\nhexToBin\nThe most obvious overlap between the two ActionScripts involves the shared variable name “m_scKey”, which is\na variable that stores the RC4 key that the ActionScript will use to decrypt the shellcode.\nShellcode\nWhen the Flash vulnerability is successfully exploited, shellcode executes which then extracts and decrypts a\npayload embedded in an animated GIF image. During analysis, Unit 42 was unable to obtain the payload; the\n“b.gif” file received was not weaponized as it does not contain an encrypted payload. There are two likely reasons\nfor this – UPS is known for both only serving malicious payloads within very limited windows of time during an\nattack, and even then only serving those payloads to victims that fit their desired profile.\nThe technique of extracting and decrypting a payload from within an animated GIF image was also used by UPS\nin the attacks exploiting CVE‐2015‐3113. Using Zynamic’s binDiff tool to compare, we discovered 99% similarity\nwith 99% confidence between the 5119 shellcode and the 3113 shellcode. By manually comparing the code, we\nconfirmed the high similarity and confidence rates as calculated by binDiff.\nThe technique of locating the payload embedded in the animated GIF is the same within both the 5119 and theBy Bryan Lee  and Robert Falcone\nJuly 10, 2015 at 11:36 AM\nCategory: Malware , Threat Prevention , Unit 42\nTags: ActionScript , Adobe Flash , AutoFocus , Hacking Team\nSearch Unit 42\nSHARE \n 3113 shellcodes. Additionally, both shellcodes use the exact same algorithm and key values to decrypt the\npayload from ciphertext to cleartext, specifically using an XOR, subtraction and a second XOR instruction using\nkey values 0x12, 0x11 and 0x85, respectively. In fact, we compared the two shellcodes side‐by‐side and found\nthat there is only one instruction added to the 5119 shellcode as seen highlighted in red in the image below.\nConclusion\nThese attacks highlight how sophisticated APT groups such as UPS can quickly leverage new vulnerabilities in\ntheir attacks. A patch  is available for this vulnerability, but was only released on the same day of weaponization,\nwhich leaves very little time for any organization to patch effectively. Due to the highly targeted nature of this\ntype of attack, traditional detection methods via known IOCs can be challenging. Deployment of automated,\nbehavioral preventative measures such as Palo Alto Networks Traps  can significantly reduce organizational risk to\nthese types of attacks.\nIndicators of Compromise\nSHA256\na2fe113cc13acac2bb79a375f692b8ba5cc2fa880272adc7ab0d01f839e877ff\nDomains\nrpt.perrydale[.]com\nreport.perrydale[.]com\nIPs\n194.44.130.179\nURLs\nrpt.perrydale[.]com /en/show.swf\nreport.perrydale[.]com /ema/show.swf\nrpt.perrydale[.]com /en/b.gif\nreport.perrydale[.]com /ema/b,gif\n \nGet updates from Palo Alto  Networks!\nSign up to receive the latest news, cyber threat intelligence and research from us\nEmail address Subscribe\nI'm not a robot\nreCAPTCHA\nPrivacy  - Terms\nBy submitting this form, you agree to our Terms of Use  and acknowledge\nour Privacy Statement .\n© 2020 Palo Alto Networks, Inc. All rights reserved.Popular Resources\nResource Center\nBlog\nCommunities\nTech Docs\nUnit 42\nSitemapLegal No ces\nPrivacy\nTerms of Use\nDocumentsAccount\nManage Subscriptions\nReport a Vulnerability\n "
}