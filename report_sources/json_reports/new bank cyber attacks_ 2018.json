{
    "title": "new bank cyber attacks_ 2018",
    "text": "Unified Application Security\nTelecommunications\nICS/SCADA\nVulnerability Management\nFinancial Services\nUtilities\nERP Security\nSecurity ComplianceMaxPatrol\nMaxPatrol SIEM\nPT Application Firewall\nPT Application Inspector\nPT ISIM\nPT Network Attack Discovery\nPT Telecom Attack Discovery\nPT ISIM freeView Sensor\nPT MultiScannerICS/SCADA Security Assessment\nTelecom Security Assessment\nATM Security Assessments\nWeb Application Security Services\nMobile Application Security Services\nCustom Application Security Services\nSSDL Implementation\nPenetration Testing\nForensic Investigation Services\nAdvanced Border ControlThreatscape\nResearch Blog\nKnowledge baseAuthorized Partners\nDistributors\nTechnology PartnersClients\nPress\nNews\nEvents\nVacancies\nContacts\nDocuments and MaterialsFind us:\n\nTerms of Use\nPrivacy policy\nPositive Coordinated Vulnerability Disclosure\nPolicy\nSitemap\nCopyright © 2002-2020 Positive TechnologiesHome  Analytics  New bank attacks\n\nSOLUTIONS PRODUCTS SERVICES ANALYTICS PARTNERS ABOUTNew bank attacks\nPublished on May 24, 2018 Finance/Banking\nIn mid-May 2018, the Expert Security Center (ESC) at Positive Technologies detected a phishing campaign directed\nat the financial sector. A number of signs suggest that the Cobalt group or its past participants continue to operate.\nFigure 1. Phishing message\nMessages were sent from the domain swift-sipn[.]info (85.143.166[.]158). The structure of the domain is identical to\nthe domains previously used by the Cobalt group  throughout its attacks on banks in Russia and Eastern Europe.1\nThe message contains a link (swift-fraud[.]com (85.143.166[.]99) to download a malicious document\n(d117c73e353193118a6383c30e42a95f). The same delivery technique was used by Cobalt in 2018. The document\ncontains three exploits for remote code execution in Microsoft Word: CVE-2017-8570, CVE-2017-11882, and CVE-\n2018-0802. Analysis of the document structure suggests similarity to documents generated with the Threadkit\nexploit kit. This is the same exploit kit used by Cobalt starting in February 2018.\nBesides the exploits, the document contains four embedded OLE objects: a nextstage BAT script\n(4bee6ff39103ffe31118260f9b1c4884), scriptlet for CVE-2017-8570 (bb784d55895db10b67b1b4f1f5b0be16),\ndummy document (c2a9443aac258a60d8cace43e839cf9f), and configuration file for cmstp.exe\n(581c2a76b382deedb48d1df077e5bdf1). All these objects are located in the %TEMP% folder of the user who\nopened the document. These objects are created in %TEMP% via the Package ActiveX Control. The objects have the\nfollowing format:\nFigure 2. Structure of an OLE object\nAfter any of the exploits is triggered, the next-stage BAT script runs:\nFigure 3. Next-stage BAT script\nInterestingly, this script leads to launching the utility cmstp.exe, which then downloads COM-DLL-Dropper\n(f0e52df398b938bf82d9e71ce754ab34) from cloud.yourdocument[.]biz (31.148.219[.]177).\nUse of this standard Windows utility allows bypassing AppLocker, as well as downloading and running SCT or COM\nobjects using the standard Windows utility regsvr32.exe. This method of bypassing AppLocker was discovered and\ndescribed publicly this year .\ncmstp.exe uses a configuration file that is also an OLE object in the original malicious document:\nFigure 4. Configuration file for cmstp.exe\nThe main purpose of COM-DLL-Dropper is to place a JavaScript dropper on the system, which in turn downloads a\nJavaScript backdoor. But before performing these primary functions, COM-DLL-Dropper checks its process to see\nwhether the name contains the “.txt” extension.\nFirst, two random values are generated and stored in the registry key HKEY_CURRENT_USER\\\nSoftware\\Microsoft\\Notepad\\[username]:\nFigure 5. Modified registry key\nThese values are used to name the malware modules: one of them will be the name of the JavaScript dropper\ncreated from the body of COM-DLL-Dropper, while the second value will be the name of the JavaScript backdoor.\nAfter these values are generated, persistence is ensured via a logon script.\nFigure 6. Gaining persistence on the system\nThen the DLL body is decrypted to generate an on-disk copy of the JavaScript dropper (%APPDATA%\\.txt,\nC:\\Users\\\\AppData\\Roaming\\.txt). The JavaScript dropper is encrypted with AES256-CBC. During the final stage,\nthe JavaScript dropper starts and the DLL is deleted.\nThe scheme for delivery of the JavaScript dropper is the same as seen in summer 2017: then, too, AES256-CBC was\nused for decryption.\nFigure 7. Delivery of the JavaScript dropper in 2017\nThe JavaScript dropper is obfuscated and encrypted with RC4. When the dropper runs, self-decryption is started:\nFigure 8. Main function in the dropper code\nThe dropper itself is very similar to the 2017 version, with differences only in the names of some functions and\nvariables. The dropper stays in a While True loop and tries to download a JavaScript backdoor from the command-\nand-control server nl.web-cdn[.]kz (185.162.130[.]155) and launch via regsvr32.exe. The name for the backdoor is\ntaken from the registry.\nThe JavaScript backdoor, as well, is obfuscated and encrypted with RC4. It self-decrypts upon launch.\nFigure 9. Configuration for the JavaScript backdoor\nLike the 2017 version, the JavaScript backdoor has a number of functions:\nReconnaissance via WMI ​\nLaunch of programs via CMD ​\nLaunch of new modules via regsvr32.exe ​\nSelf-updates ​\nSelf-removal ​\nDetection of antivirus software ​\nEncryption of traffic with RC4\nA new backdoor function checks for the backdoor in %APPDATA% based on the registry key indicated above. If no\nregistry key is present or the backdoor is not found in %APPDATA%, it will not run.\nRecommendations\nCybercriminals increasingly use social engineering to penetrate infrastructures in targeted attacks. Time and again,\nincident investigation and security testing by Positive Technologies underline that the human factor is the weak\npoint in security : statistics show that in 27 percent of cases, recipients click links in phishing messages. Attackers\nare often able to draw employees into correspondence (and even security staff, in 3 percent of cases). And if a\nmessage is sent from the address of a real company (a technique used by Cobalt), attackers’ success rate jumps to\n33 percent.\nTherefore security awareness training for employees is more important than ever. Key recommendations for\ncompanies include:\nRegular awareness-building among employees ​\nTimely installation of security updates (both applications and operating systems) ​\nUse of capable protection solutions, including malware detection systems that allow employees to self-scan\nattachments and other files as needed ​\nFull investigation of all security incidents\n1 In March 2018, the accused ringleader of the Cobalt group was arrested in Europe.\nDownload PDF Download PDF \nRelated articles\nApril 23, 2018\nFinancial application vulnerabilities\nApril 4, 2019\nVulnerabilities in online banking\napplications\nMay 21, 2018\nHow hackers rob banks\nShare:  \nRelated articles\nAll articles April 4, 2019\nVulnerabilities in online banking\napplicationsJuly 18, 2017\nSecurity trends & vulnerabilities review:\nfinancial systems (2017)April 23, 2018\nFinancial application vulnerabilitiesSolutions Products Services Analytics Partners About\nSupport English\nWe use cookies to enhance your experience on our website. By clicking Close you consent to our use of cookies. Find out more. Close\n "
}