{
    "title": "talos blog __ cisco talos intelligence group - comprehensive threat intelligence_ multiple cobalt personality disorder",
    "text": "Software\nReputation Center\nVulnerability Information\nMicrosoft Advisory Snort Rules  IP Blacklist Download\nAMP Naming Conventions\nTalos File Reputation\nAWBO Exercises  Library\nSupport Communities\nAbout\nCareers  Blog\nThreat Source Newsletter\nBeers with Talos PodcastCONNECT WITH US\n  \n© 2020  Cisco Systems, Inc. and/or its affiliates. All rights reserved. View our Privacy Policy  here. Subscribe via Email\nNEWER POST OLDER POST HOME\nSUBSCRIBE TO: POST COMMENTS (ATOM)TUESDAY, JULY 31, 2018\nSHARE THIS POSTDespite the notion that modern cybersecurity protocols have stopped email-based attacks, email continues to\nbe one of the primary attack vectors for malicious actors — both for widespread and targeted operations.\nRecently, Cisco Talos has observed numerous email-based attacks that are spreading malware to users at\nboth a large and small scale. In this blog post, we analyze several of those campaigns and their tactics,\ntechniques and procedures (TTPs). These campaigns were all observed between mid-May and early July of\nthis year, and can likely be attributed to one, or possibly two, groups. The attacks have become more\nsophisticated, and have evolved to evade detection on a continual basis.\nOther researchers have attributed these attacks to a group known as the Cobalt Gang, which has continued its\nactivities even after the arrest of its alleged leader  in Spain this year.\nSimple campaigns typically use a single technique and often embed the final executable payload into the exploit\ndocument. However, more complex campaigns require meticulous planning on the part of the attacker and\ninclude more sophisticated techniques to hide the presence of the malicious code, evade operating system\nprotection mechanisms and eventually deliver the final payload, likely to be present only in the memory of the\ninfected computer and not as a file on the disk.\nThe attacks we will be highlighting generally start with an email campaign, often targeted toward financial\ninstitutions. The malicious emails display a strong command of the English language, and their content may\nhave been taken from legitimate emails relevant to the business of the targeted organization.\nThe emails either contain a URL pointing to one of the three document types or have initial attack stages\nattached outright. They are using Word OLE compound documents with malicious obfuscated VBA macro code,\nRTF documents containing Microsoft Office exploits or PDF documents that start the next attack stages to\neventually deliver a Cobalt Strike beacon binary or a JScript-based backdoor payload.\nIt is essential to be aware of these attacks as emails look legitimate, but can result in the installation of a\npayload that can inflict significant financial damage to the targeted organization.\nAll observed attacks start with an email message, containing either a malicious attachment or a URL which\nleads to the first stage of the attack.\nThe text of the emails is likely taken from legitimate email, such as mailing lists that targeted organisations\nmay be subscribed to.\nBelow are three examples, with the first one purporting to be sent by the European Banking Federation and is\nusing a newly registered domain for the spoofed sender email address. The attachment is a malicious PDF file\nthat entices the user to click on a URL to download and open a weaponized RTF file containing exploits for CVE-\n2017-11882 , CVE-2017-8570  and CVE-2018-8174 . The final payload is a JScript backdoor also known as\nMore_eggs  that allows the attacker to control the affected system remotely.\n \nObserved email campaign 1\nThe second campaign, sent on June 19, appears to be sharing threat intelligence information with the recipient,\nand the sender seems to be from a newly registered domain that looks like a domain belonging to a major\nmanufacturer of ATMs and other payment systems. This campaign contains a URL, which points to a\nmalicious Word document where the infection chain is triggered by the user allowing the VBA macro code to\nrun.\n \nObserved email campaign 2\nThe third campaign, sent on July 10, is a more personal campaign that targets a variety of businesses. The\nsubject indicates that this is a complaint about problems with services provided by the target company,\nallegedly listed in an attached document. The attachment is an RTF document containing exploits that start the\nchain of several infection stages until the final executable payload is downloaded and loaded in the memory of\nthe infected system. All emails lead to stage 1 of the attack chain.\n \nObserved email campaign 3\nMost commonly, the observed emails have a malicious RTF file as an attachment, but the attachments can\nalso be Word documents with obfuscated VBA macro code, PDF files that redirect to other documents, or even\noutright binary executable payloads.\nHere, we show an example of a PDF campaign as seen from the point of view of the affected user. The user\nreceives an email with a PDF attachment and opens a file that does not contain any exploit code, but relies on\nthe social engineering techniques used in the email, which should convince the user to open the attachment\nwithout suspecting that there may be something wrong with it.\nThis malicious PDF only contains a URL to entice the user to view the file.\nIf the user chooses to click on the URL link and to read the actual content of the file, the browser will open a\nlegitimate Google location which will redirect the browser to a malicious document.\nBrowser redirection\nFinally, the malicious Word document is opened and the VBA macro code is run after the user allows for the\nediting of the content within Word. This eventually kickstarts the rest of the infection chain, terminates the\nWord process to hide the original file and opens a new Word instance to display a non-malicious decoy\ndocument dropped to the disk drive by one of the previous stages.\nMalicious Word document\nThe decoy document remains constant throughout the campaign and is likely a side effect of the Threadkit\nexploit toolkit and cannot be relied upon for attribution.\nDecoy document opened in Word\nRTF documents sent in the observed campaigns contain exploits for several vulnerabilities in Microsoft Office,\nand they seem to be created using a version of an exploit toolkit, often referred to as Threadkit . Documents\ngenerated by the toolkit typically launch a couple of batch files, task.bat and task (2).bat that drive the rest of\nthe infection process.\nThreadkit is not exclusively used by the actors behind the observed attacks but also by other groups utilizing\nvarious payloads, including Trickbot, Lokibot, SmokeLoader and some other banking malware.\nThe actors behind the attacks seem to be using a somewhat modified version of the exploit kit, which relies on\nlaunching code through known mechanisms for evading Windows AppLocker protection feature and leveraging\nlegitimate Microsoft applications such as cmstp, regsvr32 or msxsl. We will discuss these mechanisms in\nmore detail later in this post.\nAt least three vulnerabilities are exploited with these documents, the most common of which is a memory\nstack buffer overflow in Microsoft Equation Editor (CVE-2017-11882) patched by Microsoft in November 2017,\nfollowed by a composite moniker vulnerability (CVE-2017-8570), as well as the very similar, but slightly older,\nscript moniker vulnerability that is very popular among attackers (CVE-2017-0199).\nMore recent attacks also attempted to exploit an Internet Explorer vulnerability (CVE-2018-8174) triggered by an\nRTF document and an embedded URL moniker object. The embedded object triggers a download of an HTML\npage containing the VBScript that exploits the vulnerability and launches the shellcode. The HTML component\nof the exploit is based on the original exploit code  discovered in May this year.\nCVE-2018-8174 VB script exploit code\nWhen Microsoft decided to add the AppLocker  feature to Windows to allow defenders to implement holistic\nprotection application control, security researchers began working on the offensive side of security to search\nfor ways to circumvent it.\nWindows AppLocker allows administrators to control which executable files are denied or authorized to\nexecute. Administrators can create rules based on file names, publishers or file location that will allow only\ncertain files to execute, but not others.\nAppLocker works well for executables and over time it has also been improved to control various script types,\nincluding JScript, PowerShell and VBScript. This has significantly reduced the attack surface and forced\nattackers, including more sophisticated groups, to find new methods of launching executable code.\nA number of legitimate Windows executables that are not blocked by the default AppLocker policies has been\ndiscovered and various proof of concept AppLocker bypass code became publicly available.\nNotable applications used in these attacks are cmstp and msxsl. The Microsoft Connection Manager Profile\nInstaller (cmstp.exe) is a command-line program used to install Connection Manager service profiles. Cmstp\naccepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote\naccess connections. A malicious INF file can be supplied as a parameter to download and execute remote\ncode.\nExample malicious INF file to load a remote SCT file\nCmstp may also be used to load and execute COM scriptlets (SCT files) from remote servers.\nExample of malicious scriptlet file used to drop a malicious DLL dropper for the next stage\nMicrosoft allows developers to create COM+ objects in script code stored in an XML document, a so-called\nscriptlet file. Although it is common to use JScript or VBScript, as they are available in Windows by default, a\nscriptlet can contain COM+ objects implemented in other languages, including Perl and Python, which would be\nfully functional if the respective interpreters are installed.\nTo bypass AppLocker and launching script code within a scriptlet, the attacker includes the malicious code\nwithin an XML script tag placed within the registration tag of the scriptlet file and calls cmstp with appropriate\nparameters. For example:\nHere, the attackers randomize the scriptlet name and use a .txt filename extension, likely in an attempt to\nbypass fundamental protection mechanisms that attempt to block file types based on the filename extension.\nPayload dropper in an XSL file\nAnother executable used to attempt bypass of the AppLocker feature is msxsl.exe, a Windows utility used to\nrun XSL (eXtensible Stylesheet Language) transformations. Msxsl.exe is dropped together with its parameter\nby the previous attack stage, a DLL dropper, and run to continue the infection chain.\nIt takes an XML and an XSL file as a parameter, but it also loads the script engine and runs the script code\nwithin the <msxsl:script> tag of the supplied XSL file when invoked through a call placed within the <xsl:value-\nof> tag.\nInvoking the JScript code of the payload dropper within an XSL file\nThe supplied XML file seems to be randomly generated and used simply because the second parameter is\nrequired and is of no further interest for analysis.\nAn earlier part of the second stage is implemented as an encrypted JScript scriptlet which eventually drops a\nrandomly named COM server DLL binary with a .txt filename extension, for example, 9242.txt, in the user's\nhome folder and registers the server using the regsvr32.exe utility.\nThe dropper contains an encrypted data blob that is decrypted and written to the disk. The dropper then\nlaunches the next stage of the attack by starting PowerShell, msxsl or cmstp.exe as described above.\nOnce the DLL dropper is finished with its activity, it will be deleted from the drive, which may be one of the\nreasons why there are not too many DLL dropper samples available in public malware repositories.\nExported functions of the two observed variations of the dropper DLLs\nFrom the observed samples, it seems that the attacker has access to the source code of two legitimate DLLs\nwhich they modify to include the malicious dropper code. They can be distinguished by looking at the names of\nthe exported functions. The exported names seem legitimate and should not be used as a basis for the\nmalware detection.\nThe PowerShell chain is launched from an obfuscated JScript scriptlet previously downloaded from the\ncommand and control (C2) server and launched using cmstp.exe.\nFirst PowerShell stage with base64 encoded code\nThe first PowerShell stage is a simple downloader that downloads the next PowerShell stage and launches a\nchild instance of powershell.exe using the downloaded, randomly named script as the argument.\nPowerShell downloader\nThe downloaded PowerShell script code is obfuscated in several layers before the last layer is reached. The\nlast layer loads shellcode into memory and creates a thread within the PowerShell interpreter process space.\nPowerShell stage shellcode loader\nThis PowerShell code used in the final stage to launch shellcode is publicly available as a part of an open-\nsource antivirus evasion framework DKMC (Don't Kill My Cat) released in 2016, but it is also connected  with the\nCobalt Strike framework .\n \nBeginning of the \"download and load\" shellcode\nThe shellcode is relatively simple and begins with a XOR loop that deobfuscates the rest of the code. The most\nimportant function is the one that resolves the various API addresses using a checksum of the API name as\nthe parameter, traverses the PEB linked list of loaded modules to find the required module, traverses the list of\nmodule exports to find the required API and finally jumps (calls) the found API function. The main purpose of\nthe shellcode is to download an encrypted payload over HTTPS, decrypt it in memory and launch it.\nAs opposed to PowerShell loading a Cobalt Strike beacon, the other observed infection chain continues using\nJScript to deliver the final payload, which is a JScript backdoor. In this infection chain, the DLL dropper drops a\nJScript downloader, which eventually downloads the JScript backdoor payload from the C2 server.\nJScript downloader which downloads and launches a randomly named backdoor\nThe final payload is another obfuscated scriptlet file that is started by launching regsvr32.exe with the /U\n(unregister) command-line option to call into scrobj.dll JScript interpreter with the downloaded scriptlet file as\nan argument.\nIn the JScript side of the observed campaign's infection chain, the final payload is a fully functional JScript\nbackdoor known as \"More_eggs,\" based on one of the variable names present in its code.\nThe functionality of the backdoor is somewhat typical for that type of malware and allows the attacker to\ncontrol the infected machine over an HTTPS-based C2 protocol. The backdoor has its initial gate that it\nconnects to on a regular basis to check for the next commands submitted by the attacker.\nThe commands are relatively limited, but are sufficient enough to instruct the backdoor to download and\nexecute a new payload, remove itself from the system or download and launch additional scriptlets. During the\nresearch, we have not observed other binary payloads downloaded by the JScript backdoor but they are likely to\nbe present in a real environment.\nLooking at our Umbrella Investigate telemetry, there was a low level of activity for most of the C2 servers.\nHowever, for one of them, api.outlook.kz, we observed a regular pattern of moderate usage over the period of a\nfew weeks with the majority of the queries coming from U.S., followed by Germany and Turkey.\nDNS queries for api.outlook.kz backdoor C2 host\nThe backdoor fingerprints the targeted system and sends back the acquired information, including an installed\nanti-malware program, a version of the installed operating system, the local IP address, the name of the\ninfected computer, the username and other characteristics that uniquely describe the infected system.\nTwo More_eggs backdoor versions, possibly two different groups?\nThere are definite similarities between these attacks — primarily in the type of exploit, but also in the C2\ninfrastructure and the kind of payload that is used. However, that doesn't mean it can be attributed to a single\nactor.\nThere are at least two different versions of the JScript backdoor used, version 2.0 and version 4.4. Interestingly,\nif an attack used version 4.4, the attackers decided to add a variable \"researchers\" initialized to the string \"We\nare not cobalt gang, stop associating us with such skids!\", which may indicate that there is a more than one\nactor using very similar TTPs being active during the same period.\nOn the PowerShell side of the infection chain, the downloaded final payload is a Cobalt Strike beacon, which\nprovides the attacker with rich backdoor functionality.\nCobalt Strike beacons can be compared with Meterpreter, a part of the Metasploit framework. Cobalt Strike is\nused by penetration testers and offensive security researchers when delivering their services, but it is generally,\njust as Meterpreter, detected by anti-malware software as it can be easily used by malicious actors.\nThe beacon payload allows attackers to maintain full control over the infected system and pivot to other\nsystems as they see required, harvest user credentials, execute code with a UAC bypass, escalate the beacon\nprivileges using different mechanisms, and so on. An in-depth analysis of a Cobalt Strike beacon payload is\noutside of the scope of this post.\nBreadth of the observed campaigns\nAttackers have to create a reliable and adaptable infrastructure to be able to continually launch attacks over an\nextended period of time. This sometimes requires the development of proprietary tools with the advantage of\nfull control over them, but with a higher initial cost of investment.\nOn the other hand, attackers can choose off-the-shelf tools such as the ones described, which can serve their\npurposes equally well if they are disguised.\nWe have documented the activities of several related malware campaigns targeting users in the financial\nindustry, as well as other businesses, with a potential for financial return. We choose to cover these campaigns\nto showcase the breadth of TTPs required for successful targeted attacks, ranging from proper\nreconnaissance all the way to delivery of the final payload through several intermediate infection stages.\nThe TTPs we observed over the past two months are consistent with the previous activity of the so-called\nCobalt Group.\nHowever, we have found some payloads that contain a message for researchers stating that the attackers are\nnot the Cobalt group, which may indicate that the attacks are conducted by different actors despite the\ncommonalities in TTPs.\nAlthough the attacks are conducted using readily made tools, the attackers show a high level of technical\nknowledge judging by their ability to combine those tools into a number of successful campaigns delivering\ndifferent payloads to gain an initial foothold into their targets and provide attackers with a platform for further\nattack stages to reach their ultimate goal, which is likely a financial gain.\nAdditional ways our customers can detect and block this threat are listed below.\nAdvanced Malware Protection ( AMP ) is ideally suited to\nprevent the execution of the malware used by these threat\nactors.\nCisco Cloud Web Secuirty ( CWS ) or Web Security Alliance\n(WSA ) web-scanning prevents access to malicious\nwebsites and detects malware used in these attacks.\nEmail Security  can block malicious emails sent by threat\nactors as part of their campaign.\nNetwork Security appliances such as  Next-Generation\nFirewall ( NGFW ), Next-Generation Intrusion Prevention\nSystem ( NGIPS ), and  Meraki MX  can detect malicious activity associated with this threat.\nAMP Threat Grid  helps identify malicious binaries and builds protection into all Cisco Security products.\nUmbrella , our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and\nURLs, whether users are on or off the corporate network.\nOpen Source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack\navailable for purchase on Snort.org .\naf9ed7de1d9d9d38ee12ea2d3c62ab01a79c6f4b241c02110bac8a53ea9798b5\ne4081eb7f47d76c57bbbe36456eaa4108f488ead5022630ad9b383e84129ffa9\nbebd4cd9aece49fbe6e7024e239638004358ff87d02f9bd4328993409da9e17c\n7762bfb2c3251aea23fb0553dabb13db730a7e3fc95856d8b7a276000b9be1f5\na1f3388314c4abd7b1d3ad2aeb863c9c40a56bf438c7a2b71cbcff384d7e7ded\ndc448907dd8d46bad0e996e7d23dd35ebe04873bc4bb7a8d26feaa47d09d1eab\ncbbf2de2fbd4bce3f9a6c7c2a3efd97c729ec506c654ce89cd187d7051717289\n40f97cf37c136209a65d5582963a72352509eb802da7f1f5b4478a0d9e0817e8\ne566db9e491fda7a5d28ffe9019be64b4d9bc75014bbe189a9dcb9d987856558\n9ddc22718945ac8e29748999d64594c368e20efefc4917d36fead8a9a8151366\n1247e1586a58b3be116d83c62397c9a16ccc8c943967e20d1d504b14a596157c\ncc2e9c6d8bce799829351bd25a64c9b332958038365195e054411b136be61a4f\n0fef1863af0d7da7ddcfd3727f8fa08d66cd2d9ab4d5300dd3c57e908144edb6\n74af98fb016bf3adb51f49dff0a88c27bf4437e625a0c7557215a618a7b469a1\n844f56b5005946ebc83133b885c89e74bc4985bc3606d3e7a342a6ca9fa1cc0e\n283f733d308fe325a0703af9857f59212e436f35fb6063a1b69877613936fc08\nafeabc34e3260f1a1c03988a3eac494cc403a88711c2391ea3381a500e424940\n3b73ebb834282ae3ffcaeb3c3384fd4a721d78fff5e7f1d5fd63a9c244d84c48\n4afba1aa6b58dc3754fe2ff20c0c23ce6371ba89094827fe83bb994329fa16a3\n5ac1612535b6981259cfac95efe84c5608cf51e3a49b9c1e00c5d374f90d10b2\n9d6fd7239e1baac696c001cabedfeb72cf0c26991831819c3124a0a726e8fe23\ndf18e997a2f755159f0753c4e69a45764f746657b782f6d3c878afb8befe2b69\nf1004c0d6bf312ed8696c364d94bf6e63a907c80348ebf257ceae8ed5340536b\nf266070d4fe999eae02319cb42808ec0e0306125beda92f68e0b59b9f5bcac5a\nfc004992ad317eb97d977bd7139dbcc4f11c4447a26703d931df33e72fd96db3\nhxxp(s)://swift-fraud[.]com/documents\nhxxp://95[.]142[.]39[.]109/e1.txt\nhxxps://kaspersky-security[.]com/Complaint.doc\nhxxps://mcafeecloud[.]us/complaints/67972318.doc\nhxxps://s3[.]sovereigncars[.]org[.]uk/inv005189.pdf\nSTAGE 1 - DROP DLL DROPPER\nhxxp://nl.web-cdn.kz\nhxxp://mail[.]halcyonih[.]com/m.txt\nhxxp://mail[.]halcyonih[.]com/humans.txt\nhxxp://secure[.]n-document[.]biz/humans.txt\nhxxp://xstorage[.]biz/robots.txt\nhxxp://cloud[.]yourdocument[.]biz/robots.txt\nhxxp://cloud-direct[.]biz/robots.txt\nhxxp(s)://documents[.]total-cloud[.]biz/version.txt\nhxxp://cloud[.]pallets32[.]com/robots.txt\nhxxp://document[.]cdn-one[.]biz/robots.txt\nBACKDOOR C2\nhxxps://api[.]outlook[.]kz\nhxxp://api[.]fujitsu[.]org[.]kz\nhxxp://api[.]asus[.]org[.]kz\nhxxp://api[.]toshiba[.]org[.]kz\nhxxp://api[.]miria[.]kz\nhxxp(s)://outlook[.]live[.]org[.]kz\nhxxp://95[.]142[.]39[.]109/driver\nhxxp://95[.]142[.]39[.]109/wdriver\nhxxp://95[.]142[.]39[.]109/document.doc\nhxxps://95[.]142[.]39[.]109/vFGY\nPOSTED BY VANJA SVAJCER  AT 12:38 PM  \nLABELS: COBALT GROUP , DOC , EXPLOIT KITS RTF , JSCRIPT , MALWARE , POWERSHELL , SCRIPTLETS\n   Multiple Cobalt Personality Disorder\nIntroduction\nInfection vector — Emails\nStage 1\nDOCUMENT ATTACKS (PDFS, RTFS, DOCS)\nSTAGE 2 — EXPLOITS AND EXPLOIT KITS\nStage 3 — Scriptlets, scripts and DLLs\nAPPLOCKER BYPASS ATTEMPTS (CMSTP, MSXSL, REGSVR32)\nDLL DROPPER\nStage 4 — Downloaders\nPOWERSHELL LEADING TO SHELLCODE\nJSCRIPT DOWNLOADER\nStage 5 — Payloads\nJSCRIPT BACKDOOR\nCOBALT STRIKE BEACON\nConclusion/Summary\nCoverage\nIOCs\nRTFS\nDOC(X)S\nDROPPER DLLS\nSCRIPTLETS\nPDFS\nDECOY DOCUMENT\nEXECUTABLE PAYLOADS\nURLS - DOCS\nURLS - JS BACKDOOR\nPOWERSHELL STAGE\nDECOY DOCUMENT\nCOBALT STRIKE BEACON STAGE\nEnter your comment...\nComment as:  \nGoogle Account\nPublishPublish \nPreviewPreviewNO COMMENTS:\nPOST A COMMENT\nSearch Blog\nSUBSCRIBE TO OUR FEED\n Posts\n Comments\n►  2020 (61)\n►  2019 (277)\n▼  2018 (198)\n►  DECEMBER (16)\n►  NOVEMBER (15)\n►  OCTOBER (26)\n►  SEPTEMBER (16)\n►  AUGUST (12)\n▼  JULY (20)\nMultiple Cobalt Personality Disorder\nThreat Roundup for July 20-27\nBeers with Talos EP 34: Click Here to\nAssign New M...\nVulnerability Spotlight: Multiple\nVulnerabilities ...\nAdvanced Mobile Malware Campaign in\nIndia uses Mal...\nTalosIntelligence.com is rolling out a new\ndispute...\nThreat Roundup for July 13-20\nVulnerability Spotlight: Multiple\nVulnerabilities ...\nBlocking Cryptocurrency Mining Using\nCisco Securit...\nVulnerability Spotlight: Foxit PDF Reader\nJavaScri...\nVulnerability Spotlight: Multiple\nVulnerabilities ...\nBeers with Talos EP33 - Change the\nConversation or...\nThreat Roundup for July 6-13\nAdvanced Mobile Malware Campaign in\nIndia uses Mal...\nVulnerability Spotlight: Computerinsel\nPhotoline M...\nVulnerability Spotlight: Multiple Antenna\nHouse Vu...\nMicrosoft Patch Tuesday - July 2018\nVulnerability Spotlight: Multiple Adobe\nAcrobat DC...\nThreat Roundup for June 29 to July 6th\nSmoking Guns - Smoke Loader learned\nnew tricks\n►  JUNE (15)\n►  MAY (15)\n►  APRIL (21)\n►  MARCH (10)\n►  FEBRUARY (14)\n►  JANUARY (18)\n►  2017 (171)\n►  2016 (98)\n►  2015 (62)\n►  2014 (67)\n►  2013 (30)\n►  2012 (53)\n►  2011 (23)\n►  2010 (93)\n►  2009 (146)\n►  2008 (37)BLOG ARCHIVE\nRECOMMENDED BLOGS\nCISCO BLOG\nEverything you ever wanted to know about\nOpenRoaming and Cisco DNA Spaces\nSNORT BLOG\nSnort rule update for March 10, 2020 —\nMicrosoft Patch Tuesday\nCLAMAV® BLOG\nClamAV Bugzilla Upgrade Software  Vulnerability  Information  Reputation  Center  Library  Support  Careers  Blog  Podcasts  About\n "
}