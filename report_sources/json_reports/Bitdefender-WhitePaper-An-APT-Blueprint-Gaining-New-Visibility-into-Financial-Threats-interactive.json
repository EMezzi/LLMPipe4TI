{
    "title": "Bitdefender-WhitePaper-An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive",
    "text": "White Paper\nAn APT Blueprint:  \nGaining New Visibility into  \nFinancial Threats\nBitdefender Forensic Investigation Reveals  \nComplete Attack Timeline and Behavior of  \nNotorious Financial Cyber Criminal Group[2]\nWhite PaperExecutive Summary\nIn mid-2018, Bitdefender researchers investigated a targeted attack on an Eastern European financial institution, gaining new \ninsights and creating a complete event timeline showing how the infamous group Carbanak infiltrates organizations, how it moves \nlaterally across the infrastructure, and the time it takes to set up the actual heist.\nThe initial point of compromise found in our investigation involved the use of spear-phishing emails with malicious URLs and \ntainted documents rigged to download a Cobalt Strike beacon component. Within hours of compromise, the cybercriminal group \nwould begin to move laterally across the infrastructure, identify critical documents and prepare them for exfiltration, and try to \naccess the organization’s ATM and banking applications. \nBitdefender’s forensic analysis revealed some key compromise tactics:\n• Financial institutions in Eastern Europe remain the primary focus of the criminal group, which uses spear phishing as the \nmain attack vector\n• The presence of Cobalt Strike hacking tools is the key indicator that the financial institutions were targeted by the Carbanak \ncyber-criminal gang\n• In the reconnaissance phase, data related to banking applications and internal procedures was collected and prepared for \nexfiltration, to be used for the final stage of the attack\n• Infrastructure reconnaissance mainly occurred after business hours or on weekends to avoid triggering security alarms\n• It only took attackers a couple hours from initial compromise to fully established foothold and lateral movement, showing \nexperience, knowledge and coordination\n• The final goal of the targeted attack was to compromise the ATM networks, potentially to cash out at ATMs in a coordinated \nphysical and infrastructure criminal operation\nSeveral spear-phishing campaigns attributed to Carbanak, all occurring between March and May 2018, were analyzed by security \nresearchers in 2018. These campaigns impersonated emails from high-profile organizations, such as IBM or European Central \nBank, but also cybersecurity companies.\nWhile most forensic investigations focus on offering a highly technical analysis of the payloads used by the Carbanak group, \nBitdefender’s investigation offers a complete timeline of events, from the moment the email reached the victim’s inbox to the \nmoment of the heist.[3]\nWhite PaperA History of Criminal Activity\nOne of the most prolific APT-style cyberattacks, specifically targeting the financial sector, is known as Carbanak. Discovered in \n2014, the campaign quickly gained notoriety after compromising the security systems of 100 banks in 40 countries and stealing \nup to $1 billion in the process. Banks in countries such as Russia, the United Kingdom, the Netherlands, Spain, Romania, Belarus, \nPoland, Estonia, Bulgaria, Georgia, Moldova, Kyrgyzstan, Armenia, Taiwan and Malaysia have allegedly been targeted with spear-\nphishing emails, luring victims into clicking malicious URLs and executing booby-trapped documents.\nThe same group is believed to have also been using the Cobalt Strike framework to run sophisticated campaigns, plotting \nand performing financial heists of financial institutions . Following an investigation led by law enforcement in cooperation with \ncybersecurity companies, the leader of the group was apprehended in Alicante, Spain, on March 26th, 2018. \nHowever, this action doesn’t appear to have made a dent in the cybercriminal organization, as subsequent spear-phishing campaigns \nseem to have been reported from March until May 2018.\nSpearphishing Campaigns Timeline\nMarch 7th-10th   Emails sent from fake domains: ibm-cert.com, ibm-warning.com, ibm- notice.com\nMarch 15th   Emails impersonated VeriFon (a large POS terminal vendor) and used the fake dns-verifon.com domain.\nMarch 26th   Phishing emails pertaining to be from SpamHaus (non-profit organization that fights spam and phishing). They \nregistered the spamhuas.com domain and cloned the content from the official website (spamhaus. org).\nApril 3rd   The group used compromised mail servers of a Swedish company.\nMay 18th   Impersonated the SWIFT payment system and embedded documents with a JavaScript backdoor. A similar \nattack was used on USA and Europe banks.\nMay 23rd   Spearphishing emails claiming to be from a security vendor.\nMay 28th    Spearphishing emails impersonating the European Central Bank. They contained a JavaScript backdoor.\nA Carbanak trademark in cyberattacks remains the use of Cobalt Strike – a powerful pentesting tool designed for exploiting and \nexecuting malicious code, simulating post-exploitation actions of advanced threat actors – which allows them to infiltrate the \norganization, move laterally, exfiltrate data, and deploy anti-forensic and evasion tools. While the end results of such an attack can \nbe easily assessed in financial losses, little information has been publicly available until now on how the attack occurs step-by-step \nwithin a compromised organization.[4]\nWhite PaperModus Operandi\nThe APT-style cybercriminal group has a long track record of successfully targeting financial institutions around the world to either \ncash out at ATMs or perform wire transfers using the bank’s internal systems.\nThe spear-phishing emails sent to the financial institutions either end up with victims downloading a tampered document meant to \ndownload the Cobalt Strike beacon or to exploit several unpatched Remote Code Execution Vulnerabilities and deploy a backdoor. \nOnce the user attempts to open the attached documents, scripts (Fig. 1) embedded within the files are dropped on the disk and \nautomatically executed in the background. This is a popular technique, sometimes associated with advanced persistent threats \n(APTs) attributed to nation-sponsored threat actors.\nFig. 1 - Windows Script Component (.sct) file sample, embedded in spearphishing attachment (md5: bb784d55895db10b67b1b4f1f5b0be16)\nDesigned for stealth infiltration within the targeted system, the attacks use reconnaissance tools designed to assess the state of \nthe victim’s workstation and determine what tools should be downloaded next, or even open decoy documents similar to the one in \nFig.2, to avoid drawing victims’ suspicion.\nBitdefender’s Investigation, Resulting in a \nComplete Attack Timeline \nBitdefender’s forensics and investigation team was contacted to look into a security incident that started in May 2018 with an email \nreceived by two of the bank’s employees. As previously mentioned, the date coincides with a Carbanak spear-phishing campaign.\nThe attack target was to gain access to banking systems and eventually withdraw funds in cash from ATMs. The pattern exhibited \nby attackers and their lateral movements across the infrastructure show that they knew what types of information to look for and \nthey were skilled at evasion techniques. \nJudging by the way the adversaries interacted with different systems, the targeted hosts and the documents prepared for \nexfiltration, it appears that the cybercriminal group focused initially on mapping the internal processes and applications of the \naffected institution. They displayed a deep understanding of the nature and location of the data they sought. They were able to \nmaintain a low network footprint and avoid suspicion by using selected single workstations as a hub for centralizing collected \ninformation and for communication with their command & control server, outside the regular working hours of the bank. \nAfter compromising the first victim, the aggressors’ next goal was to find admin-level credentials that would allow them to move \nacross the entire infrastructure. By performing all these operations outside business hours and limiting their interaction to only a \nhandful of systems, the cybercriminal group minimized the detection opportunities. [5]\nWhite PaperA carefully executed network reconnaissance and lateral movement plan was unfolding during this time. What follows is a timeline \nof events that started with the initial spear-phising email.\nInitial compromise \nTwo victims were tricked into opening the spear-phishing attachment, initially compromising two separate endpoints.\nDay 0 (day of initial compromise)\n16:48  – one of the employees opened the document within the spear-phishing email\n16:49  – a second employee opened the same tainted document. The document opened by both employees used three \nexploit methods for Remote Code Execution in Microsoft Word: CVE-2017-8570 , CVE-2017-11882 , and CVE-2018-0802.  To \ndistract the user from the attack occurring in the background, a decoy document (fig 2) was used. Finally, a backdoor from the \nCommand and Control Server was used to establish persistence in the infrastructure.\nFig. 2 - Decoy document sample displayed on the victim’s machine \n(md5: c2a9443aac258a60d8cace43e839cf9f)\nAt this point, the adversary had the ability to download and execute new payloads, download additional scripts, run shell commands \nto move laterally in the infrastructure, and delete files from the system and cleaning registry keys to leave fewer forensics traces.[6]\nWhite PaperNetwork lateral movement & data collection\nIn this phase, attackers compromised additional network endpoints, gathering data and using one of the endpoints for collecting \nand storing internal documents that appeared of interest.\nDay 0 (continued) 17:05 to 18:20   \nAs soon as the first spear-phishing email was accessed, events occurred as follows: \n- Three Microsoft Word exploits (mentioned above) were used;\n- Cobalt Strike beacon was delivered and used to discover and map the organization’s internal network, with the purpose of \ncollecting administrative level credentials;\n- Credentials for one Domain Administrator were compromised and used throughout the duration of the attack; \n- Credentials were “tested” on one of the Domain Controller servers to make sure they’re valid, resulting in its compromise\nAt least two more endpoints were compromised by the end of the day.\nDays 1 to 28 \nNumerous workstations were systemically compromised in a search for critical information that the cybercriminals could use.\nDay 10\nAttack reaches another compromised, which will later be used to store documents related to internal applications, manuals and \nother potentially valuable documents.\nDay 28 \nA series of potentially valuable documents pertaining to internal applications and procedures were identified and prepared for \nexfiltration.\nInternal Servers Compromised\nLateral movements and intelligence collection continue, while attackers also target and compromise additional internal hosts and \nservers that will be used during the actual heist.\nBetween Day 30 to 46, over a period of 17 days, a series of archives were created containing manuals, guides and training materials \nfor different applications. The information gathered was archived and organized in different folders. This information was relevant \nin planning the attack on the bank and, potentially, other banks that share similar systems. The cybercriminal group could be \nactively improving its understanding of internal banking systems by collecting and studying this type of information, in an attempt \nto make their attacks more efficient and stealthier. Their specialization in compromising banking infrastructures could be a direct \nconsequence of intelligence collected and assimilated after each attack on previous financial institutions. This level of intimate \nknowledge of how banking applications work based on stolen documentation, helps them quickly achieve their purpose, which is \nto access and transfer financial assets. The more information they have on the inner workings of banking applications, the easier it \nbecomes to pull off surgical cyber heists and avoid security tripwires.\nDay 30   A series of archives were created containing manuals, guides and training materials for different applications. \nThe information gathered was archived and organized in different folders.\nDay 33   Attackers connected to servers and hosts with access to banking applications. The connections were initiated \nfrom workstations that had activity after regular office hours.\nDay 33 to 46   A series of archives were created containing manuals, guides and training materials for different applications. \nThe information gathered was archived and organized in different folders.[7]\nWhite PaperDay 46 to 63   Using a compromised domain administrator account, attackers remotely dial into various network workstations \nand ultimately remove the archives used to store the baking materials, to cover their tracks\nStarting on Day 33 , attackers connected to servers and hosts with access to banking applications. The connections were initiated \nfrom workstations that had activity after regular office hours. \nThe workstations used to connect to these machines were logged in from and controlled by a workstation that was not part of the \nlegitimate corporate infrastructure. The system belonged to the adversary and accessed the organization network through a VPN \ntunnel established by the Cobalt Strike beacon component, to contact the internal corporate network systems. \nThese command & control connections last between 20 minutes and one hour on average , based on the logs available for forensic \ninvestigation. The documents prepared for exfiltration, which were relevant to the internal applications, as well as the connections \nto banking applications after regular office hours, point to a financially motivated attack.\nBelow is a complete lateral movement timeline that includes all major events related to what infrastructure assets were compromised \nand when. Marked in red are the three major milestones achieved during the attack: the moment the domain controller was \ncompromised, the moment documents started being stored on an internal endpoint, and when the threat actors first connected to \na host with access to banking applications .\nThis lateral movement timeline was compiled based on forensic evidence correlated from several analyzed systems and network \nevents. It is the most relevant blueprint, revealing a complete attack timeline and behavior of the notorious financial cyber-criminal \ngroup when inside an infrastructure belonging to a financial organization.\nLateral Movement Timeline\nDay 0 16:48:53   1st endpoint compromised after opening the spearphishing email\n ------ 16:49:03   2nd endpoint compromised after opening the spearphishing email\n ------ 18:20:00   3rd victim - Domain Controller compromise and admin credentials used throughout the duration of the attack\n ------ 18:40:49   Another endpoint compromised and Cobal Beacon dropped\n ------ 21:02:15   Another endpoint compromised and Cobal Beacon dropped\nDay 1 10:24:07    Another endpoint compromised and used to perform lateral movement\n ------ 13:27:45    Another endpoint compromised\nDay 4 10:19:00    Another endpoint compromised and Cobal Beacon dropped\nDay 7 16:00:00   Another endpoint compromised and Cobal Beacon dropped\n ------ 19:48:01   Another endpoint compromised\nDay 9 01:57:31   Another endpoint compromised\n ------ 16:43:00   Another endpoint compromised\nDay 10  1:30:17   Another endpoint compromised and used to store documents prepared for exfiltration.\nDay 15 21:39:11    Domain Controller accessed and used remotely dial into various endpoints\nDay 32 13:16:07    Another endpoint compromised\nDay 33 17:00:55    The moment when attackers connected to a host with access to banking applications.\nDay 34  8:52:18    Another host with access to banking applications was access by the attackers.[8]\nWhite PaperDay 35 15:15:33    Another host with access to banking applications was access by the attackers.\n ------ 21:40:58    Another endpoint compromised, starts to communicate with C&C\nDay 38 7:54:47    Another endpoint compromised\nDay 45 20:36:38    Another host with access to banking applications was access by the attackers.\nDay 47 20:55:38    Remote desktop into an internal system (compromised)\nDay 53 16:07:29    Another host with access to banking applications was access by the attackers.\n ------ 20:39:16    Another host with access to banking applications was access by the attackers.\n ------ 20:45:34    Another host with access to banking applications was access by the attackers.\nDay 55 12:56:28    Another host with access to banking applications was access by the attackers.\nTechnical Analysis - experts only\nBelow is a detailed analysis of the key indicators of compromise that helped build the APT timeline. It includes an event timeline \ncompiled from two workstations used in the attack: the one used to compromise the domain controller and the one used to store \nall the network-collected data. \nThe following events help paint a clear picture of actions immediately after the spear-phishing email attachment was opened, and \nshow how the threat actors move laterally across the infrastructure and how they gathered relevant documentation.\nThe “swift-fraud[.]com/documents/94563784.doc”  URL was opened from the body of an email received in a \nspearphishing campaign targeting financial institutions. The Bitdefender research team obtained the document from our Threat \nIntelligence feeds and started analyzing it. According to other threat reports, the same URL has been used in delivering other tainted \ndocuments, potentially part of similar campaigns aimed at other financial institutions. This suggests the cybercriminal group may \nhave been delivering multiple documents to victims, potentially laced with other exploits or droppers.\nThe attack flow leaves behind a temporary file, which was found on two of the systems analyzed in the incident response. This \ntemporary file was created on the filesystem after the opening of the original document file, downloaded from the malicious URL \nmentioned above.\nAnalysis of the document on one of the systems reveals the steps involved in compromising the targeted system via the spear \nphishing email. The document contains four objects that are dropped on the filesystem of the victim:\nAttack flow after opening the tampered spearphishing document\nKbhpQIcahFCuZwq.sct - (bb784d55895db10b67b1b4f1f5b0be16)  \n This object was not found on disk, it was deleted after running b y “MGsCOxPSNK.txt”. Its role is to launch into \nexecution the component “MGsCOxPSNK.txt”\nMGsCOxPSNK.txt (4bee6ff39103ffe31118260f9b1c4884)  \n This file was not found on disk. Its functionality is to act as a next stage batch script which executes “cmstp.\nexe /s /ns tCrrDqBQoCcEkbnK.txt”\ncqHfjCkTtMwG.doc (c2a9443aac258a60d8cace43e839cf9f) \n This file can be found at the path: C:\\Users\\[redacted]\\AppData\\Local\\Temp\\cqHfjCkTtMwG.doc. It is a decoy \nfile, because it acts as a normal document file while the malicious pa yload is being dropped and executed on \nthe system.\ntCrrDqBQoCcEkbnK.txt (581c2a76b382deedb48d1df077e5bdf1)  \n This object can be found at the path: C:\\Users\\[redacted]\\AppData\\Local\\Temp\\tCrrDqBQoCcEkbnK.txt. It is a \nconfiguration file for cmstp.exe. It downloads a DLL dropper from “cloud[.]yourdocument[.]biz/robots.txt”[9]\nWhite PaperThe DLL Dropper downloaded on step four was not found on the file system and has the role of decrypting and dropping yet another \nJavaScript Dropper on the system. The decrypted JavaScript will be saved at the path “%APPDATA%\\<registry_value>.txt” where \nregistry_value = “HKEY_CURRENT_USER\\Software\\Microsoft\\Notepad[USERNAME]\\303F1428C3F”. Before exiting, the DLL will \nself-delete.\nThe file “303F1428C3F.txt” (eb561d46c6283c632df88bd20ade6df4)  can be found at the path C:\\Users\\[redacted]\\\nAppData\\Roaming\\303F1428C3F.txt . Also, the file was obfuscated and encrypted with RC4. After decryption, the binary tried \nto download a JavaScript backdoor from the Command and Control server (C&C) “nl[.][redacted][.]kz/robots.txt”  and \nsaved the file to “%APPDATA%\\9D01CA.txt” . The backdoor “%APPDATA%\\9D01CA.txt”  was then executed via “regsrv32” \n(ex. “regsvr32 /S /N /U /I:path_backdoor scrobj”) .\nThe file “9D01CA.txt ” sent an initial fingerprint of the system compromised which contained the name of the antivirus solution \ninstalled on the system, the local IP address, username, computername and OS version. After this communication, the component \nwaited for instructions from the C&C “nl[.][redacted][.]kz/api/v1” . \nThe traffic with the C&C was encrypted and the commands received from the C&C would split into five types:\n●\t“d&exec” : download and execute payload (EXE of DLL)\n●\t“more_eggs” : download additional scripts (including self-update) and save them in “%APPDATA%”\n●\t“gtfo” : self delete/registry cleanup\n●\t“more_onion” : runs additional downloaded scripts\n●\t“via_x” : execute command shell commands\nAll files mentioned in this stage of the attack were created on the system on Day 0 at around 16:49 , when the first download link was \naccessed. It is worth mentioning that a binary executable named “rad353F7.tmp ”, which appeared on the system at a later date, \nDay 6 , was most certainly downloaded on the system by the Javascript Backdoor “9D01CA.txt” .\nDay 0 at 16:48:58  marks the touchdown of a decoy file on two systems. This file is a decoy because it acts as a normal document \nfile while the malicious payload is being dropped on the system. On one of the two workstations, the decoy file has the creation time \nof Day 0 at 16:49:09 (10 seconds later than the other workstation) and the path C:\\Users\\[redacted]\\AppData\\Local\\\nTemp\\cqHfjCkTtMwG.doc . This system shows more stages of the attack, because the adversary used this machine to perform \nlateral movement and compromise a domain administrator account  within two hours of the initial compromise .\nAfter the compromise of the domain administrator account, a network discovery is performed and systems start to be logged on via \nremote desktop protocol to reach the objective of infiltrating the network and gathering information. \nBelow is a complete timeline of events recorded on the workstation that was used to compromise the domain administrator account \nemployed by attackers throughout the lateral movement process.\nDay 0\n16:49:03   File create  /Users/[redacted]/AppData/Local/Microsoft/Windows/INetCache/Content.Word/~WRF{39EC1EBF-\n71AD-4216-BDC3-66B5DCB833F3}.tmp\n16:49:09   File create \\Users\\[redacted]\\AppData\\Local\\Temp\\cqHfjCkTtMwG.doc\n16:49:10   Faulting application name: EQNEDT32.EXE\n16:49:30   File create C:\\Users\\[redacted]\\AppData\\Local\\Temp\\tCrrDqBQoCcEkbnK.txt\n16:54:00   File create C:\\Users\\[redacted]\\AppData\\Roaming\\303F1428C3F.txt\n16:55:00   File create C:\\Users\\[redacted] \\AppData\\Roaming\\9D01CA.txt\n17:05:33   Powershell script communicated to 185.206.145.227\n17:08:28   Find-LocalAdminAccess\n17:08:54   Get-GPPPassword[10]\nWhite Paper17:21:17   LastUsedTime systeminfo.exe \n17:28:35   Run time for \\Users\\[redacted]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\smrs.\nexe (d68351f754a508a386c06946c8e79088)\n17:46:28   Get-NetComputer\n17:46:29   File create NetComputer.txt\n17:48:10   Invoke-EnumerateLocalAdmin\n17:48:26   Find-LocalAdminAccess\n17:48:27   File create LocalAdminAccess.txt\n17:56:12   Invoke-EnumerateLocalAdmin\n17:57:03   File create EnumerateLocalAdmin.csv\n18:15:53   PowerShell console is starting up\n18:17:52  to  18:23:38    \nThe legitimate jusched.exe is replaced with the jusched.exe (d68351f754a508a386c06946c8e79088) beacon \ndownloader\n18:44:39   File create \\Users\\Public\\[redacted].txt\n18:55:56   Run time for \\Users\\[redacted]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\smrs.\nexe (d68351f754a508a386c06946c8e79088)\n18:55:56   LastUsedTime: C:\\Windows\\system32\\cmd.exe\n18:55:56   Run time for taskkill.exe\n22:54:57   LastUsedTime: C:\\Windows\\system32\\PING.EXE\nDay 1\n10:19:15   Powershell run with content from pipe_8080\n10:24:07   A service was installed in the system.\n10:34:19   Run time for powershell.exe\n13:00:48   Failed attempts to connect to five internal systems\n13:26:53   Run time for net1.exe\nDay 2\n17:48:59   Run time for nslookup.exe\nDay 5\n12:07:49    Powershell script communicated to C2 server\n13:28:37   Powershell script communicated to C2 server\n13:38:45   Powershell script communicated to C2 server\n15:49:08   File create C:\\Users\\[redacted]\\AppData\\Roaming\\rad353F7.tmp[11]\nWhite Paper17:08:40    Execution on file path: C:\\Users\\[redacted]\\AppData\\Roaming\\rad353F7.tmp\n17:08:41   Run time for C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\nDay 27\n08:26:22   FileKeyLastWriteTimestamp mstsc.exe\nDay 46\n11:33:47   Run time for jusched.exe\nDay 58\n09:06:33   Failed attempts to connect to several internal systems. 330 events: 322 target a single system ; 4 target a \nsecond system ; 4 target a third system .\nDay 59\n08:34:07   Failed attempts to connect to several internal systems. 358 events: 349 target a single system ; 5 target a \nsecond system; 5 target a third system.\nDay 60\n08:33:50   Failed attempts to connect to several internal systems. (355) target a single system ; 5 target a second system; \n5 target a third system\nDay 63\n08:13:37   Failed attempts to connect to several internal systems. (304) target a single system ; 7 target a second system; \n7 target a third system\nThe full list of components and their corresponding hashes can be found in the IoC section below. \nThe workstation used to store the .zip archives containing internal banking documents was compromised on Day 9 using domain \nadmin credentials. On that day, attackers remotely dialed into the workstation and started accessing various network locations in an \nattempt to find various internal banking application files and documents.\nFrom Day 10 to Day 27 , the same workstation was used to connect to other internal network server.\nOn Day 28  at 10:43:57 and 19:53:49, two .zip archive containing internal documents were created. \nOn Day 30 at 10:53:50, a third .zip archive was created, and it was deleted at 15:34:38.\nOn Day 46, attackers deleted a series of documents and folders from the workstation, potentially to cover their tracks and leave no \nevidence regarding the collected documents.[12]\nWhite PaperCobalt Strike Beacon Capabilities\nThe Cobalt Strike beacon is a malicious agent implant that, once dropped on a compromised system, calls back to the attacker and \nchecks for new commands to be executed on the compromised system. This versatile tool can support two types of communication \nmechanisms: asynchronous and interactive. The asynchronous mode keeps commands in a queue and, when the beacon connects \nto a C&C, it downloads commands, executes them, and finally reports results to the C&C server. This can be particularly useful when \ntrying to keep a low network footprint and not trigger any alarms by constantly “chatting” back and forth with the C&C server. \nWhile the asynchronous communication mode is also known as “low and slow”, in the sense that it becomes inactive when \nan internet connection is not present, the interactive communication mode offers real-time interaction with the compromised \nworkstation. \nOverall framework capabilities include, but are not limited to, executing shell commands, uploading and downloading files, recording \nkeystrokes and taking screenshots, escalating privileges, deploying exploits, bypassing User Account Control (UAC), and even \ndeploying memory scraping tools, such as Mimikatz, or enumerating Active Directory (AD) hosts.\nBy supporting malleable communication with the C&C server, it can help attackers blend malicious traffic as legitimate, by allowing \nthem to transform and store data, interpret it backwards, and extract and recover that data from a transaction. \nCobalt Strike Framework capabilities\n• different commands can be executed (some leave traces in the events)\n• session passing - to hijack sessions\n• alternate parent processes\n• upload and download files\n• file System Commands (listfiles, make/remove directories etc.)\n• Keystrokes and Screenshots (the tools for these actions are injected in different processes)\n• SOCKS Proxy - set up a SOCKS proxy server to tunnel traffic through Beacon\n• Reverse Pivoting\n• Privilege Escalation \n• Elevate with an Exploit\n• Elevate with Known Credentials\n• Get SYSTEM - token impersonation for the SYSTEM user\n• UAC Bypass\n• Privileges - enable the privileges assigned to your current access token\n• Mimikatz - Beacon integrates Mimikatz (although in other cases it can use different tools such as Modified Windows Vault \nPassword Dumper or Hook Password Change)\n• Credential and Hash Harvesting - injects into LSASS and dumps the password hashes for local users on the current system\n• Port Scanner\n• Network and Host Enumeration - interrogates and discovers targets in a Windows active directory network\n• Kerberos Tickets - inject a Kerberos ticket in the current session, making the interaction with remote systems possible using \nthe current tickets’ rights\n• Lateral Movement - lateral movement can be performed when a domain admin or a domain user that has admin on the target [13]\nWhite PaperConclusions\nThe Carbanak group, which has a long track record of compromising infrastructure belonging to financial institutions, is still \nactive. Its purpose remains to manipulate financial assets, such as transferring funds from bank accounts or taking over ATM \ninfrastructures and instructing them to dispense cash at predetermined time intervals. \nBitdefender’s investigation shows the attackers’ main methods remain to quietly infiltrate the infrastructure by establishing a \nfoothold on an employee’s system, then move laterally across the infrastructure or elevate privileges to find critical systems that \nmanage financial transactions or ATM networks.\nThis attack falls in line with previous objectives observed in past attacks on other financial institutions, as the cybercriminal \norganization targeted the ATM network to reach systems belonging to key people within the organization who have access to ATM \nsystems. \nIf the attack had succeeded, it would have given hackers control over the ATM network, while money mules would have been \nstanding by the ATM machines at pre-set time intervals to cash them out. They could have also been  able to reset the cash-out limit \non ATMs, using a predetermined / preauthorized card. This way, money mules could have extracted the same amount over and over, \nwithout the ATMs reporting any transactions to the bank.\nIt is not uncommon in a targeted attack for phishing emails to bypass anti-spam solutions deployed at the mail server level, which \nis why it is good practice to deploy an in-depth security model that ensures URL filtering, behavior-based detection techniques and \nsandboxing, aside from classical anti-malware solutions. An enterprise-level solution that looks at both network traffic and endpoint \nbehavior would observe lateral movements by the attacker and flag them for review by a security analyst.\nThe damage observed throughout the investigation process was limited to access of internal documents on the compromised \nsystems and user account credentials leaked.  [14]\nWhite PaperAppendix A: IOCs\nFile IOCs:\nFilename md5\nsmrs.exe D68351f754a508a386c06946c8e79088 \nsmrs.exe 341917d17440ee8a334b202eb0378108\njava.exe d90ecd6c825ce236838112898e1c4a2e\n94563784.doc d117c73e353193118a6383c30e42a95f\nWRF{8F0C5F8E-18A3-48CE-A2F4-2F4DB1B14E94}.tmp b8fc470b9665b33d2071034fdfd6629c\nKbhpQIcahFCuZwq.sct bb784d55895db10b67b1b4f1f5b0be16\nMGsCOxPSNK.txt 4bee6ff39103ffe31118260f9b1c4884\ncqHfjCkTtMwG.doc c2a9443aac258a60d8cace43e839cf9f\ntCrrDqBQoCcEkbnK.txt 581c2a76b382deedb48d1df077e5bdf1\nDLL dropper f0645bd9367faf4e21a9c5e8c132bed7\nDLL dropper 34a58e62866e5c17db61ee5f95d52c58\nDLL dropper 38242fb29d7cb82a4ffd651189d9821e\nDLL dropper f0e52df398b938bf82d9e71ce754ab34\n303F1428C3F.txt eb561d46c6283c632df88bd20ade6df4\n9D01CA.txt bbaee5d936a3809f46fd409b8442f753\nrad353F7.tmp 63c98b8c34ee9261c0068c7f0435a9f9\njusched.exe d68351f754a508a386c06946c8e79088\nnusb1mon.exe ddb9553c6e4e4908b5c7fbbdc4795d6c\nnetscan.exe 1e94f1fdf5ace5e57d8b7832ea2da22e\nnetscan.exe e7aa5608c81ba4fcd8d166501b90fc06\npsexec.exe 27304b246c7d5b4e149124d5f93c5b01\npsexesvc.exe 75b55bb34dac9d02740b9ad6b6820360\npsexec.exe a7f7a0f74c8b48f1699858b3b6c11eda\npsexesvc.exe 87dfac39f577e5f52f0724455e8832a8\nNetwork IOCs:\nswift-fraud[.]com/documents/94563784.doc downloads initial doc\ncloud[.]yourdocument[.]biz/robots.txt downloads DLL dropper\nnl[.][redacted][.]kz/robots.txt downloads JavaScript backdoor\nnl[.][redacted][.]kz/api/v1JavaScript backdoor C&C - gets commands \nand executes them\n94.140.116.69\n185.206.145.227\n45.56.162.8\n94.156.35.118\n185.243.115.28\n185.206.146.226\n94.140.116.176[15]\nWhite PaperAppendix B:\nsmrs.exe (d68351f754a508a386c06946c8e79088) \nDownloader that downloads a shellcode, which in turn downloads the beacon.\nsmrs.exe (341917d17440ee8a334b202eb0378108)\nCobalt Strike beacon that’s being deployed on affected workloads.\njusched.exe (d68351f754a508a386c06946c8e79088)\nDownloader that downloads a shellcode, which in turn downloads the beacon. Same file/hash as “smrs.exe”, just under a different \nname.\nnusb1mon.exe (ddb9553c6e4e4908b5c7fbbdc4795d6c)\nTool that takes screenshots at specific time intervals. \n Bitdefender-WhitePaper-APTBluePrint-CREAT3496-31M1416s-en_EN\nBitdefender is a global cybersecurity leader protecting over 500 million systems in more than 150 countries. Since 2001, Bitdefender innovation has consistently delivered award-\nwinning security products and threat intelligence for the smart connected home, mobile users, modern businesses and their networks, devices, data centers and Cloud infrastructure. \nToday, Bitdefender is also the provider of choice, embedded in over 38% of the world’s security solutions. Recognized by industry, respected by vendors and evangelized by customers, \nBitdefender is the cybersecurity company you can trust and rely on.\nAll Rights Reserved. © 2019 Bitdefender. All  trademarks, trade names, and products referenced herein are property of their respective owners. Bitdefender is a global security technology company that delivers solutions in more than 100 countries through a network of \nvalue-added alliances, distributors and reseller partners. Since 2001, Bitdefender has consistently produced award-winning \nbusiness and consumer security technology, and is a leading security provider in virtualization and cloud technologies. Through \nR&D, alliances and partnership teams, Bitdefender has elevated the highest standards of security excellence in both its number-\none-ranked technology and its strategic alliances with the world’s leading virtualization and cloud technology providers. More \ninformation is available at http://www.bitdefender.com/.\nAll Rights Reserved. © 2018 Bitdefender. All trademarks, trade names, and products referenced herein are property of their \nrespective owners. FOR MORE INFORMATION VISIT: enterprise.bitdefender.com."
}