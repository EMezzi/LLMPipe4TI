{
    "title": "zero-day in windows kernel transaction manager (cve-2018-8611) _ securelist",
    "text": "Share post on:\nTHERE ARE 3 COMMENTS\nExecutive summary\nIn October 2018, our AEP (Automatic Exploit Prevention) systems detected an attempt to exploit a vulnerability in the\nMicrosoft Windows operating system. Further analysis led us to uncover a zero-day vulnerability in ntoskrnl.exe. We\nreported it to Microsoft on October 29, 2018. The company confirmed the vulnerability and assigned it CVE-2018-8611 .\nMicrosoft just released a patch, part of its December update, crediting Kaspersky Lab researchers Boris Larin  (Oct0xor ) and\nIgor Soumenkov  (2igosha ) with the discovery.\nThis is the third consecutive exploited Local Privilege Escalation vulnerability in Windows we discovered this autumn using\nour technologies. Unlike the previously reported vulnerabilities in win32k.sys ( CVE-2018-8589  and CVE-2018-8453 ), CVE-\n2018-8611 is an especially dangerous threat – a vulnerability in the Kernel Transaction Manager driver. It can also be used to\nescape the sandbox in modern web browsers, including Chrome and Edge, since syscall filtering mitigations do not apply to\nntoskrnl.exe system calls.\nJust like with CVE-2018-8589, we believe this exploit is used by several threat actors including, but possibly not limited to,\nFruityArmor and SandCat. While FruityArmor is known to have used zero-days before, SandCat is a new APT we discovered\nonly recently. In addition to this zero-day and CHAINSHOT, SandCat also uses the FinFisher / FinSpy framework.\nKaspersky Lab products detected this exploit proactively through the following technologies:\n1. Behavioral detection engine and Automatic Exploit Prevention for endpoint products\n2. Advanced Sandboxing and Anti Malware engine for Kaspersky Anti Targeted Attack Platform (KATA)\nKaspersky Lab verdicts for the artifacts used in this and related attacks are:\nHEUR:Exploit.Win32.Generic\nHEUR:Trojan.Win32.Generic\nPDM:Exploit.Win32.Generic\nBrief details – CVE-2018-8611 vulnerability\nCVE-2018-8611 is a race condition that is present in the Kernel Transaction Manager  due to improper processing of\ntransacted file operations in kernel mode.\nThis vulnerability successfully bypasses modern process mitigation policies, such as Win32k System call Filtering  that is used,\namong others, in the Microsoft Edge Sandbox and the Win32k Lockdown Policy  employed in the Google Chrome Sandbox.\nCombined with a compromised renderer process, for example, this vulnerability can lead to a full Remote Command\nExecution exploit chain in the latest state-of-the-art web-browsers.\nWe have found multiple builds of exploit for this vulnerability. The latest build includes changes to reflect the latest versions\nof the Windows OS.\nA check for the latest build at the time of discovery: Windows 10 Redstone 4 Build 17133\nSimilarly to CHAINSHOT, this exploit heavily relies on the use of C++ exception handling mechanisms with custom error\ncodes.\nTo abuse this vulnerability exploit first creates a named pipe and opens it for read and write. Then it creates a pair of new\ntransaction manager objects , resource manager objects , transaction objects  and creates a big number of enlistment objects\nfor what we will call “Transaction #2”. Enlistment is a special object that is used for association between a transaction and a\nresource manager. When the transaction state changes associated resource manager is notified by the KTM. After that it\ncreates one more enlistment object only now it does so for “Transaction #1” and commits all the changes made during this\ntransaction.\nAfter all the initial preparations have been made exploit proceeds to the second part of vulnerability trigger. It creates\nmultiple threads and binds them to a single CPU core. One of created threads calls NtQueryInformationResourceManager\nin a loop, while second thread tries to execute NtRecoverResourceManager  once. But the vulnerability itself is triggered in\nthe third thread. This thread uses a trick of execution NtQueryInformationThread  to obtain information on the latest\nexecuted syscall for the second thread. Successful execution of NtRecoverResourceManager  will mean that race condition\nhas occurred and further execution of WriteFile  on previously created named pipe will lead to memory corruption.\nProof of concept: execution of WriteFile with buffer set to 0x41\nAs always, we provided Microsoft with a proof of concept for this vulnerability, along with source code. And it was later\nshared through Microsoft Active Protections Program ( MAPP ).\nMore information about SandCat, FruityArmor and CVE-2018-8611 is available to customers of Kaspersky Intelligence\nReports. Contact: intelreports@kaspersky.com\nAPT MICROSOFT WINDOWS  PROOF-OF-CONCEPT  TARGETED ATTACKS  ZERO-DAY VULNERABILITIES\nRelated Posts\nBob\nPosted on December 13, 2018. 1:29 am\nCare to share your IDA color scheme with the public? It looks really nice.\nREPLY\nBoris Larin\nPosted on December 18, 2018. 6:26 pm\nHi Bob.\nBasically its a modified version of https://github.com/eugeii/ida-consonance  + my plugin\nhttps://github.com/oct0xor/highlight2  to highlight call instructions.\nREPLY\nBehnam A.Shamshirsaz\nPosted on December 13, 2018. 1:40 pm\nAnd what will be happen after crash ? (memory corruption) , is it possible to execute a malware code inside crashed\nmachine or it is just a crash making mechanism ?\nREPLY\nLEAVE A REPLY\nYour email address will not be published.  Required fields are marked *\nEnter your comment here\nName *\nEmail *\nSave my name, email, and website in this browser for the next time I comment.\n \nSUBMIT\nI'm not a robot\nreCAPTCHA\nPrivacy  - Terms\n RESEARCH\nZero-day in Windows Kernel\nTransaction Manager (CVE-2018-8611)\nBy Boris Larin , Vladislav Stolyarov , Anton Ivanov  on December 12, 2018. 8:00 am\n \nNotify me when new comments are added.\nIN THE SAME CATEGORY\nAssessing the impact of protection from\nweb miners\nAgent 1433: remote attack on Microsoft\nSQL Server\nHow to steal a million (of your data)\nOn the IoT road: perks, beneﬁts and\nsecurity of moving smartly\nHow we hacked our colleague’s smart\nhome\n© 2020 AO Kaspersky Lab.  All Rights Reserved. \nRegistered trademarks and service marks are the property of their respective owners.\nContact us  | Privacy Policy  | License AgreementEmail\n I agree to provide my email address to “AO Kaspersky\nLab” to receive information about new posts on the\nsite. I understand that I can withdraw this consent at\nany time via e-mail by clicking the “unsubscribe” link\nthat I find at the bottom of any e-mail sent to me for\nthe purposes mentioned above.SUBSCRIBE\nOperation AppleJeus Sequel\n OilRig’s Poison Frog – old\nsamples, same trick\nKaspersky Security Bulletin\n2019. Statistics\nTHREATS\n CATEGORIES\n TAGS\n STATISTICS ENCYCLOPEDIA DESCRIPTIONS KSB 2019\n English\nSolutions\n Industries\n Products\n Services\n Resource Center\n Contact Us GDPR GET IN TOUCH\n "
}