{
    "title": "cve-2014-0497 – a 0-day vulnerability _ securelist",
    "text": "Share post on:\nTHERE IS 1 COMMENT\nA short while ago, we came across a set of similar SWF exploits and were unable to determine which vulnerability they\nexploited.\nWe reported this to Adobe and it turned out that these ITW exploits targeted a 0-day vulnerability. Today, Adobe released a\npatch  for the vulnerability.\nThis post provides a technical analysis of the exploits and payload that we discovered.\nAll in all, we discovered a total of 11 exploits, which work on the following versions of Adobe Flash Player:\n11.3.372.94\n11.3.375.10\n11.3.376.12\n11.3.377.15\n11.3.378.5\n11.3.379.14\n11.6.602.167\n11.6.602.180\n11.7.700.169\n11.7.700.202\n11.7.700.224\nAll of the exploits exploit the same vulnerability and all are unpacked SWF files. All have identical actionscript code, which\nperforms an operating system version check. The exploits only work under the following Windows versions: XP, Vista, 2003\nR2, 2003, 7, 7×64, 2008 R2, 2008, 8, 8×64. Some of the samples also have a check in place which makes the exploits\nterminate under Windows 8.1 and 8.1 x64.\nOperating system version check algorithm\nIf the OS version check is successful, control is passed to functions which assemble ROP chains depending on the Flash\nPlayer version. Curiously, there are two such functions – one for Windows 8 / 8×64 and the other for all other versions of\nWindows.\nThe algorithm that checks Flash Player version and assembles an\nROP chain\nNext, a shellcode specific to the version of Windows used is generated and the vulnerability is exploited.\nCode fragment which generates the shellcode\nWe discovered three types of shellcode. The first is a primitive shellcode that reads an executable named a.exe from an SWF\nfile and drops it to the hard drive. Only one of the 11 exploits in our possession (all detected by Kaspersky Lab products as\nHEUR:Exploit.SWF.Agent.gen) included a payload, but this is discussed below.\nThe shellcode that reads an embedded file from an exploit and\ndrops it to the hard drive\nThe second type downloads and executes a file from a URL passed in the SWF file’s parameters. Unfortunately, since we do\nnot have the containers that can pass parameters (html/docx), we were unable to check what is downloaded and from\nwhere.\nCode which inserts the URL passed in parameters into the\nshellcode (+ checks the Flash Player type and whether a\ndebugger is present)\nThe third shellcode type, which is only present in some of the files, is the most interesting. Its main purpose is to use\nMessageBox to display a dialog window with the following strings:\n“Oops – what happened ?X ”\n“You have been owned by CorelanX ”\nAs for the SWF files, we found out with the help of KSN that they were embedded into .docx documents with the following\nKorean names:\nA machine-generated translation of these names reads as follows: “List of the latest Japanese AV wind and how to use\ntorrents.docx”.\nWe discovered that these exploits had been detected on three different user machines, one of which worked under Mac OS\n10.6.8 and the other two under Windows 7. On the Mac user’s machine, the exploits were detected in an email attachment.\nOn the Windows 7 machines, they were in a browser cache, but this does not mean the files were not loaded from an email\nattachment, since Outlook can call Internet Explorer components to open files. Judging by the IP addresses, all these users\nare located in China. The browser used was SogouExplorer, which originates from China, and the mailbox was hosted on\n163.com. All of this may be an indication that the .docx document with the 0-day exploit was distributed via a targeted\nemail mailing.\nAs for the payload, only one exploit included an executable file. The file is a primitive downloader which downloads several\nfiles encrypted using Microsoft CryptoAPI from a level 3 domain (thirdbase.bugs3.com) of the free hosting service\nbugs3.com. The downloader (detected by Kaspersky Lab products as Trojan-Downloader.Win32.Agent.hdzh) is, as\nmentioned above, primitive; it includes a string linking to a local pdb file on the developer’s computer –\n“d:.Work.Coding.WorkspacedownLoaderReleasedLoad.pdb” –\nand uses a simple string decryption algorithm:\nString decryption algorithm in downloader dropped by\nan SWF exploit\nWe managed to obtain two executables out of (presumably) three from the server mentioned above. The first file (detected\nas Trojan-Spy.Win32.Agent.cjuj) steals mailbox passwords from a variety of programs (Foxmail, OperaMail, Opera, Mozilla\nFirefox, Safari, IncrediMail, Pidgin, Thunderbird etc.) and steals data from forms on the following login pages:\nhttp://twitter.com\nhttp://facebook.com\nhttp://passport.yandex.ru/passport\nhttp://www.yandex.ru\nhttp://qip.ru\nhttp://mail.qip.ru\nhttps://login.nifty.com/service/login\nhttp://e.mail.ru/cgi-bin/login\nhttp://mail.ru\nhttp://mail.126.com\nhttp://secure.zapak.com/mail/zapakmail.php\nhttps://lavabit.com/apps/webmail/src/login.php\nhttp://www.bigstring.com\nhttp://www.gmx.com\nhttp://passport.sohu.com/indexaction.action\nhttp://www.sohu.com\nhttps://www.zoho.com/login.html\nhttp://mail.sina.com.cn\nhttp://members.sina.com/index.php\nhttp://www.care2.com/passport/login.html\nhttp://www.mail.com/int\nhttps://fastmail.fm/mail\nhttps://www.inbox.com/login.aspx\nhttp://www.gawab.com\nhttp://mail.163.com\nhttp://registration.lycos.com/login.php\nhttp://www.mail.lycos.com\nhttps://my.screenname.aol.com/_cqr/login/login.psp\nhttps://edit.bjs.yahoo.com/config/login\nhttps://login.yahoo.co.jp/config/login\nhttps://login.yahoo.com/config/login_verify2\nhttps://login.live.com/login.srf\nhttps://www.google.com/accounts/servicelogin\nThe second file, a backdoor detected as Backdoor.Win32.Agent.dfdq, works in conjunction with the first. We discovered\nthat it uses C&C servers located at the following addresses:\nsales.eu5.org\nwww.mobilitysvc.com\njavaupdate.flashserv.net\nIn the process of analyzing the bot, we managed to receive a JPEG file with a .dll embedded in it from several servers. If the\nfile is opened in a standard viewer, you will see an image of a heart:\nHowever, in reality, a dynamic library named kboc.dll (detected as Backdoor.Win32.Agent.dfdr) is extracted from the JPEG\nand injected into the svchost.exe process. The library communicates to the C&C; however, we have not been able to obtain\nany additional files. We are continuing to follow the bot’s activity.\nP.S. Kudos to my colleagues Alexander Polyakov and Anton Ivanov for discovering the 0-day vulnerability.\nADOBE FLASH  MALWARE TECHNOLOGIES  VULNERABILITIES AND EXPLOITS  ZERO-DAY VULNERABILITIES\nRelated Posts\nirving Jackson\nPosted on July 14, 2014. 7:17 pm\nEverything you stated as above mentioned is correct. What do we do to get rid of it for windows 7., Firefox – Internet\nExplorer?\nREPLY\nLEAVE A REPLY\nYour email address will not be published.  Required fields are marked *\nEnter your comment here\nName *\nEmail *\nSave my name, email, and website in this browser for the next time I comment.\n \nSUBMIT\nI'm not a robot\nreCAPTCHA\nPrivacy  - Terms\n \nIN THE SAME CATEGORY\nAn advertising dropper in Google Play\nNew FinSpy iOS and Android implants\nrevealed ITW\nDNS Manipulation in Venezuela in regards\nto the Humanitarian Aid Campaign\nDarkVishnya: Banks attacked through\ndirect connection to local network\nKoﬀeyMaker: notebook vs. ATM\nINCIDENTS\nCVE-2014-0497 – A 0-day\nVulnerability\nBy Vyacheslav Zakorzhevsky  on February 5, 2014. 8:44 pm\n \nNotify me when new comments are added.\n© 2020 AO Kaspersky Lab.  All Rights Reserved. \nRegistered trademarks and service marks are the property of their respective owners.\nContact us  | Privacy Policy  | License AgreementEmail\n I agree to provide my email address to “AO Kaspersky\nLab” to receive information about new posts on the\nsite. I understand that I can withdraw this consent at\nany time via e-mail by clicking the “unsubscribe” link\nthat I find at the bottom of any e-mail sent to me for\nthe purposes mentioned above.SUBSCRIBE\nCookiethief: a cookie-\nstealing Trojan for Android\nMokes and Buerak\ndistributed under the guise\nof security certificates\nMobile malware evolution\n2019\nTHREATS\n CATEGORIES\n TAGS\n STATISTICS ENCYCLOPEDIA DESCRIPTIONS KSB 2019\n English\nSolutions\n Industries\n Products\n Services\n Resource Center\n Contact Us GDPRCompanyAccount GET IN TOUCHSolutions for: Home Products  Small Business 1-50 employees Medium Business 51-999 employees Enterprise 1000+ employees\nWe use cookies to make your experience of our websites better. By using and further navigating this website you accept this. Detailed\ninformation about the use of cookies on this website is available by clicking on more information .ACCEPT AND CLOSE\n "
}