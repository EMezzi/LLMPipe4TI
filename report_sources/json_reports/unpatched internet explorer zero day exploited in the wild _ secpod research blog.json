{
    "title": "unpatched internet explorer zero day exploited in the wild _ secpod research blog",
    "text": "© 2020 Ascent. All rights reserved  | Ascent by ZetaMatic\n +1 918 625 3023   info@secpod.com \n Home About Categories Contact\n← Critical Windows CryptoAPI Vulnerability demands prompt action\nCritical Security Updates released for Cisco FMC →\nLeave a Reply\nYour email address will not be published.  Required fields are marked *\nStart typing...\nName *\nEmail *\nWebsite\nPOST COMMENTJAN\n21\n0Unpatched Internet Explorer Zero Day exploited in the wild\nPosted by Vidita V Koushik\nMicrosoft  has released an emergency advisory  for an unpatched zero-day vulnerability  in\nInternet Explorer . Microsoft is also aware of limited targeted attacks in the wild . This\nvulnerability was discovered by Clement Lecigne of Google’s Threat Analysis Group.\nThe fix for this zero-day would be released as a part of the next Patch Tuesday updates. And\nuntil then, the vulnerable Internet Explorers would be open to attack. Microsoft has also\nadded that, this vulnerability can be exploited when any website utilizing jscript  is accessed\nusing a vulnerable IE browser.\nUpdate:\n360 security experts have attributed the active exploitation  of CVE-2020-0674 to an APT\ngroup named DarkHotel (APT-C-06). DarkHotel APT is known to have an East Asian\nbackground and has been operating since at least 2007. Their main targets include\ngovernment organizations and enterprises.\nCVE-2020-0674 : The scripting engine memory corruption vulnerability\nAccording to Microsoft, CVE-2020-0674  is a remote code execution vulnerability in Internet\nExplorer due to improper handling of objects in memory by the scripting engine. Successful\nexploitation could allow an attacker to execute arbitrary code  in the context of the current\nuser. If the targeted user has administrative privileges, then the attacker is granted\nadministrator rights after exploitation, which he can use to install programs; view, change or\ndelete data; or create new accounts with full user rights and completely compromise the\ntarget system .\nAny application which supports embedding Internet Explorer or its scripting engine\ncomponent would be a potential attack vector for this vulnerability. An attacker can host a\nmalicious website designed to exploit the underlying vulnerability in Internet Explorer or\ncraft HTML documents, PDF files,  Microsoft Office documents, or any other documents\nwhich support embedded Internet Explorer scripting engine content. A user can be tricked\ninto visiting the malicious website by clicking on links or convinced to open crafted files\ndelivered through spearphishing emails .\nImpact\nAn attacker can remotely execute arbitrary code  on the target system and take control of\nthe entire system in some cases.\nAffected Systems\nInternet Explorer 11 Internet Explorer 10 Internet Explorer 9\nWindows 10 for 32/64-bit Systems\nWindows 10 Version 1803 for\n32/64-bit Systems\nWindows 10 Version 1809 for\n32/64-bit Systems\nWindows 10 Version 1909 for\n32/64-bit Systems\nWindows 10 Version 1709 for\n32/64-bit Systems\nWindows 10 Version 1903 for\n32/64-bit Systems\nWindows 10 Version 1607 for\n32/64-bit Systems\nWindows 7 Service Pack 1 for\n32/64-bit Systems\nWindows 8.1 for 32/64-bit systems\nWindows RT 8.1\nWindows Server 2008 R2 SP1\nfor x64-based Systems\nWindows Server 2012\nWindows Server 2012 R2\nWindows Server 2016\nWindows Server 2019Windows Server 2012Windows Server 2008 for\n32/64 bit Systems SP 2\nMitigation/Solution\nWe are not aware of any updates released by Microsoft to fix the vulnerability. However,\nMicrosoft has provided a workaround which is recommended to be applied by users who are\nat elevated risk. Implementation of this workaround could result in reduced functionality for\ncomponents or features that rely on jscript.dll.\nRestrict access to JScript.dll\nFor 32-bit systems, enter the following command at an administrative command prompt:\n    takeown /f %windir%\\system32\\jscript.dll\n    cacls %windir%\\system32\\jscript.dll /E /P everyone:N\nFor 64-bit systems, enter the following command at an administrative command prompt:\n    takeown /f %windir%\\syswow64\\jscript.dll\n    cacls %windir%\\syswow64\\jscript.dll /E /P everyone:N\n    takeown /f %windir%\\system32\\jscript.dll\n    cacls %windir%\\system32\\jscript.dll /E /P everyone:N\nNOTE: This workaround must be reverted before installing any future updates.\nUpdate:\n0patch has provided a micropatch  for CVE-2020-0674 which acts a  ‘kill switch for vulnerable\njscript.dll’. This patch is also known to avoid the negative side effects of Microsoft’s\nworkaround. When Microsoft releases a patch for this vulnerability, it will be superior to the\nenabled micropatch.\nWe will continue to monitor this vulnerability and update as and when a fix is available. It is\nsuggested for users to be extremely cautious before opening any suspicious links or\ndocuments which might trigger the vulnerability\nArticle Name Unpatched Internet Explorer Zero\nDay exploited in the wild\nAuthor Vidita V Koushik\nPublisher Name SecPod Technologies\nPublisher Logo\n Endpoint Security , Security Research\n Internet Explorer , Internet Explorer Zero-Day , microsoft , Microsoft Vulnerabilities , Remote Code ExecutionSummary\nRecent Posts\nCategoriesFrom Never Wanted to be in\nTechnology to Building Products\nfor SecPod\nMeasures To Secure Oracle\nSolaris OS\nBeware: Critical Wormable SMBv3\nFlaw in Windows Systems\nNew class of attacks discovered in\nIntel Processors\nPatch Tuesday: Microsoft Security\nBulletin Summary for March 2020\nCEO Speak\nComputer Engineering\nCulture\nEndpoint Security\nInfographics\nSCAP Feed\nSecPod\nSecurity Research\n "
}