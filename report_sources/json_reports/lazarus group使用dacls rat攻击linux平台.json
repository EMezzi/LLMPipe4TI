{
    "title": "lazarus group使用dacls rat攻击linux平台",
    "text": "13 MIN READ\n12 MIN READ\n1 post →\nDACLS\nDacls, the Dual platform RAT\nBackground On October 25, 2019, a suspicious ELF file (80c0efb9e129f7f9b05a783df6959812) was flagged by our new threat monitoring system. At\nfirst glance, it seems to be just another one of the regular botnets, but\nROBOTO\nThe awaiting Roboto Botnet\nBackground introduction On August 26, 2019, our 360Netlab Unknown Threat Detection System highlighted a suspicious ELF file\n(4cd7bcd0960a69500aa80f32762d72bc) and passed along to our researchers to take a closer look, upon further analysis, we\n360 Netlab Blog ‐ Network Security Research Lab at 360  © 2020\n  Latest Posts Twitter Ghost\nDacls\nDacls, the Dual platform RAT17 DECEMBER 2019  / DACLS\nLazarus Group 使用Dacls RAT 攻击Linux\n平台\nTHIS POST WAS A COLLABORATION BETWEEN\nJINYE , GENSHEN YE\n背景介绍\n2019年10月25号，360Netlab 未知威胁检测系统发现一个可疑的 ELF文件\n(80c0efb9e129f7f9b05a783df6959812) 。一开始，我 们以为这是在我们发现的Unknown\nBotnet中比较平凡的一个，并且在那 时候VirusTotal 上有 2款杀毒引擎能 够识别。当我们\n关联分析它的相关 样本特征和 IoC时，我们发现这 个案例跟 Lazarus Group 有关，并决定\n深入分析它。\n目前，业界也从未公开 过关于 Lazarus Group 针对 Linux平台的攻 击样本和案例。通 过详\n细的分析，我 们确定这是一款功能完善，行 为隐蔽并适用于 Windows 和Linux平台的 RAT\n程序，并且其幕后攻 击者疑似 Lazarus Group 。\n事实上，这款远程控制软件相关样本早在 2019年5月份就已 经出现，目前在 VirusTotal 上\n显示被 26款杀毒软件厂商识别为泛型的恶意软件，但它还是不为人所知，我 们也没有找\n到相关分析 报告。所以，我 们会详细披露它的一些技 术特征，并根据它的文件名和硬 编码\n字符串特征将它命名 为Dacls。\nDacls 概览\nDacls是一款新型的 远程控制软件，包括 Windows 和Linux版本并共用 C2协议，我们将它\n们分别命名为Win32.Dacls 和Linux.Dacls 。它的功能模 块化，C2协议使用 TLS和RC4双层\n加密，配置文件使用 AES加密并支持 C2指令动态更新。其中 Win32.Dacls 的插件模 块是通\n过远程URL动态加载，而Linux版本的插件是直接 编译在Bot程序里。我 们已经确认在\nLinux.Dacls 中包含 6个插件模 块：执行命令，文件管理， 进程管理，测试网络访问，C2连接\n代理，网络扫描。\n如何关联上 Lazarus Group\n 先，我们通过样本80c0efb9e129f7f9b05a783df6959812 中的硬编码字符串特征  c_291\n0.cls和k_3872.cls ，在VirusTotal 上找到了 5个样本，我们从这些样本代码和相同的 C2\n指令码上可以确 认它们是同  套RAT程序，并且分 别适 于Windows 和Linux平台。\n其中  个Win32.Dacls 样本6de65fc57a4428ad7e262e980a7f6cc7 ，它的下载地址为http\ns://thevagabondsatchel.com/wp-content/uploads/2019/03/wm64.avi ，在VirusTotal\n社区  户@raeezabdulla 留 中将它标记为 Lazarus Group ，并引  了 篇报告《CES\nThemed Targeting from Lazarus 》。然后，我 们通过这个下载地址我们关联到另  个\nNukeSped 样本b578ccf307d55d3267f98349e20ecff1 ，它的下载地址为http://thevaga\nbondsatchel.com/wp-content/uploads/2019/09/public.avi 。在2019年10 份，这个\nNukeSped 样本b578ccf307d55d3267f98349e20ecff1 曾被推特  户@cyberwar_15 标记\n为Lazarus Group 。\n另外，我们也在 Google上搜到到很多 Lazarus Group 的分析报告和  些开源威 胁情报数\n据，并指出 thevagabondsatchel.com 曾被 Lazarus Group 于存放样本。\n所以，我们推测Dacls RAT 的幕后攻 击者是 Lazarus Group 。\nDownloader 服务器\n我们在疑似被感染的下 载服务器http://www.areac-agr.com/cms/wp-content/uploads\n/2015/12/ 上找到了一系列 样本，其中包括 Win32.Dacls 和Linux.Dacls ，开源程序 Socat，\n以及 Confluence CVE-2019-3396 Payload 。所以，我 们推测Lazarus Group 曾经利用\nCVE-2019-3396 N-day 漏洞传播Dacls Bot 程序。\nMD5 (check.vm) = a99b7ef095f44cf35453465c64f0c70c  //Confluence CVE-2019-3396 Payload\nMD5 (hdata.dat) = 982bf527b9fe16205fea606d1beed7fa //Log Collector\nMD5 (ldata.dat) = 80c0efb9e129f7f9b05a783df6959812 //Linux Dacls Bot\nMD5 (mdata.dat) = 80c0efb9e129f7f9b05a783df6959812 //Linux Dacls Bot\nMD5 (r.vm) = a99b7ef095f44cf35453465c64f0c70c      //Confluence CVE-2019-3396 Payload\nMD5 (rdata.dat) = bea49839390e4f1eb3cb38d0fcaf897e //Windows Dacls Bot\nMD5 (sdata.dat) = e883bf5fd22eb6237eb84d80bbcf2ac9 //Open-Source Socat\n逆向分析\nLog Collector 样本分析\nMD5: 982bf527b9fe16205fea606d1beed7fa\nELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked,\nno section header\n这个样本的功能很 简单，它通过运行参数指定日志搜集接口然后收集目 标主机信息。它\n会避开扫描一些指定的根目 录和二级目录，并把检索到的文件路径写入  /tmp/hdv.log 。\nAvoid Scanning Root Directory\n/bin\n/boot\n/dev\n/etc\n/lib\n/lib32\n/lib64\n/lost+found\n/sbin\n/sys\n/tmp\n/proc\n/run\nAvoid Scanning Secondary Directory\n/usr/bin\n/usr/etc\n/usr/games\n/usr/include\n/usr/lib\n/usr/lib32\n/usr/lib64\n/usr/libexec\n/usr/sbin\n/usr/share\n/usr/src\n/usr/tmp\n/var/adm\n/var/cache\n/var/crash\n/var/db\n/var/empty\n/var/games\n/var/gopher\n/var/kerberos\n/var/lock\n/var/nis\n/var/preserve\n/var/run\n/var/yp\n日志记录格式示例\ndeep    name      type    size    last date\n0       /         D       0       000000000000\n1       bin       D       0       201911290628\n2       bash      F       1037528 201907121226\n2       bunzip2   F       31352   201907040536\n2       busybox   F       1984584 201903070712\n2       bzcat     F       31352   201907040536\n2       bzcmp     F       2140    201907040536\n....\n最后通过执行系统tar命令把日志文件 压缩tar -cvzf /tmp/hdv.rm /tmp/hdv.log  并上\n传到指定日志搜集接口。\nLinux.Dacls 样本分析\nMD5: 80c0efb9e129f7f9b05a783df6959812\nELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked,\nfor GNU/Linux 3.2.0,\nBuildID[sha1]=e14724498374cb9b80a77b7bfeb1d1bd342ee139, stripped\nLinux.Dacls Bot 主要功能包括： 执行命令，文件管理， 进程管理，测试网络访问，C2连接\n代理，网络扫描模块。\n初始化行 为\nLinux.Dacls Bot 启动后以 daemon方式后台运行，并通 过启动参数/pro，Bot PID文件/v\nar/run/init.pid 和Bot进程名/proc/<pid>/cmdline ，来区分不同运行 环境，我们猜测\n可能是用于 Bot程序升级。\n配置文件  .memcahce\nLinux.Dacls Bot 配置文件固定存放在 $HOME/.memcache ，文件内容固定 为0x8E20+4 个\n字节。如果 Bot启动后找不到配置文件，就会根据 样本中硬编码的信息，使用 AES加密生\n成默认的配置文件，当 Bot和C2 通信后还会继续更新配置文件。\n数据结构\n我们把配置文件的数据 结构信息定 义为 struct_global_cfg ，这里存放了 Bot运行参数， C2\n信息，和插件信息等。\nstruct struct_plugin_cfg_data\n{\n  int plugin_id;\n  int plugin_type;\n  int unk3;\n  char name[1040];\n};\nstruct struct_c2_content\n{\n  char content[2048];\n};\nstruct struct_global_cfg\n{\n  int session_id;\n  int unk_const1;\n  int sus_version_20190417;\n  int connect_retry_sleep_time;\n  char unk_array1[88];\n  int c2_num;\n  struct_c2_content c2_list[3];\n  char unknown_filed_186C[14340];\n  struct_plugin_cfg_data plug_cfg_data_list[15];\n};\nAES 加密算法\nAES，CBC Mode\nKey：A0 D2 89 29 27 78 75 F6 AA 78 C7 98 39 A0 05 ED\nIV：39 18 82 62 33 EA 18 BB 18 30 78 97 A9 E1 8A 92\n解密配置文件\n我们把配置文件解密后，可以看到配置文件中一些明文信息，例如：会 话ID，版本信息，\n重新连接C2时间，C2信息等，当成功 连接C2后配置文件会根据 C2指令更新，比如在配置\n文件中增加 Bot支持的插件信息，更新 C2信息等。\nC2 协议\nLinux.Dacls Bot 和C2通信主要分 为3个阶段，并采用了 TLS和RC4双层加密算法，保障数\n据通信安全。第 1阶段是建立 TLS连接，第 2阶段是双方 协议认证过 程（Malware\nBeaconing ），第 3阶段是 Bot发送RC4加密后的数据。\nSSL 连接\n协议认证\n建立 SSL连接会发送若干次 Beacon消息和 C2互相确认身份。\nCMD DIRECTION ENCRYPTED DESCRIPTION\n0x20000 send no Beacon\n0x20100 recv no Beacon\n0x20200 send no Beacon\nRC4 加密和解密流程\nRC4 Key 生成算法，完全由随机函数生成， Key长度范围：大于 0且小于 50\n置换表生成算法，根据 RC4 Key 生成 RC4加密用的置 换表\n加/解密算法，根据置 换表生成算法完成加 /解密，因为RC4是个对称加密算法，所\n以加 /解密算法是一致的\nRC4解密示例\n在完成协议认证 之后， Bot向C2发送RC4 Key 长度（头4个字节）和 RC4 Key 数据。\nC2收到加密 Key，向Bot发送密文，解密后 为0x00000700 指令，之后 Bot就会上传主机名\n相关信息 给C2。\nKey:\na3 2f c2 10 f3 92 79 c3  0e f6 e4 e5 2e 69 29 86\n0d 3a 92 f5 b7 23 fc 91  d9 46 91 55 a3 86 5a 47\n36 1d 58 2a af d1 6d 3d  49 52 23 77 bc 4d fd 49\n87 \n密文:\nfe 3c 2c d7 bf 08 e3 91  d7 00 1f d0\n明文:\n00 07 00 00 00 00 00 00  00 00 00 00 \nC2指令码表\nLinux.Dacls Bot 接受的指令 实际共12个字节，但实际有效大小 为4个字节，并分成控制两\n种模式。\n第一种模式：当第 3个字节为 0，控制 Bot主逻辑。\n以下是 0x00000700 指令对应的网络序数据包示例：模式 为0x00，指令 2为0x07控制 Bot\n上传主机名信息\n指令 1指令 2模式 未知\n00 07 00 00\n第二种模式：当第 3个字节为 1，控制加载插件逻辑。\n以下是 0x00010101 指令对应的网络序数据包示例：模式 为0x01，指令 1为0x01控制加载\n编号为1的插件\n指令 1指令 2模式 未知\n01 01 01 00\nBot收到指令后， 执行成功返回 0x20500 ，执行失败返回 0x20600 。\nC2指令表， Bot主逻辑部分\nMODULE CMD ENCRYPT DESCRIPTION\nCore 0x00000601 Yes 上传C2配置信息\nCore 0x00000602 Yes 下载配置信息保存到  $HOME/.memcache\nCore 0x00000700 Yes 要求Bot上传主机信息\nCore 0x00000900 Yes 要求Bot发送心跳信息\nC2指令表， Bot插件部分\nMODULE CMD ENCRYPT DESCRIPTION\n/bin/bash 0x00010000 Yes 执行C2下发的bash命令\n/bin/bash 0x00010002 Yes 连接到指定的 C2执行下发的系统命令\nplugin_file 0x00010100 Yes 写文件\nplugin_file 0x00010101 Yes 读文件\nplugin_file 0x00010103 Yes 删除文件\nplugin_file 0x00010104 Yes 扫描目录结构\nplugin_file 0x00010110 Yes 从指定 url下载文件\nplugin_process 0x00010200 Yes 扫描并上传主机进程相关信息\nplugin_process 0x00010201 Yes 杀死指定进程\nplugin_process 0x00010202 Yes 创建daemon进程\nplugin_process 0x00010204 Yes 获得并上报进程PID和PPID\nplugin_test 0x00010300 Yes 测试是否可以 访问指定IP\nplugin_reverse_p2p 0x00010400 Yes C2连接代理\nlogsend 0x00011100 Yes 测试是否可以 访问Log服务器\nlogsend 0x00011101 Yes 上传公网端口 扫描结果和命令 执行输出\nlogsend 0x00011102 Yes 无操作\nC2通信流程 图\n插件模块\nLinux.Dacls Bot 采用静态编译的方式将插件和 Bot本体代码编译在一起，通 过发送不同\n的指令调用不同的插件可以完成多种任 务。我们分析的样本中共包含 6个插件，由于插件\n的配置信息是一 块连续的结构体数组(0x00~0x0e) 。我们猜测Bot可能存在更多的插件。\n每个插件都会有相 应的配置信息，它 们会保存在 Bot的配置文件 $HOME/.memcache 中，在\n插件初始化 时，加载这些配置信息。\nBash 插件\nBash插件是编号为0的插件，主要支持两个功能：接收 C2服务器的下发的系统命令并执\n行；C2通过指令下发临时 C2，Bot然后连接到临时 C2并执行临时 C2下发的系统命令。\nFile 插件\nFile插件主要功能是文件管理，除了支持 对文件的读，写，删除，查找操作，还可以从指定\n的下载服务器下载文件。\nProcess 插件\nProcess插件的主要功能是 进程管理，包括： 杀死指定进程，创建daemon进程，获得当前\n进程的 PID和PPID，以及获取进程列表信息。\n如果 Linux进程中的 PID对应的/proc/<pid>/task 目录存在， Bot样本会收集如下 进程信\n息：\n从/proc/<pid>/cmdline 读取命令行全名\n从/proc/<pid>/status 中读取:\nName      // 进程名\nUid       // 用户ID\nGid       // 用户组ID\nPPid      // 父进程ID\nTest插件\nTest插件的主要功能是通 过连接C2指定的 IP地址和端口， 测试其网络连通性。\nReverse P2P 插件\nReverse P2P 插件实际上是一种 C2连接代理（ Connection Proxy ），它通过下发控制命令\n可以将指定的 C2数据完整的 转发到指定 IP端口。这在Lazarus Group 中是一种常 见的降\n低被检测风险 的技术手段，既可以减少目 标主机连接数又可以 隐藏目标主机和真 实C2的\n通信数据，在某些 场合还可以利用被感染的内网主机 进一步渗透至隔离网段。\nreverse_p2p 插件初始化\n当Bot收到指令后，先 尝试连接指定的 C2端口并发送0x21000 指令，如果 C2返回 0x21300\n说明C2连接成功。此 时Bot会连接指令中指定的目 标主机端口，如果 连接成功会返回\n0x21100 给C2说明转发连接已经建立可以 转发数据。接下来 Bot会将 C2发送过来的数据\n完整的转发给目标主机，同时将目标主机的返回数据完整的返回 给C2，直至任何一方中\n断连接。\n以下是 Reverse P2P 插件工作流程 图：\nLogSend 插件\nLogSend 插件主要包括 3个功能：测试连接Log服务器，随机扫描全网 8291端口并上 报给\nLog服务器，执行耗时较长的系统命令并将控制台 输出结果实时上报给 Log服务器。\nLogSend 插件初始化\nLogSend 相关操作回 调函数\n测试连接Log服务器\nBot收到指令后会向 Log服务器发送一个测试请求。如果 Log服务器返回{\"result\":\"ok\"\n}说明测试成功，此时C2就可以下 发更多的 LogSend 指令。\n使用 C2指定的 HTTP接口地址，内置的 User-Agent ，发送POST请求\nPOST /%s HTTP/1.0\nHost: %s\nContent-Length: 9\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nCache-Control: no-cache\nConnection: close\nlog=check\n随机扫描全网 8291端口并上 报给 Log服务器。\n当Bot收到该指令后会按照 3种规则随机生成公网 IP地址并尝试连接8291端口，如果 连接\n成功就向 log server 回传扫描结果。\nIP生成规则：\nip = <part1>.<part2>.<part3>.<part4>\nrule1: part1 != 127\nrule2: part1 == 172 and (part2 <= 15 or part2 > 31)\nrule3: part1 != 192 and part2 != 168\nrule4: part1 != 10\n随机 IP生成算法如下\n我们可以看到 Bot硬编码 TCP/8291 端口，并调用系统connect函数进行端口扫描，只检测\n端口是否开放，不 发送Payload数据。我们知道 MikroTik Router 设备的Winbox协议工作\n在TCP/8291 端口上，并暴露在互 联网上，之前我 们也披露了 2篇文章关于 TCP/8291 端口\n威胁事件 [1][2]。\n执行耗时较长的bash命令，并将控制台 输出实时上报给 Log服务器。\n执行bash命令并转发输出给Log服务器\n所有上报的Log数据都以 HTTP POST 的方式提交。 Payload部分的格式如下：\nlog=save&session_id=<session id>&value=<log content>\n处置建议\n我们建议Confluence 用户及时更新补丁，并根据 Dacls RAT 创建的进程，文件名以及 TCP\n网络连接特征，判断是否被感染，然后清理它的相关 进程和文件。\n我们建议读者对Dacls RAT 相关 IP，URL和域名进行监控和封锁。\n相关安全和 执法机构，可以 邮件联系netlab[at]360.cn 交流更多信息。\n联系我们\n感兴趣的读者，可以在  twitter  或者在微信公众号  360Netlab  上联系我们。\nIoC list\n样本MD5\n6de65fc57a4428ad7e262e980a7f6cc7\n80c0efb9e129f7f9b05a783df6959812\n982bf527b9fe16205fea606d1beed7fa\n8910bdaaa6d3d40e9f60523d3a34f914\na99b7ef095f44cf35453465c64f0c70c\nbea49839390e4f1eb3cb38d0fcaf897e\ncef99063e85af8b065de0ffa9d26cb03\ne883bf5fd22eb6237eb84d80bbcf2ac9\n硬编码 C2 IP：\n23.81.246.179        United States        ASN19148             Leaseweb USA, Inc.  \n23.254.119.12        Canada               ASN55286             B2 Net Solutions Inc.\n23.227.196.116       United States        ASN35017             Swiftway Sp. z o.o. \n37.72.175.179        United States        ASN29802             HIVELOCITY, Inc.    \n23.227.199.53        United States        ASN35017             Swiftway Sp. z o.o. \n107.172.197.175      United States        ASN36352             ColoCrossing        \n172.93.201.219       United States        ASN20278             Nexeon Technologies, Inc.\n64.188.19.117        United States        ASN8100              QuadraNet Enterprises LLC\n74.121.190.121       United States        ASN23033             Wowrack.com         \n192.210.213.178      United States        ASN36352             ColoCrossing        \n209.90.234.34        United States        ASN23033             Wowrack.com         \n198.180.198.6        United States        ASN26658             HT  \nURL\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/check.vm\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/hdata.dat\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/ldata.dat\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/mdata.dat\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/r.vm\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/rdata.dat\nhttp://www.areac-agr.com/cms/wp-content/uploads/2015/12/sdata.dat\n 360 Netlab Blog ‐ Network Security Research Lab at 360\n—\nLazarus Group 使用 Dacls RAT 攻击Linux平台\nShare this \n "
}