{
    "title": "platinum is back _ securelist",
    "text": "In June 2018, we came across an unusual set of samples spreading throughout South and Southeast Asian countries\ntargeting diplomatic, government and military entities. The campaign, which may have started as far back as 2012, featured a\nmulti-stage approach and was dubbed EasternRoppels. The actor behind this campaign, believed to be related to the\nnotorious PLATINUM APT group, used an elaborate, previously unseen steganographic technique to conceal\ncommunication.\nAs a first stage the operators used WMI subscriptions to run an initial PowerShell downloader which, in turn, downloaded\nanother small PowerShell backdoor. We collected many of the initial WMI PowerShell scripts and noticed that they had\ndifferent hardcoded command and control (C&C) IP addresses, different encryption keys, salt for encryption (also different\nfor each initial loader) and different active hours (meaning the malware only worked during a certain period of time every\nday). The C&C addresses were located on free hosting services, and the attackers made heavy use of a large number of\nDropbox accounts (for storing the payload and exfiltrated data). The purpose of the PowerShell backdoor was to perform\ninitial fingerprinting of a system since it supported a very limited set of commands: download or upload a file and run a\nPowerShell script.\nAt the time, we were investigating another threat, which we believe to be the second stage of the same campaign. We were\nable to find a backdoor that was implemented as a DLL and worked as a WinSock NSP (Nameservice Provider) to survive a\nreboot. The backdoor shares several features with the PowerShell backdoor described above: it has hardcoded active hours,\nit uses free domains as C&C addresses, etc. The backdoor also has a few very interesting features of its own. For example, it\ncan hide all communication with its C&C server by using text steganography.\nAfter deeper analysis we realized that the two threats were related. Among other things, both attacks used the same domain\nto store exfiltrated data, and we discovered that some of the victims were infected by both types of malware at the same\ntime. It’s worth mentioning that in the second stage, all executable files were protected with a runtime crypter and after\nunpacking them we found another, previously undiscovered, backdoor that is known to be related to PLATINUM.\nOur paper only includes a description of the two previously undiscovered backdoors while the full report is available to\ncustomers of the Kaspersky Intelligence Reporting service (contact intelreports@kaspersky.com).\nSteganography backdoor\nThe main binary backdoor is installed with a dedicated dropper. When the dropper is run, it decrypts files that are embedded\ninto its “.arch” section:\nNext, it creates directories for the backdoor to operate in and saves the malware-related files in these. It normally uses\npaths like those used by legitimate software.\nTypically, the malware drops two files: the backdoor itself and its configuration file.\nAfter this, the dropper runs the backdoor, installs it to enable a persistence mechanism and removes itself. The\nconfiguration file always has a .cfg or .dat extension and contains the following options, encrypted with AES-256 CBC and\nencoded:\npr – stands for “Poll Retries” and specifies the interval in minutes after which the malware sends the C&C server a\nrequest for new commands to execute;\nht – unused;\nsl – specifies the date and time when the malware starts running. When the date arrives, the malware clears this option.\nopt – stands for “Office Hours”. This specifies the hours and minutes during the day when the malware is active;\ndie – stands for “Eradicate Days”. This specifies how many days the malware will work inside the victim’s computer;\nSection “p” lists malware C&C addresses;\nSection “t” lists legitimate URLs that will be used to ensure that an internet connection is available.\nPersistence\nThe main backdoor is implemented as a dynamic link library (DLL) and exports a function with the name “NSPStartup”. After\ndropping it, the installer registers the backdoor as a winsock2 namespace provider with the help of the\nWSCInstallNameSpace API function and runs it by calling the WSCEnableNSProvider.\nAs a result of this installation, during initialization of the “svchost -k netsvcs” process upon system startup, the registered\nnamespace provider will be loaded into the address space of the process and the function “NSPStartup” will be called.\nC&C interaction\nOnce up and running, the backdoor compares the current time against the “Eradicate Days”, activation date and “Office\nHours” values, and locates valid proxy credentials in “Credential Store” and “Protected Storage”.\nWhen all the rules are fulfilled, the backdoor connects to the malware server and downloads an HTML page.\nOn the face of it, the HTML suggests that the C&C server is down:\nHowever, this is because of the steganography. The page contains embedded commands that are encrypted with an\nencryption key, also embedded into the page. The embedded data is encoded with two steganography techniques and\nplaced inside the <--1234567890> tag (see below).\nOn line 31, the attributes “align”, “bgcolor”, “colspan” and “rowspan” are listed in alphabetical order, whereas on line 32, the\nsame attributes are listed in a different order. The first steganography technique is based on the principle that HTML is\nindifferent to the order of tag attributes. We can encode a message by permuting the attributes. Line 31 in the example\nabove contains four tags; the number of permutations in the four tags is 4! = 24, so the line encodes log (24) = 4 bits of\ninformation. The backdoor decodes line by line and collects an encryption key for the data, which is placed right after the\nHTML tags in an encoded state too, but using a second steganography technique .\nThe image above shows that the data is encoded as groups of spaces delimited with tabs. Each group contains from zero to\nseven spaces and the number of spaces represents the next three bits of data. For example, the first group on line 944\ncontains six spaces, so it will be decoded as 6  = 110 .\nDecryption of the decoded data using the decoded AES-256 CBC key is a logical continuation.\nThe result is a list of commands to execute, protected the same way as the backdoor configuration file:\nRaw command data extracted from the HTML page\nAn interpretation of the raw commands extracted from the HTML page after decryption\nCommands\nThe backdoor that we’ve discovered supports the uploading, downloading and execution of files, it can handle requests for a\nprocess list and directory list, upgrade and uninstall itself and modify its configuration file. Each command has its own\nparameters, e.g. the C&C server that it requests to download or upload files, or split a file while uploading.\nConﬁg manager\nWhile investigating further, we found another tool that turned out to be a configuration manager – an executable whose\npurpose was to create configuration and command files for the backdoors. The utility can configure more than 150 options.\nFor example, below is the result of executing the showcfg command.\nThe second command it supports is updatecfg, whose job was to put values specified by the operator into the configuration\nfile.\nAlso, the config manager supports Upload, Download, Execute, Search, UpdateConfig, AddKeyword, ChangeKeywordFile,\nChangeKey, Upgrade and Uninstall commands. After executing any of these it creates a command file, protected the same\nway as the configuration file, and stores it in the “CommandDir” directory (the path is specified in the configuration, option\n11). As described in the ‘Steganography backdoor’ section, this backdoor doesn’t handle command files and doesn’t support\ncommands such as ChangeKeywordFile and ChangeKey, so we figured that there was another backdoor, which made a pair\nwith the config manager we had found. Although it would appear such a utility should run on the attacker side, we found a\nvictim infected with this and a corresponding backdoor located in the vicinity. We called it a P2P backdoor.\nP2P backdoor\nThis backdoor shares many features with the previous one. For example, many of the commands have similar names, both\nbackdoors’ configuration files have options with identical names and are protected the same way, and the paths to the\nbackdoor files are similar to legitimate ones. However, there are significant differences, too. The new backdoor actively\nuses many more of the options from the config, supports more commands, is capable of interacting with other infected\nvictims and connecting them into a network (see the “Commands” section for details), and works with the C&C server in a\ndifferent way. In addition, this backdoor actively uses logging: we found a log file dating back to 2012 on one victim PC.\nC&C interaction\nThis backdoor has the ability to sniff network traffic. After the backdoor is run, it starts a sniffer for each network interface,\nin order to detect a specially structured packet, which is sent to the victim’s ProbePort specified in the configuration. When\nthe sniffer finds a packet like that, it interprets it as a request to establish a connection and sets TransferPort (specified in the\nconfiguration) to listening mode. The requester immediately connects to the victim’s TransferPort and both sides perform\nadditional checks, exchanging their encryption keys. Then the connection requester sends commands to the victim, and the\nvictim processes these interactively. This approach allows the backdoor to maintain listening mode without keeping any\nsocket in listening mode – it only creates a listening socket when it knows that someone is trying to connect.\nCommands\nThe backdoor supports the same commands as the steganography backdoor and implements an additional one. The\nbackdoor leverages the Windows index service and can search files for keywords provided by the attacker. This search can\nbe initiated by an attacker request or on a schedule – keywords for a scheduled search are stored in a dedicated file.\nAll commands are supplied to the backdoor through command files. The command files are protected the same way as the\nconfig (see below).APT REPORTS\nPlatinum is back\nBy Andrey Dolgushev , Vasily Berdnikov , Ilya Pomerantsev  on June 5, 2019. 11:07 am\n2\n10 2\nIN THE SAME CATEGORY\nTurla renews its arsenal with Topinambour\n‘Twas the night before\nViceLeaker Operation: mobile espionage\ntargeting Middle East\nZebrocy’s Multilanguage Malware Salad\nFIN7.5: the infamous cybercrime rig\n“FIN7” continues its activities\nTHREATS\n CATEGORIES\n TAGS\n STATISTICS ENCYCLOPEDIA DESCRIPTIONS KSB 2019\n English\nSolutions\n Industries\n Products\n Services\n Resource Center\n Contact Us GDPR GET IN TOUCH\n "
}