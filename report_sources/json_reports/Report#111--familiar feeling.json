{
    "title": "Report#111--familiar feeling",
    "text": "FAMILIAR \nFEELING\nA Malware Campaign Targeting the \nTibetan Diaspora Resurfaces\nBy Geoffrey Alexander, Matt Brooks, Masashi Crete-Nishihata, \nEtienne Maynier, John Scott-Railton, and Ron Deibert\nAUGUST 8, 2018\nRESEARCH REPORT #111Suggested Citation Copyright\n© The Citizen Lab\nLicensed under the Creative Commons BY-SA 4.0 (Attribution-ShareAlike \nlicence). Electronic version first published in 2018 by the Citizen Lab. This \nwork can be accessed through https://citizenlab.ca/2018/08/familiar-\nfeeling-a-malware-campaign-targeting-the-tibetan-diaspora-resurfaces/. \nDocument Version: 1.0\nThe Creative Commons Attribution-ShareAlike 4.0 license under which this \nreport is licensed lets you freely copy, distribute, remix, transform, and \nbuild on it, as long as you:\n• give appropriate credit;\n• indicate whether you made changes; and\n• use and link to the same CC BY-SA 4.0 licence.\nHowever, any rights in excerpts reproduced in this report remain with \ntheir respective authors; and any rights in brand and product names and \nassociated logos remain with their respective owners. Uses of these that \nare protected by copyright or trademark rights require the rightsholder’s \nprior written agreement.\nGeoffrey Alexander, Matt Brooks, Masashi Crete-Nishihata, Etienne Maynier, \nJohn Scott-Railton, and Ron Deibert. “Familiar Feeling: A Malware Campaign \nTargeting the Tibetan Diaspora Resurfaces, ” Citizen Lab Research Report No. \n111, University of Toronto, August 2018.Acknowledgements\nAuthors listed in alphabetical order. Ron Deibert provided supervision and \nguidance to the project.\nSpecial thanks to Tibet Action Institute, the participating Tibetan organizations, \nLobsang Gyatso Sither, Lhakpa Kyizom, Adam Hulcoop, Jakub Dalek, and TNG.\nAbout the Citizen Lab, Munk School of Global Affairs and \nPublic Policy, University of Toronto\nThe Citizen Lab is an interdisciplinary laboratory based at the Munk School \nof Global Affairs and Public Policy, University of Toronto, focusing on research, \ndevelopment, and high-level strategic policy and legal engagement at the \nintersection of information and communication technologies, human rights, and \nglobal security.\nWe use a “mixed methods” approach to research that combines methods from \npolitical science, law, computer science, and area studies. Our research includes \ninvestigating digital espionage against civil society, documenting Internet filtering \nand other technologies and practices that impact freedom of expression online, \nanalyzing privacy, security, and information controls of popular applications, \nand examining transparency and accountability mechanisms relevant to the \nrelationship between corporations and state agencies regarding personal data \nand other surveillance activities.Introduction  6\nTibetan Diaspora: A Highly Targeted Community 7\nShifting Tactics?  7\nFamiliar Connections  7\nClosed Espionage Ecosystems: An analytical challenge 8\nPart 1: Resurfaced Campaign  9\nCampaign Overview 9\nInfection Chain: CVE-2017-0199 and DMShell++ 11\nInfection Chain: CVE-2017-11882 and DMShell++ 12\nInfection Chain: CVE-2017-11882 and TSSL Suite 12\nPart 2: Investigating a Compromise  14\nPart 3: Familiar Connections  16\nCampaign Connections 16\nEvaluating Connections 18\nPart 4: Challenges of Analyzing Closed Ecosystems  19\nA View into Closed Espionage Ecosystems 21\nAddressing the analytical challenges 22\nShowing Harm: Perspectives from Civil Society  23ContentsContents\nAppendix A: DMShell++  24\nLoader 24\nPayload 24\nAppendix B: TSSL Code Differences  25\nAppendix C: DSNG Installer  27\nLoader 27\nPayload 27\nNetwork Communication 28\nAppendix D: Server Infrastructure  286\nFAMILIAR FEELINGIn January 2018, a Tibetan activist received a mundane-looking email purporting \nto be program updates from a human rights NGO. Attached to the message were \na PowerPoint presentation and a document. The activist, like many in the Tibetan \ndiaspora, had grown wary of unsolicited emails with attachments, and instead of \nopening the documents, shared the files with Citizen Lab researchers.\nThe suspicion was warranted: the attachments were malicious. If clicked, the files \nwould run recent exploits to infect Windows computers with custom malware. This \nemail was the start of a malware campaign active between January to March 2018 \nthat targeted Tibetan activists, journalists, members of the Tibetan Parliament in \nexile, and the Central Tibetan Administration. We worked closely with the targeted \ngroups to collect the malicious messages, and also engaged in incident response \nwith a compromised organization. This collaboration enabled us to gain further \ninsights into the tactics, techniques, and procedures used by the operators.\nThe campaign used social engineering to trick targets into opening exploit-laden \nPowerPoint (CVE-2017-0199) and Microsoft Rich Text Format (RTF) documents (CVE-\n2017-11882) attached to e-mail messages. The malware includes a PowerShell \npayload we call DMShell++, a backdoor known as TSSL, and a post-compromise \ntool we call DSNGInstaller. › This report analyzes a malware campaign active between January to \nMarch 2018 that targeted Tibetan activists, journalists, members of the \nTibetan Parliament in exile, and the Central Tibetan Administration.\n › We detail a successful intrusion of a Tibetan NGO and provide a brief \nanalysis of the operator’s actions post-infection.\n › This recent campaign, as well as a campaign we reported in 2016, both \nhave connections to a wider operation called “Tropic Trooper” . The \nstrength and meaning of these connections is assessed.\n › We examine the challenges associated with investigating closed espionage \necosystems and the importance of accurately describing the players and \nthe harms they cause.\nIntroductionKey Findings7\nCITIZEN LAB RESEARCH REPORT NO. 111We call this recent campaign the “Resurfaced Campaign” because of connections to \na 2016 campaign that targeted Tibetan Parliamentarians (which we refer to as the \n“Parliamentary Campaign”). These connections suggest that the same group may \nbe involved or tools and infrastructure are being shared between multiple groups.\nTibetan Diaspora: A Highly Targeted Community\nThe threat of digital espionage has become a persistent reality for the Tibetan \ndiaspora, which has been targeted by malware campaigns for over a decade. \nHistorically, these operations have relied heavily on malicious attachments that \nleverage known exploits and basic Remote Access Trojans (RATs). This tactic may \nreflect a basic risk-reward calculation when targeting under-resourced civil society \ngroups: if they are using unpatched systems, why run the risk of exposing more \nsophisticated technical tools when simple ones will do? The operators instead \nappear to focus much of their innovation on clever social engineering paired with a \n“just enough” approach to tooling. The limited technical innovation that we observe \nmay be driven by the pragmatic need to continue to achieve access and permanence, \nrather than more sophisticated goals such as obscuring malware authorship or \nresisting decompiling.\nShifting Tactics?\nSince 2016, the number of reported targeted malware campaigns against Tibetan \ngroups has dropped significantly. In place of targeted malware, we have observed \na shift to phishing designed to harvest credentials from online accounts. A notable \nexception to this change is the Parliamentary Campaign, which used known \nand patched exploits to deliver custom malware called KeyBoy. The Resurfaced \nCampaign is the first targeted malware activity against the Tibetan community we \nhave observed since the Parliamentary Campaign.\nFamiliar Connections\nThe Resurfaced Campaign used different exploits and payloads than the \nParliamentary Campaign but shares other connections. The two campaigns used \nsimilar spear phishing messages and both targeted Tibetan parliamentarians. One \nof the e-mail addresses used to send spear phishing messages in the Resurfaced \nCampaign ( tibetanparliarnent[@]yahoo.com ) was also used repeatedly during \nthe Parliamentary Campaign.\nBased on the use of common tools and code similarities, both campaigns are also \nconnected to a wider operation called “Tropic Trooper” that has been active since 8\nFAMILIAR FEELINGat least 2012 and was first reported by Trend Micro in 2015. Tropic Trooper has \ntargeted governments and companies in Taiwan and the Philippines and is usually \nidentified through the use of specific malware including Yahaoyah, Yahamam, and \nTSSL . The Resurfaced Campaign is linked to Tropic Trooper through its use of TSSL. \nThe Parliamentary Campaign is linked through code similarities between Keyboy \nand Yahaoyah. Trend Micro noted Yahoyah shared the same algorithm for encoding \nconfiguration files as versions of KeyBoy found in 2013.\nIf the same threat actor is behind the Resurfaced and Parliamentary Campaigns, \nthe operators appear to have engaged in limited and incremental changes to their \ntools. Nevertheless, these improvements are minor, and are unlikely to represent \nsignificant costs. The exploit code and PowerShell code used in the campaign were \npublicly available. Proofs of concept of the exploits exist on Github, and DMShell++ \n(the PowerShell payload) is based on example code posted online.\nClosed Espionage Ecosystems: An analytical challenge\nThese types of campaigns use custom built malware that originate from a closed \nespionage ecosystem in which the parties involved (e.g., developers who write \nthe malware, operators who conduct the campaigns, and intelligence customers \nwho incentivize the activity) are difficult to identify and fully segment. Intelligence \ncustomers may be actively managing the development of tools and selection of \ntargets or may be passive consumers who the operators know are interested in and \nwill pay for information from certain targets. The cost and effort put into closed \nespionage ecosystems is harder to quantify than commoditized malware kits (such \nas cybercrime tools repurposed for espionage) or government exclusive malware \n(such as products from NSO Group) which have defined prices and markets.\n“Actors” in closed espionage ecosystems are abstractions typically identified by the \nuse of common tools and infrastructure. This level of attribution can help cluster \nincidents together into recognizable patterns and indicators. However, many \nburglars can, at different times, use the same crowbar. For example, seemingly \ndisparate campaigns and threat actors may be linked through what FireEye describes \nas a “ digital quartermaster ” , which refers to a resource of malware development \nand infrastructure that is shared amongst multiple campaigns and groups. Knowing \nwhat tools and tactics are leveraged in malware campaigns can provide insight into \ntechnical capabilities and allow an analyst to track activities over time, but this \nknowledge alone does not explain how information collected by the operators is \nultimately used by the intelligence customer nor the types of harm that can follow \nfor civil society.9\nCITIZEN LAB RESEARCH REPORT NO. 111This report is organized into the following sections:\nPart 1: Resurfaced Campaign describes the Resurfaced Campaign that targeted \nTibetan groups between January and March 2018.\nPart 2: Investigating a Compromise describes a compromise of a Tibetan NGO \nand analyzes operator actions post-infection.\nPart 3: Familiar Connections highlights connections between the Parliamentary \nand Resurfaced Campaigns to an operation called “Tropic Trooper” .\nPart 4: Closed Espionage Ecosystems and Identifying Harm discusses challenges \nin analyzing closed espionage ecosystems and situates our investigation within \nwider trends of digital espionage operations against the Tibetan diaspora.\nPart 1: Resurfaced Campaign\nThis section describes the Resurfaced Campaign that targeted Tibetan groups \nbetween January and March 2018.\nCampaign Overview\nWe observed the Resurfaced Campaign from January 16 to March 2, 2018 and \ncollected seven spear phishing emails sent to Tibetan activists, journalists, members \nof the Tibetan Parliament in exile, and the Central Tibetan Administration (CTA).\nThe messages were sent from email addresses that mimicked staff of Tibetan \nNGOs or the CTA, and shared content on advocacy activities, cultural events, and \nadministrative announcements. We verified that some of this information was \npublicly available on social media, whereas other information may have been \ncollected from public correspondence or private messages that could have been \npreviously stolen by the operators. A January 22 spear phishing email was sent from \ntibetanparliarnent[@]yahoo.com , which was also used to send multiple spear \nphishing emails in the Parliamentary Campaign (see Figure 1).\nWhile both the Parliamentary Campaign and the Resurfaced Campaign used similar \nsocial engineering tactics and a common email address to send spear phishing \nmessages, the Resurfaced campaign used a different, newer malware toolkit. In \nsix of the eight intrusion attempts, the operator sent a Microsoft PowerPoint file 10\nFAMILIAR FEELINGexploiting a vulnerability disclosed in 2017 (CVE-2017-0199) designed to drop a \npayload written in Microsoft’s PowerShell scripting language from a remote server. \nIn two early intrusions attempts in January 2018, the operator also used an exploit \nfor RTF documents (CVE-2017-11882).\nFigure 2 provides a timeline of the Resurfaced Campaign highlighting when spear \nphishing emails were sent and the exploits that were used.\nFigure 1: Spear phishing email sent on January 22 2018 that reuses an email address that was \nused in the 2016 Parliamentary Campaign.\nFigure 2: Timeline of spear phishing emails sent in the Resurfaced Campaign.11\nCITIZEN LAB RESEARCH REPORT NO. 111Infection Chain: CVE-2017-0199 and DMShell++\nThe most common infection chain in the campaign was the use of a PowerPoint \nOpen XML Slide Show file (PPSX) exploiting CVE-2017-0199 to load a remote payload \nwe call DMShell++, a basic TCP reverse shell written in Microsoft’s PowerShell \nscripting language. We observed a very similar, albeit more simple, implementation \nof DMShell++ on a public posting on Wooyun (a Chinese hacker forum1) by an author \nwith the username “DM_” . We refer to the version discovered in our investigation as \n“DMShell++” in reference to the Wooyun username combined with the fact that the \nWooyun version has been incrementally updated with additional basic commands.\nWe observed versions of DMShell++ hosted on the domains enumerated in Table \n1. However, we did not monitor these domains continuously and therefore it is \npossible that the operator may have used additional configurations not listed in \nthe table.\nDate Observed Source C2 Configuration\nJanuary 18, 2018commail[.]co:5453/\nqqqzqa27.126.186.222:6001\n27.126.186.222:6002\n27.126.186.222:6003\nJanuary 22, 2018tibetnews[.]\ninfo:8026/qqqzqa103.55.24.196:80\n103.55.24.196:443\n45.127.97.222:443\nFebruary 2, 2018commail[.]co:5453/\nqqqzqa27.126.186.222:80\n27.126.186.222:443\n27.126.186.222:8080\nMarch 6, 2018comemails[.]\nemail:1234/hgf203.189.232.207:80\n203.189.232.207:443\n103.55.24.196:443\nThe versions of DMShell++ we observed had the same capabilities but different \nconfigurations for command and control. Table 2 provides an overview of capabilities \nof DMShell++ and how it could be used by an operator (technical details are included \nin Appendix A). This basic script gives the remote actor vast control over the victim \ncomputer. Initially deploying generic payloads hides true capabilities and intentions \nfrom defenders should the attempted intrusion be detected at this stage.\n1  A mirror of the post is available on GithubTable 2: Overview of DMShell++ capabilities\nTable 1: List of C2 configurations observed in different DMShell++ samples12\nFAMILIAR FEELINGCapability Purpose to the Operator\nCollect system information\nInternal IP address Collecting system information helps \nthe operator assess if they have the \ncorrect target and learn about potential \nweaknesses in the computer’s OS.Operating system (OS) version\nUser name\nExecute remote commands Executing remote commands provides \nadditional reconnaissance information that \ncan help the operator determine their next \nsteps.\nSend additional files The ability to send additional files means \nthe operator can download additional tools \nwith different capabilities.\nExtract data Stealing files from the target machine is \nlikely the operator’s ultimate goal.\nInfection Chain: CVE-2017-11882 and DMShell++\nIn two spear phishing emails sent early in the campaign, the operator used a second \nexploit document in addition to the PPSX files described previously to deploy \nDMShell++. It is unclear why the operator used this secondary method. However, \ngiven the amount of time between patches being released for both vulnerabilities, \nas well as the different methods being used to execute the PowerShell payload, it is \npossible the operator wanted to maximize success while testing both exploitation \nmethods.\nThe second document was a RTF document designed to exploit CVE-2017-11882. \nIn this case, instead of loading the PowerShell script from a remote location, this \nexploit document followed a more traditional infection chain by attempting to write \nan executable (EXE) program to the target computer. The EXE program was designed \nto create a small PowerShell script on the target computer to decode and execute \nan encoded version of DMShell++. This version of DMShell++ was configured to use \nthe same C2 infrastructure as the remote version downloaded by the PPSX file sent \nin the same spear phishing email ( 27.126.186[.]222  on ports 6001 , 6002 , and \n6003 ; Appendix D provides a detailed overview of the server infrastructure). Figure \n3 shows an overview of the CVE 2017-11822 and DMShell++ infection chain.Table 2: Overview of DMShell++ capabilities13\nCITIZEN LAB RESEARCH REPORT NO. 111Infection Chain: CVE-2017-11882 and TSSL Suite\nIn the spear phishing email sent on January 23 2018, the operator also included \na RTF document designed to exploit CVE-2017-11882 and execute a payload \nembedded in the file. However, in this instance, the operator deployed an entirely \ndifferent set of tools.\nAs we analyzed the files written to disk as part of this infection chain, we observed \nmultiple program database (PDB) strings. When available, PDB strings can be \nindicative of the malware creator’s environment and namings for the developed \nmalware.\nThese PDB strings are consistent with a set of tools known as TSSL, which were \npreviously described by Trend Micro and PwC and linked to KeyBoy and Tropic \nTrooper campaigns. The TSSL suite analysed in these reports includes a loader \ncalled FakeRun and a backdoor named TClient. While the samples we analyzed have \na few differences from previously reported instances (e.g., version numbers, storage \nof configuration data, method for launching payloads) we conclude that they are \nlikely based on the same source code (see Appendix B for a detailed comparative \nanalysis of the samples). Figure 4 shows an overview of the CVE 2017-11882 and \nTSSL suite infection chain.\nFigure 3: CVE-2017-11882 and DMShell++ Infection Chain.\nD:\\Work\\Project\\VS\\house\\Apple\\Apple_20180115\\Release\\InstallClient.pdb\nD:\\Work\\Project\\VS\\house\\Apple\\Apple_20180115\\Release\\FakeRun.pdb14\nFAMILIAR FEELINGPart 2: Investigating a Compromise\nThis section describes a compromise of a Tibetan NGO and analyzes operator actions \npost-infection.\nThe fourth spear phishing email of the campaign was sent on January 23, 2018 \nto a range of targets working for Tibetan NGOs, media groups, and the CTA. The \nmessage appeared to be sent from the Director of the Tibet Museum, which is an \nofficial museum of the CTA. Attached to the email were RTF and PPSX messages that \nclaimed to present information about the National Museum of Tibet (see Figure 5). \nThese files contained the CVE-2017-11882 and TSSL Suite infection chain.\nOne NGO in particular was heavily targeted and had multiple staff members receive \nthe email. A senior staff member of the group opened the attachment from a \ncomputer in their office and was compromised. Through incident response on the \norganization’s network, we observed post-infection actions taken by the operator \nand identified the use of a second backdoor.\nFigure 4: CVE-2017-11882 and TSSL Suite Infection Chain.15\nCITIZEN LAB RESEARCH REPORT NO. 111Network logs show connections to the IP address 115.126.86[.]151  on ports \n6001 , 8080 , and 8100  matching the configuration file of the TSSL implant. This \nbackdoor was configured to communicate with the C2 server every 20 minutes, \nbut we quickly noticed during the analysis of networks logs that most connections \nwere actually rejected by the C2 server. Based on these patterns, it appears the C2 \nserver was disabled most of the day and active only for short windows.\nThe TClient sample was used until January 29 when a new backdoor was deployed \non the infected system communicating with a new C2 server listed in Table 3. We call \nthe new backdoor “DSNGInstaller” , a name stemming from the payload’s internal \nname combined with the irony that DSNG is an accepted  acronym for Digital \nSatellite News Gathering. Both backdoors were active until February 8 when the \nTClient sample was removed.\nSample MD5 Domain IP\nDSNGInstaller 67e866c461c285853b225d2b2c850c4f tibetfrum[.]info 27.126.176.169\nTable 4 provides an overview of DSNGInstaller’s capabilities (technical details are \nincluded in Appendix C). These features are similar to those provided by TClient.\nFigure 5: Spear phishing email sent to Tibetan activists.\nTable 3: C2 configuration for the DSNGInstaller backdoor16\nFAMILIAR FEELINGCapability Purpose to the Operator\nSystem Reconnaissance\nList all volumes and drives Additional reconnaissance information helps the \noperator determine their next action.List running processes\nList files\nFile System Access\nCreate a file or directory Interacting with the file system allows the operator \nto use new tools and hide evidence of their actions.Delete a file or directory\nSystem Control\nRun a process with output Running processes allows the operator to run their \ntools while stopping processes allows the operator \nto shutdown programs that may detect their \nactions.Run a process without output\nStop currently running processes\nData exfiltration\nUpload a file to the C2 server Stealing files from the target machine is the \nultimate goal of the operator.\nWhile it is unclear why the operator switched malware after multiple days of \nundetected success, we consider potential scenarios. It is possible the TSSL \nmalware was detected by other targets where we do not have visibility, which \ncaused the operator to shift to a lesser known tool with a lower detection rate. \nAnother possible scenario is that the operator’s interface to the DSNGInstaller tool is \nmore robust and thus preferable for expected long-term access. Finally, it is possible \nthat DSNGIntaller is the tool of choice of another operator. This last scenario would \nrepresent a potential handoff of a surveillance victim between multiple remote \noperators.\nPart 3: Familiar Connections\nThis section highlights connections between the Parliamentary and Resurfaced \ncampaigns to an operation called “Tropic Trooper. ”\nCampaign Connections\nThe tactics, techniques, and procedures used in the Resurfaced Campaign link it to \nthe Parliamentary Campaign and to an operation called “Tropic Trooper” .\nTrend Micro released the first public report on Tropic Trooper in 2015, describing a \nmalware campaign that targeted government institutions, military agencies, and \ncompanies in Taiwan and the Philippines. The campaign exploited old vulnerabilities \n(CVE-2010-3333 and CVE-2012-0158) and used custom malware, which Trend Table 4: Capabilities of the DSNGInstaller backdoor17\nCITIZEN LAB RESEARCH REPORT NO. 111Micro detects as TROJ_YAHOYAH and BKDR_YAHAMAM. Trend Micro noted that \nthe Yahoyah malware used the same algorithm for encoding configuration files as \nthe 2013 versions of KeyBoy analyzed by Rapid7, suggesting a link between these \ncampaigns or at least the developers of the malware.\nThe KeyBoy samples that were used in the 2016 Parliamentary Campaign had a \nsignificant change in the encoding of the configuration file compared to the samples \ndescribed by Rapid7. In the 2013 version, the configuration file was encoded using a \nsimplified static-key based algorithm. The newer encoding algorithm removed the \nuse of a static encryption key in favour of a dynamically constructed lookup table. \nThe main connection between the Resurfaced Campaign and the Parliamentary \nCampaign is the reuse of a Yahoo email address ( Tibetanparliarnent[@]yahoo.\ncom ) to send spear phishing emails to targets in the Tibetan community.\nMost recently, in 2018 Trend Micro published an update on Tropic Trooper noting \na new infection chain that included different exploits (CVE-2017-11882, CVE-2018-\n0802) and the TSSL tool suite. Amongst the C2 servers observed was a domain \n(tibetnews[.]today ), which shares registrant information with the domains used \nin the Resurfaced campaign.\nFigure 6 provides an overview of the connections between these campaigns.\nFigure 6: Connections between Resurfaced, Parliamentary, and Tropic Trooper \ncampaigns.18\nFAMILIAR FEELINGEvaluating Connections\nThe relationships between campaigns is typically drawn through the use of common \ntechnical indicators (e.g., malware, server infrastructure, etc). In some cases, these \nlinks are used to connect multiple campaigns to a “threat actor” or “group” which \nis thought to be carrying out the campaigns. These links can have varying levels of \nstrength, which can lead to different levels of confidence in attributing campaigns \nto a specific actor (see Table 5).\nConnection Type Description\nFirst-order connections Shared tools and infrastructure that are directly observed \nbeing used against targets.\nThese connections typically form the core indicators or \n“problem set” of a campaign.\nSecond-order connections Related samples of tools believed to be unique or \nC2 infrastructure overlaps where neither the tools or \ninfrastructure were directly observed in use.\nNth-order connections Unique characteristics of tools and infrastructure such \nas code reuse, development techniques, or naming \nconventions.\nFirst-order connections typically require direct observation of malicious activity \nagainst a target and as a result may not be made public (for example, if a security \ncompany obtains the data from a customer). By contrast, second and Nth-order \nconnections can usually be normalized between researchers and used to make \nconnections between campaigns. For example, Kaspersky labelled a reportedly \nChina-based threat group as Winnti after a tool they used. Over time, different \ncampaigns and tools were grouped under the same name, for instance, Microsoft  \nassociated Winnti with multiple groups they name “BARIUM” and “LEAD” . While \nthese differences in groupings stem from differing first-order connections, enough \nsecond and Nth-order connections have been identified to reference the collection \nof indicators as an umbrella of “Winnti” activities, which ProtectWise recently did in \na report . In these cases, indicators are available, but the strength of the connections \nmay not be readily apparent and can lead to very wide groupings and abstractions.\nFor Tropic Trooper, multiple security companies have released information that they \nclaim link campaigns to the threat actor. The strength of the evidence behind these \nclaims is not always clear but the majority appear to be second and/or Nth-order \nconnections. Table 6 and Figure 7 detail the connections made in these reports.Table 5: Overview of connection types and level of confidence.19\nCITIZEN LAB RESEARCH REPORT NO. 111Report DescriptionTropic Trooper \nConnectionConnection \nType\nPalo Alto (2016) Campaign using Yahoyah, \nPcShare, and Poison \nIvy targeting Taiwanese \ngovernment and fossil fuel \nproviderUse of Yahoyah \nmalwareSecond-order, \npossibly first-\norder\nOverlapping C2 \ninfrastructure\nLookout (2017) Description of Android malware \ncalled TitanOverlapping C2 \ninfrastructureSecond-order\nTrend Micro \n(2018)Campaign using TSSL toolkit \ntargeting government and \nindustry in Taiwan, Philippines, \nand Hong Kong.TSSL toolkit Unknown*\nPart 4: Challenges of Analyzing Closed \nEcosystems\nThis section discusses challenges in investigating closed espionage ecosystems and \nsituates our investigation within wider trends of digital espionage operations against \nthe Tibetan diaspora.\nThe Resurfaced Campaign used a mix of new and previously-observed tools, which \nshare technical characteristics with campaigns previously attributed to Tropic \nTrooper. However, these links alone do not allow us to conclusively state that Table 6: Overview of reports connecting malware campaigns to Tropic Trooper  *Note: This \nreport is the first time TSSL toolkit is linked to Tropic Trooper. Trend Micro does not explain \nhow they made the connection.\nFigure 7: Connections between reports linking campaigns and malware to Tropic Trooper.20\nFAMILIAR FEELINGthe campaigns are run by the same actor. This ambiguity illustrates some of the \nanalytical challenges posed when analyzing connections between campaigns and \ntheorizing about the roles of different actors in closed espionage ecosystems.\nResearchers need to use naming schemes and actor grouping to characterize digital \nespionage operations out of necessity. While names are critical, the process by \nwhich they are selected, as Florian Roth and others have pointed out, can lead to to \nmultiple names for the same group and potential confusion over what a name refers \nto. Differentiating between campaigns and the “threat actor” behind Tropic Trooper \nshows some of these challenges. Reports on Tropic Trooper have characterized it \nin varied and sometimes ambiguous ways (see Table 7). This variation points to \nsome of the challenges inherent in consistently using naming: do names refer to \ncampaigns of malware activity, the “threat actors” behind them, or a common tool \nset? It is not always clear.\nReport Description\nTrend Micro (2015) “‘…Operation Tropic Trooper, ’ an ongoing campaign… ”\nPalo Alto (2016) “…a campaign called Tropic Trooper,… ”\nLookout (2017) “…linked to the same actors behind Operation Tropic Trooper. \nTropic Trooper is a long running campaign… ”\nTrend Micro (2018) “Tropic Trooper (also known as KeyBoy) levels its campaigns \nagainst … targets”\nPart of the complexity of naming stems from the multiple operational roles likely \nto be present in a major campaign. These roles may include malware developers, \ncampaign operators, and intelligence taskers and consumers. The relationships \nbetween these roles may be simple or multi-layered. For example, a developer \nmay double as an operator for a small task for a customer. Malware developers \nmay share tools with multiple operators acting independently from each other. \nCustomers may be active (i.e., directly involved in tasking operators) or passive (i.e., \nconsuming information brought to them by the operators or brokers representing \nthe operators). Unfortunately, in the case of the Resurfaced Campaign, we lack \nthe visibility into the organizational roles that would help us move from what we \nhave observed to a more conclusive statement about its relationship to Tropic \nTrooper. Meanwhile, an operator may use the same tools to work on multiple tasks \nfor multiple consumers. These complexities can create challenges when tools and \ninfrastructure are the primary means for identifying and linking campaign activities.Table 7: Descriptions of Tropic Trooper in previous reports.21\nCITIZEN LAB RESEARCH REPORT NO. 111Reviewing the timeline of malware and infrastructure development in the Resurfaced \nCampaign illustrates these challenges. Figure 8 shows that while the infrastructure \nwas setup months before the first spear phishing messages were sent, the malware \nbuilds were all done shortly before the campaign started. The time difference \nbetween infrastructure setup and malware build combined with the fact that our \nidentified connections to Tropic Trooper are only code-based suggest that the \nmalware may be a resource that is shared between groups.\nThe connections between the Resurfaced and Parliamentary Campaigns to Tropic \nTrooper highlight the difficulties of characterizing threat groups and how they \ninteract with other players in a closed espionage ecosystem. While the campaigns \nare linked by shared tools and infrastructure (Nth-order connections), based on \nthis information alone we cannot conclusively say that these activities are being \nconducted by a single group. Campaigns labelled as Tropic Trooper also have \ntargeted a range of government, industry, and civil society targets, which may \nindicate multiple intelligence consumers.\nA View into Closed Espionage Ecosystems\nAlthough the relationship between developers, operators, and the final intelligence \nconsumer is often unclear, recent indictments issued by the United States Department \nof Justice (DOJ) against espionage groups based in China provide a glimpse into \nhow these groups interact.\nIn 2014, the DOJ charged five officers of the People’s Liberation Army with economic \nespionage offences. These officers are allegedly part of a threat group known as \nFigure 8: Resurfaced Campaign Malware and Infrastructure Development Timeline.22\nFAMILIAR FEELINGAPT1, which Mandiant first identified as part of the 2nd Bureau of the People’s \nLiberation Army General Staff Department’s 3rd Department. APT1 targeted \nnumerous government and Fortune 500 companies, but was also found by Citizen \nLab to have targeted Tibetan activists and a large international NGO. According to \nthe indictment , the intelligence consumers that APT1 serviced included the Chinese \ngovernment and Chinese firms seeking intellectual property and information on \ncompetitors.\nIn another 2014 case, the DOJ charged a Chinese national named Su Bin with \nparticipating in a long term conspiracy to compromise major U.S. defense \ncontractors and sell stolen information on technology projects to entities in China. \nSu Bin worked with two unnamed conspirators who carried out the the intrusions. \nThe indictment identified the conspirators as being located in China and related \nto “multiple organizations and entities in the PRC” . The conspirators received 2.2 \nmillion RMB (approximately $332,040 USD) to build up their operation, but the \ntotal cost of the activity was 6.8 million RMB (approximately $995,400 USD). The \nconspirators shared a report with each other that detailed targets, objectives, and \nsuccesses of an intrusion operation against one of their targets. The report included \na description of “past achievements” including stealing files from the “democracy \nmovement” (a reference to democracy activists in Hong Kong) and the “Tibetan \nindependence movement” .\nThese cases offer rare glimpses into the interactions between developers, operators, \nand intelligence consumers showing that the same million-dollar programs funded \nto conduct economic espionage operations may also incentivize the targeting of \ncivil society organizations. While the first type of operation may result in loss of \nintellectual property and financial loss, the second might result in direct harm to \ntargeted individuals or their families.\nAddressing the analytical challenges\nSecurity researchers typically do not have the level of evidence and visibility cited in \nthe DOJ indictments and have to rely on available technical indicators to track groups \nand hypothesize their motivations and role within closed espionage ecosystems. A \npossible area for future work is using formal methods (i.e., mathematical techniques \ndeveloped in computer science to describe properties of hardware and software \nsystems) to connect technical indicators and link campaigns. Such techniques may \nprovide a more systematic way to link groups together and alleviate ambiguity. 23\nCITIZEN LAB RESEARCH REPORT NO. 111However, as we have discussed, identification of operators and malware developers \nis only one piece of the puzzle. Gaining an understanding of the ultimate harm of \ndigital espionage requires interacting with targeted communities.\nShowing Harm: Perspectives from Civil \nSociety\nDigital espionage has become a commonplace threat for the Tibetan diaspora. \nDigital security awareness and best practices for defense are now necessities for \nthe community. Based on this experience, for Tibetans the harm of espionage \noperations is clear. Lobsang Gyatso Sither, a Tibetan digital security trainer, provides \na perspective:\n“It’s important for the community to get away from the mindset of “I have nothing \nto hide” and think about the connections between us and how these can lead to \nharm. Tibetans in Exile are connected to each other through various organizations \nand contacts. If you are compromised, you become the weakest link, and allow the \nspies to get information that can be used to target other Tibetans. Tibetans in Exile \nare also constantly in touch with Tibetans inside Tibet, where the harms can be \nsevere – including arrest, detention, and imprisonment. ”\nIn recent years, we have seen operators shift tactics to basic credential phishing, \nmaking the Resurfaced Campaign notable for being the first instance of a malware \ncampaign targeting the community we have seen since 2016. The campaign used \nfamiliar tactics of clever social engineering combined with custom malware. In \nresponse to the persistent threat of digital espionage, Tibetan groups have launched \ngrassroots efforts to increase digital security education, but changing behaviour \nand building capacity requires time and patience. At least one organization was \ncompromised by the Resurfaced Campaign, which shows that familiar tactics are \nstill being used because they still work. However, rather than being dissuaded by \nthese threats, Tibetans are continuing the hard and necessary work to empower \ntheir community and defend against digital espionage.24\nFAMILIAR FEELINGIndicators of Compromise\nIndicators of compromise are available on GitHub in multiple formats.\nAppendix A: DMShell++\nLoader\nWe identified two similar loaders for DMShell++ :\n1) A PowerShell script created by a Microsoft JScript file in %TEMP%\\\n{541DB837-073A-45F0-8A5D-2650065D1252}.ps1  during the ex -\nploitation of CVE-2017-0199. This script decodes the base64 encoded \nDMShell++ script and executes it.\n2) A PowerShell script dropped by the binary \n11e0f3e1c7d8855ed7f1dcfce4b7702a  during the execution of \nCVE-2017-11882. This PowerShell script decodes the base64 encoded \npayload stored in %TEMP%\\pfine and executes the DMShell++ \npayload.\nPayload\nDMShell++ is a reverse TCP backdoor written in PowerShell. It uses PowerShell \nSystem.Net.Sockets  to create three TCP streams, one to each C2 address \nhardcoded in a PowerShell object:\n25\nCITIZEN LAB RESEARCH REPORT NO. 111When a TCP stream is started, it first calls the function SendLoginInfo, which \nsends information about the system to the C2 server, under the form TOKEN|*|IP \nADDRESS|*|WINDOWS VERSION|*|USER NAME . For example, on a virtual machine \nwe used for testing, the following packet was sent to the C2 server:\nOnce this first packet is sent, the script enters into an endless loop waiting for \ncommands from the C2 servers. The same delimiter |*| is again used and the script \naccepts four different commands:\n• CMD: executes the shell command and returns the output<\n• FILERECEIVE: send the file at the given path\n• FILEHEAD: receive information from a file to be downloaded \nfrom the C2 server. Data is received under the format \nFILEHEAD|*|FILENAME|FILEEXTENSION|FILESIZE\n• FILESEND: receive data stream from the file\nAppendix B: TSSL Code Differences\nDuring the course of our investigation, we identified malware that is similar to \nmalware in the TSSL suite described by Trend Micro in their 2018 Tropic Trooper \nreport . This appendix describes the code differences between these two versions \nfor both the FakeRun loader and the TClient payload of the TSSL suite.\nComparing the InstallClient malware samples we found and those described by \nTrend Micro show slight modifications. Both samples followed the same behavior \npath to install their payloads and setup persistence with the main difference being \n26\nFAMILIAR FEELINGthe installation of their configuration information. The TrendMicro sample installed \nits configuration as an encrypted file while our sample stored its configuration as \nan encrypted and base64 encoded string in a Windows registry key. In addition, the \nTrendMicro sample dropped its FakeRun sample with the sidebar.exe  while our \nsample dropped the Windows wab32.exe  binary to act as the loading program for \nits FakeRun sample. The FakeRun samples we compared performed the same series \nof actions to spawn the final payload with differences being made to adjust for the \nbinary names, config locations, etc.\nOur TClient sample appeared to be an older, less feature-rich version of the TClient \nreported by Trend Micro. Both samples appeared to report what seemed to be a \nversion number as part of their initial C2 communication. Trend Micro’s sample \nreported a version number of 3.2.2.5 and our sample reported a version number \nof 0.1.4. Based on the similarities between the samples, we assess that the two \ncampaigns use malware from the same codebase, possibly forked at some point \nin the past. Based on the compile times of each sample, we analysed it appears \nthat our samples were compiled approximately two hours after those detailed by \nTrend Micro.\nThe list of functionality common to both TClient samples includes:\n• Get OS and user information\n• Open a backdoor shell\n• Run commands on an open backdoor shell\n• Restart the machine\n• Uninstall the malware\n• List drives and devices\n• Manipulate files and directories\n• Upload/Download files from the C2 server\n• Report the current configuration settings\nThe Trend Micro TClient sample added the following functionality:\n• Lookup the victim’s IP address via myip.com[.]tw\n• List/Kill running processes\n• List installed programs\n• Modify file timestamps\n• Take screenshots\n• Update the configuration settings27\nCITIZEN LAB RESEARCH REPORT NO. 111Appendix C: DSNG Installer\nLoader\nDSNGInstaller was discovered on a compromised system as osun.dll. It maintained \npersistence via a CurrentVersion\\Run  registry key. The install location folder also \ncontained a file which had logs from a keylogger. The loader stores configuration \ninformation as encrypted data in the binary itself and the final payload as a resource \nin PPKK. The payload is encrypted with the blowfish cipher in ECB mode while \nthe configuration is dropped and then decrypted by the payload. The loader also \ncontains code to gain persistence via the creation of a Windows service: KCOM \nServer Security Guard, though this was not used in the sample we discovered.\nPayload\nThe payload is a simple RAT that provides a limited number of capabilities to an \noperator. It can be started in one of two ways: either with or without provided \nconfiguration options. The sample we discovered was passed configuration options \nat start as arguments to one of its exported functions. This configuration information \nis passed to the RAT in an encrypted form using the following algorithm:\nA portion of the decrypted configuration used in the sample we discovered can be \nseen in the figure below:n = 0\nwhile n < data_len:\ni = data[n++] ^ 0x5\ndata[n - 1] = i\nif n >= data_len:\nbreak\nj = data[n++] ^ 0x27\ndata[n - 1] = j\n28\nFAMILIAR FEELINGNetwork Communication\nDSNGInstaller uses a simple network communication protocol when connecting \nto its C2 server, which consists of a short header followed by a payload encrypted \nwith the same algorithm used to encrypt and decrypt the RAT’s configuration. The \nheader is defined as:\nThe \" id” is defined in the passed configuration, “ uuid ” is a uuid generated using \nthe Windows API function UuidCreateSequential, and “ ipv4 ” is the IPv4 address \nof the infected machine. “ length ” is the length in bytes of the full message sent to \nthe C2 server. “ command ” and “ command_successful ” are only used when sending \nor replying to a command from the C2 server. They correspond to the number used \nto identify a command and a Boolean value reporting the success or failure of a \ngiven command. “id” is a character string that is \"693\" for our sample, which leads \nus to believe this may be a campaign or victim identifier but we do not know for \ncertain what its exact use is. Following the header is the encrypted payload of the \nC2 communication.\nWe also discovered code to proxy all of DSNGInstaller network communication over \nHTTP , with and without user credentials. However, this functionality did not appear \nto be used anywhere by the malware. It appears to be an artifact of additional \ndevelopment work that was either unused or incomplete when the malware was \ndeployed.\nAppendix D: Server Infrastructure\nThe server infrastructure that we observed in the campaign is listed in the table \nbelow:\nSamples Domains IPs\nCVE-2017-0199commail[.]co 27.126.186.222\ntibetnews[.]info 103.55.24.196\ncomemails[.]email 203.189.232.207Header {\nid: [u8; 16]\nuuid: [char, 16]\nipv4: [char, 16]\nlength: u32\ncommand: u8\ncommand_successful: u8\nid: [char; 16]\n}29\nCITIZEN LAB RESEARCH REPORT NO. 111Samples Domains IPs\nDMShell++27.126.186.222\n103.55.24.196\n45.127.97.222\n203.189.232.207\n103.55.24.196\nDMShell++ backdoor 27.126.186.222\nTSSL Backdoor tibetnews[.]today 115.126.86.151\nThe majority of these domains (with the exception of comemails[.]email ) share \nthe same whois registration information:\nFurther searches on this whois information revealed an additional three domains \nwith the same registration information:\nDomain Registrar Creation Date\ntibethouse[.]info GoDaddy 2018-01-03\ndaynew[.]today GoDaddy 2017-12-27\ndaynews[.]today GoDaddy 2017-12-27\nWe found 12 SSL certificates that were created for these domains. Through a search \nof historical data available on Censys.io , we found that three of the certificates were \ndeployed between August and December 2018:Name: huang ning\nEmail: bqfkdrmnhh0623[@]gmail.com\nPhone number: 8677687877\nIPHosting \nProviderSubdomain Certificate Dates\n115.126.86.29 Forewin \nTelecomgoogle.\ncomemails[.]\nemail6A4690F454C91FDC559A223D43F0A77D40B59B2A September \n2017\n115.126.98.78 Forewin \nTelecommail.google.\ncommail[.]\ncoE55CEA25ECC118FD798F84EB5395BE0678BDBC51 August \nand \nDecember \n2017\n118.99.59.214 Forewin \nTelecomgoogle.\ncomemail.\nemailcdd2fd64a4996b7d901d4a899d660cc5ff118e73 August \nand \nSeptember \n2017"
}