{
    "title": "new sofacy attacks against us government agency",
    "text": "Tools\nPlaybooks\nSpeaking Events\nAbout Us\nNew Sofacy Attacks Against US Government\nAgency\n20,782\npeople reacted\n0\n7 min. read\nThe Sofacy group, also known as APT28, is a well‐known threat group that frequently conducts cyber espionage\ncampaigns. Recently, Unit 42 identified a spear phishing e‐mail from the Sofacy group that targeted the United\nStates government. The e‐mail was sent from a potentially compromised account belonging to the Ministry of\nForeign Affairs of another government entity and carried the Carberp variant of the Sofacy Trojan. The developer\nimplemented a clever persistence mechanism in the Trojan, one which had not been observed in previous\nattacks. The focus of this blog will be on the attacks and the infrastructure associated with Sofacy using the new\npersistence mechanism as a correlation point.\nThe Delivery\nOn May 28, 2016, attackers sent a spear‐phishing e‐mail to a U.S. government entity using an email address\nbelonging to the Ministry of Foreign Affairs of another country. Analysis of the attack revealed a high likelihood\nthat the sender’s email address was not spoofed and is instead a result of a compromised host or account\nbelonging to that Ministry.\nThe targeted email had a subject of “FW: Exercise Noble Partner 2016”, which is a reference to a joint NATO\ntraining effort between the United States and Georgia. The email contained an RTF file as an attachment, with\nthe filename “Exercise_Noble_Partner_16.rtf,” reflecting the same training exercise. We have also seen related\ndelivery documents with filenames that have a Russian military theme\n(Putin_Is_Being_Pushed_to_Prepare_for_War.rtf and Russian anti‐Nato troops.rtf), purportedly targeting\norganizations in Poland according to a blog published by Prevenity .\nThe RTF file is a weaponized document that attempts to exploit CVE‐2015‐1641 to drop two files to the system,\nspecifically, “btecache.dll” and “svchost.dll”. The “btecache.dll” file is a Trojan that loads and executes “svchost.dll”,\nwhich is a Carberp variant the Sofacy Trojan. Surprisingly, unlike many other espionage actors who display decoy\ndocuments after successful exploitation, this RTF document does not drop or open a decoy document after\nexploiting the vulnerability.\nIn the installation process, we observed the delivery document creating a very interesting registry key that it uses\nfor persistence to run the Trojan. The path to the “btecache.dll” file is added to the following registry key:\nSoftware\\Microsoft\\Office test\\Special\\Perf\\: “C:\\Users\\[username]\\AppData\\Roaming\\btecache.dll”\nThis registry key is interesting, because unlike traditional methods of maintaining persistence, it does not\nautomatically run the “btecache.dll” file at system start up. Instead, this registry key will cause the DLL to load only\nwhen the user opens any Microsoft Office application, such as Word or Excel. This is the first time Unit 42 has\nseen the Sofacy group, or any other threat group for that matter, use this tactic for persistence purposes. An\nadded benefit for the threat actor to using this specific tactic for persistence is that it requires user interaction to\nload and execute the malicious payload, which can cause challenges for detection in automated sandboxes.\nThe Carberp variant of Sofacy\nThe “btecache.dll” file is the loader Trojan that is responsible for loading the “svchost.dll” DLL and executing it.\nBoth the “btecache.dll” and “svchost.dll” files contain code from the leaked Carberp source code, specifically the\nAPI resolution functions, as well as the RC2 key. The Sofacy group has used the Carberp source code in the past,\nspecifically discussed in a blog by F‐Secure , which is the reason we call this Trojan the Carberp variant.\nThe “svchost.dll” file contains the bulk of the functionality of this Trojan, which at a high level is a downloader that\nallows the threat actors to gain an initial foothold on the system. The Trojan sends network beacons to its\ncommand and control (C2) serverallowing the threat actors to identify targets of interest. The threat actors can\nthen respond to these network beacons to download and execute additional secondary payloads on the system.\nThe Trojan delivered in this attack contains two network locations that it will send network beacons to,\nspecifically “google.com” and “191.101.31.6”. These beacons are sent to the legitimate website google.com as an\nattempt to hide the true C2 beacons sent to the actual C2 server hosted at 191.101.31.6.  The network beacons\nare sent using HTTP POST requests with URLs created largely with random characters. There are two\nexceptions where random characters are not used to construct the URL, specifically the file extension that is\nrandomly chosen from .xml, .pdf, .htm or .zip and the base64 encoded value at the end of the URL. The base64\nencoded data is a string (“J04aLsxVhHBkr19CYr0”) hardcoded within the Trojan that it will then encrypt using a\ncustom algorithm. Figure 1 shows an example beacon sent from the Trojan to the C2 server during analysis.\n\nBy Robert Falcone  and Bryan Lee\nJune 14, 2016 at 5:00 AM\nCategory: Unit 42\nTags: APT28 , Carberp , Ministry of Foreign Affairs , Sofacy , Trojan\nSearch Unit 42\nSHARE \n Figure 1 Network Beacon Sent from Carberp variant of Sofacy\nThe POST data seen in the beacon in Figure 1 is base64 encoded and encrypted using the same custom\nalgorithm used to encrypt the data in the beacon URL. We decrypted the data to determine its purpose and\nfound the cleartext seen in Figure 2.\n,^Bid=I,;<&w@[System Process]\nSystem\nsmss.exe\ncsrss.exe\nwininit.exe\ncsrss.exe\nwinlogon.exe\nservices.exe\nlsass.exe\nlsm.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nspoolsv.exe\nsvchost.exe\ntaskhost.exe\nuserinit.exe\ndwm.exe\nexplorer.exe\nsvchost.exe\ncmd.exe\nconhost.exe\nreader_sl.exe\nsvchost.exe\ncmd.exe\nconhost.exe\nSearchIndexer.exe\nSearchProtocolHost.exe\nSearchFilterHost.exe\nSearchProtocolHost.exe\nexplorer.exe\nsvchost.exe\nsvchost.exe\ndisk=IDE\\DiskMAXTOR_HARDDISK_________________________2.2.1___\\5&2770a7af&0&0.0.0\nbuild=0x7caa0e19\nFigure 2 Decrypted HTTP POST Data Shows System Information\nThe clear text of the data sent in the network beacons contains information regarding the compromised system,\nas well as malware‐specific information. The data is comprised of the following fields of data:\nid = The serial number of the storage device\nw = This parameter (whose name ‘w’ could change to any character between samples) begins with a one byte\nvalue denoting the OS version followed by a one byte value for the CPU architecture. These values are\nimmediately followed by a new line delimited list of running processes on the system.\ndisk = The name of the system’s hard drive, obtained from the registry key\n“SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\\0”\nbuild  = The hardcoded build identifier for the Trojan version\ninject  = (Optional, not displayed in Figure 2) If the Trojan injected its code into other processes to interact with\nthe C2 server\nThis callback data allows the threat actors to determine if the infected machine is a target of interest, as the\nbeacon contains a list of running processes and the name of the storage device that could be used to filter out\nanalysis systems or researchers. If the actors believe the system is of interest, they will respond to these network\nbeacons to download and execute additional secondary payloads on the system. The Trojan parses the response\nto the beacons for two actions “Execute” and “Delete” between the tags “[file]” and “[/file]”, as well as settings\nlabeled “FileName”, “PathToSave”, “Rundll” and “IP” between the tags “[settings]” and “[/settings]”. This allows the\nthreat actors to download additional files to the system, execute both executables and DLLs and delete files.\nThe Infrastructure\nThe initial analyzed sample in this attack only contained a single malicious command and control location,\n191.101.31.6. We have not observed this IP address used by the Sofacy group in any previous attack campaigns,\nand examining passive DNS data showed no other correlations to potentially related attacks. The sample also\nseen by Prevenity appeared to only have a single primary C2 domain, servicecdp[.]com. This domain also appears\nto be newly created for this specific attack campaign, with no strong links to any previous attacks.\nPivoting off the unique registry key used for persistence revealed links to a previously observed Sofacy campaign,\nfrom mid‐2015. Two additional payloads with recent compile dates of March 7, 2016, were discovered using the\nsame persistence mechanism, and analysis of those payloads revealed one primary C2 domain,\nmunimonoce[.]com, and three secondary C2 domains, www.wscapi[.]com, www.tabsync[.]net, and storsvc[.]org.\nThe secondary C2 domains may appear familiar, as they were widely publicized in a report from iSight Partners  in\nJuly 2015 as C2 domains related to the Sofacy group aka Tsar Team.\nIn addition, the primary C2 domain munimonoce[.]com  previously had resolved to the IP 66.172.11.207, which\nwas previously identified as a primary C2 IP for a Sofacy payload with a compile timestamp of June 11, 2015. This\nparticular sample also happened to use the exact same secondary C2 domains of www.wscapi[.]com ,\nwww.tabsync[.]net , and storsvc[.]org, but lacked the newly discovered persistence mechanism.\nThe Sofacy group often re‐uses infrastructure components across multiple attack campaigns, whether to speed\nthe flow of attacks, for a lack of available resources committed, or out of sheer laziness. In this case, the newer\nattack campaign appears to use newly created infrastructure, but still maintains some overlap with previous\nSofacy‐related C2s. We believe this overlap could possibly be due to an oversight when adapting a previous code\nbase with the new persistence method discussed in this blog for the new attack campaign.\n The threat appears to be moving toward deployment of one‐off infrastructure that can make analysis of attack\ncampaigns and correlation more challenging. This shift stresses the importance of analysts and researchers being\nable to pivot on all artifacts of a given attack, not simply relying on network indicators. In this case, we were able\nuse AutoFocus to pivot on a common registry key unique to this attack campaign to quickly identify where it\ncorrelates with characteristics of previous attacks.\nConclusion\nThe Sofacy group continues its attack campaigns on government organizations, specifically the U.S. government\nin this latest spear‐phishing example. The threat group added a new persistence mechanism that requires user\ninteraction by loading its payload into Microsoft Office applications when opened, which may help the actors to\nevade detection. The use of this new persistence method shows the continued development of tactics and\ntechniques employed by this threat group, often times in clever ways as we observed in this instance.\nPalo Alto Networks customers are protected from the new Sofacy Carberp variant and can gather additional\ninformation using the following tools:\nWildFire detection of all known samples as malicious\nAll known C2s are classified as malicious in PAN‐DB\nAutoFocus tags have been created SofacyCarberp\nIndicators\nDelivery Documents\n03cb76bdc619fac422d2b954adfa511e7ecabc106adce804b1834581b5913bca (Exercise_Noble_Partner_16.rtf)\n12572c2fc2b0298ffd4305ca532317dc8b97ddfd0a05671066fe594997ec38f5\n(Putin_Is_Being_Pushed_to_Prepare_for_War.rtf and Russian anti‐Nato troops.rtf)\nLoader Trojans\nc2551c4e6521ac72982cb952503a2e6f016356e02ee31dea36c713141d4f3785 (btecache.dll)\nbe1cfa10fcf2668ae01b98579b345ebe87dab77b6b1581c368d1aba9fd2f10a0 (bitsprex3.dll)\nfbd5c2cf1c1f17402cc313fe3266b097a46e08f48b971570ef4667fbfd6b7301 (amdcache.dll)\nPayloads\n69940a20ab9abb31a03fcefe6de92a16ed474bbdff3288498851afc12a834261 (svchost.dll)\naeeab3272a2ed2157ebf67f74c00fafc787a2b9bbaa17a03be1e23d4cb273632 (clconfg.dll)\ndfa8a85e26c07a348a854130c652dcc6d29b203ee230ce0603c83d9f11bbcacc (iprpp.dll)\n57d230ddaf92e2d0504e5bb12abf52062114fb8980c5ecc413116b1d6ffedf1b (clconfg.dll)\nCommand and Control\n191.101.31.6\nmunimonoce[.]com\nwscapi[.]com\ntabsync[.]net\nstorsvc[.]org\nservicecdp[.]com\nGet updates from Palo Alto  Networks!\nSign up to receive the latest news, cyber threat intelligence and research from us\nEmail address\nSubscribe\nI'm not a robot\nreCAPTCHA\nPrivacy  - Terms\nBy submitting this form, you agree to our Terms of Use  and acknowledge\nour Privacy Statement .\n© 2020 Palo Alto Networks, Inc. All rights reserved.\nPopular Resources\nResource Center\nBlog\nCommunities\nTech Docs\nUnit 42\nSitemap\nLegal No ces\nPrivacy\nTerms of Use\nDocuments\nAccount\nManage Subscriptions\nReport a Vulnerability\nWe use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners. Privacy Policy\n "
}