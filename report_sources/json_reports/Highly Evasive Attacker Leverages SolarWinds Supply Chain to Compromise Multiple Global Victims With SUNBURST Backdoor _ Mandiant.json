{
    "title": "Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor _ Mandiant",
    "text": "10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …1/16UPDATE (May 2022): We have merged UNC2452 with APT29. The UNC2452 activity described in\nthis post is now attributed to APT29.\nExecutive Summary\nWe have discovered a global intrusion campaign. We are tracking the actors behind this\ncampaign as UNC2452.\nFireEye discovered a supply chain attack trojanizing SolarWinds Orion business software\nupdates in order to distribute malware we call SUNBURST. \nThe attacker’s post compromise activity leverages multiple techniques to evade detection\nand obscure their activity, but these efforts also offer some opportunities for detection.\nThe campaign is widespread, affecting public and private organizations around the world.\nFireEye is releasing signatures to detect this threat actor and supply chain attack in the\nildTh f d bliGitHb FiE d t d i hlHighly Evasive Attacker\nLeverages SolarWinds Supply\nChain to Compromise Multiple\nGlobal Victims With\nSUNBURST Backdoor\nFIREEYE\n#THREAT RESEARCH\nTHREAT RESEARCHDEC 13, 2020|17 MINS READEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …2/16wild. These are found on our public GitHub page. FireEye products and services can help\ncustomers detect and block this attack.\nSummary\nFireEye has uncovered a widespread campaign, that we are tracking as UNC2452. The actors\nbehind this campaign gained access to numerous public and private organizations around the\nworld. They gained access to victims via trojanized updates to SolarWind’s Orion IT monitoring\nand management software. This campaign may have begun as early as Spring 2020 and is\ncurrently ongoing. Post compromise activity following this supply chain compromise has\nincluded lateral movement and data theft. The campaign is the work of a highly skilled actor and\nthe operation was conducted with signiﬁcant operational security.\nSUNBURST Backdoor\nSolarWinds.Orion.Core.BusinessLayer.dll is a SolarWinds digitally-signed component of the\nOrion software framework that contains a backdoor that communicates via HTTP to third party\nservers. We are tracking the trojanized version of this SolarWinds Orion plug-in as SUNBURST.\nAfter an initial dormant period of up to two weeks, it retrieves and executes commands, called\n“Jobs”, that include the ability to transfer ﬁles, execute ﬁles, proﬁle the system, reboot the\nmachine, and disable system services. The malware masquerades its network tra\u0000c as the\nOrion Improvement Program (OIP) protocol and stores reconnaissance results within legitimate\nplugin conﬁguration ﬁles allowing it to blend in with legitimate SolarWinds activity. The\nbackdoor uses multiple obfuscated blocklists to identify forensic and anti-virus tools running as\nprocesses, services, and drivers.EN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …3/16\nFigure 1: SolarWinds digital signature on software with backdoor\nMultiple trojanzied updates were digitally signed from March - May 2020 and posted to the\nSolarWinds updates website, including:\nhxxps://downloads.solarwinds[.]com/solarwinds/CatalogResources/Core/2019.4/2019.4.5220.2\nCore-v2019.4.5220-Hotﬁx5.msp\nThe trojanized update ﬁle is a standard Windows Installer Patch ﬁle that includes compressed\nresourcesassociatedwiththeupdate,includingthetrojanizedEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …4/16resources associated with the update, including the trojanized\nSolarWinds.Orion.Core.BusinessLayer.dll component. Once the update is installed, the\nmalicious DLL will be loaded by the legitimate SolarWinds.BusinessLayerHost.exe or\nSolarWinds.BusinessLayerHostx64.exe (depending on system conﬁguration). After a dormant\nperiod of up to two weeks, the malware will attempt to resolve a subdomain of\navsvmcloud[.]com. The DNS response will return a CNAME record that points to a Command and\nControl (C2) domain. The C2 tra\u0000c to the malicious domains is designed to mimic normal\nSolarWinds API communications. The list of known malicious infrastructure is available on\nFireEye’s GitHub page.\nWorldwide Victims Across Multiple Verticals\nFireEye has detected this activity at multiple entities worldwide. The victims have included\ngovernment, consulting, technology, telecom and extractive entities in North America, Europe,\nAsia and the Middle East. We anticipate there are additional victims in other countries and\nverticals. FireEye has notiﬁed all entities we are aware of being affected.\nPost Compromise Activity and Detection Opportunities\nWe are currently tracking the software supply chain compromise and related post intrusion\nactivity as UNC2452. After gaining initial access, this group uses a variety of techniques to\ndisguise their operations while they move laterally (Figure 2). This actor prefers to maintain a\nlight malware footprint, instead preferring legitimate credentials and remote access for access\ninto a victim’s environment.EN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …5/16\nFigure 2: Post-compromise tactics\nThis section will detail the notable techniques and outline potential opportunities for detection.\nTEARDROP and BEACON Malware Used\nMultiple SUNBURST samples have been recovered, delivering different payloads. In at least one\ninstance the attackers deployed a previously unseen memory-only dropper we’ve dubbed\nTEARDROP to deploy Cobalt Strike BEACON.\nTEARDROP is a memory only dropper that runs as a service, spawns a thread and reads from the\nﬁle “gracious_truth.jpg”, which likely has a fake JPG header. Next it checks thatEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …6/16HKU\\SOFTWARE\\Microsoft\\CTF exists, decodes an embedded payload using a custom rolling\nXOR algorithm and manually loads into memory an embedded payload using a custom PE-like\nﬁle format. TEARDROP does not have code overlap with any previously seen malware. We\nbelieve that this was used to execute a customized Cobalt Strike BEACON.\nMitigation: FireEye has provided two Yara rules to detect TEARDROP available on our GitHub.\nDefenders should look for the following alerts from FireEye HX: MalwareGuard and\nWindowsDefender:\nProcess Information\nﬁle_operation_closed \nﬁle-path*: “c:\\\\windows\\\\syswow64\\\\netsetupsvc.dll \nactor-process: \npid: 17900\nWindow’s defender Exploit Guard log entries: (Microsoft-Windows-Security-\nMitigations/KernelMode event ID 12)           \nProcess”\\Device\\HarddiskVolume2\\Windows\\System32\\svchost.exe” (PID XXXXX) would have\nbeen blocked from loading the non-Microsoft-signed binary \n‘\\Windows\\SysWOW64\\NetSetupSvc.dll’\nAttacker Hostnames Match Victim Environment\nThe actor sets the hostnames on their command and control infrastructure to match a\nlegitimate hostname found within the victim’s environment. This allows the adversary to blend\ninto the environment, avoid suspicion, and evade detection.\nDetection Opportunity\nThe attacker infrastructure leaks its conﬁgured hostname in RDP SSL certiﬁcates, which is\nidentiﬁable in internet-wide scan data. This presents a detection opportunity for defenders \u0000\nquerying internet-wide scan data sources for an organization’s hostnames can uncover\nmalicious IP addresses that may be masquerading as the organization. (Note: IP Scan history\noften shows IPs switching between default (WIN-*) hostnames and victim’s hostnames) Cross-\nreferencing the list of IPs identiﬁed in internet scan data with remote access logs may identify\nevidence of this actor in an environment. There is likely to be a single account per IP address.\nIP Addresses located in Victim’s Country\nThe attacker’s choice of IP addresses was also optimized to evade detection. The attacker\nprimarily used only IP addresses originating from the same country as the victim, leveraging\nVirtual Private Servers.\nDetection Opportunity\nThis also presents some detection opportunities, as geolocating IP addresses used for remote\naccess may show an impossible rate of travel if a compromised account is being used by the\nlegitimate user and the attacker from disparate IP addresses. The attacker used multiple IP\ndd VPS id lii lif lASNiid iﬁdlkiEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …7/16addresses per VPS provider, so once a malicious login from an unusual ASN is identiﬁed, looking\nat all logins from that ASN can help detect additional malicious activity. This can be done\nalongside baselining and normalization of ASN’s used for legitimate remote access to help\nidentify suspicious activity.\nLateral Movement Using Different Credentials\nOnce the attacker gained access to the network with compromised credentials, they moved\nlaterally using multiple different credentials. The credentials used for lateral movement were\nalways different from those used for remote access.\nDetection Opportunity\nOrganizations can use HX’s LogonTracker module to graph all logon activity and analyze systems\ndisplaying a one-to-many relationship between source systems and accounts. This will uncover\nany single system authenticating to multiple systems with multiple accounts, a relatively\nuncommon occurrence during normal business operations.\nTemporary File Replacement and Temporary Task Modiﬁcation\nThe attacker used a temporary ﬁle replacement technique to remotely execute utilities: they\nreplaced a legitimate utility with theirs, executed their payload, and then restored the legitimate\noriginal ﬁle. They similarly manipulated scheduled tasks by updating an existing legitimate task\nto execute their tools and then returning the scheduled task to its original conﬁguration. They\nroutinely removed their tools, including removing backdoors once legitimate remote access was\nachieved.\nDetection Opportunity\nDefenders can examine logs for SMB sessions that show access to legitimate directories and\nfollow a delete-create-execute-delete-create pattern in a short amount of time. Additionally,\ndefenders can monitor existing scheduled tasks for temporary updates, using frequency\nanalysis to identify anomalous modiﬁcation of tasks. Tasks can also be monitored to watch for\nlegitimate Windows tasks executing new or unknown binaries.\nThis campaign’s post compromise activity was conducted with a high regard for operational\nsecurity, in many cases leveraging dedicated infrastructure per intrusion. This is some of the\nbest operational security that FireEye has observed in a cyber attack, focusing on evasion and\nleveraging inherent trust. However, it can be detected through persistent defense.\nIn-Depth Malware Analysis\nSolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a\nSolarWinds-signed plugin component of the Orion software framework that contains an\nobfuscated backdoor which communicates via HTTP to third party servers. After an initial\ndormant period of up to two weeks, it retrieves and executes commands, called “Jobs”, that\ninclude the ability to transfer and execute ﬁles, proﬁle the system, and disable system services.\nThe backdoor’s behavior and network protocol blend in with legitimate SolarWinds activity, such\nas by masquerading as the Orion Improvement Program (OIP) protocol and storing\nreconnaissance results within plugin conﬁguration ﬁles. The backdoor uses multiple blocklistsEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …8/16to identify forensic and anti-virus tools via processes, services, and drivers.\nUnique Capabilities\nSubdomain DomainName Generation Algorithm (DGA) is performed to vary DNS requests\nCNAME responses point to the C2 domain for the malware to connect to\nThe IP block of A record responses controls malware behavior\nDGA encoded machine domain name, used to selectively target victims\nCommand and control tra\u0000c masquerades as the legitimate Orion Improvement Program\nCode hides in plain site by using fake variable names and tying into legitimate components\nDelivery and Installation\nAuthorized system administrators fetch and install updates to SolarWinds Orion via packages\ndistributed by SolarWinds’s website. The update package CORE-2019.4.5220.20574-\nSolarWinds-Core-v2019.4.5220-Hotﬁx5.msp (02af7cec58b9a5da1c542b5a32151ba1) contains\nthe SolarWinds.Orion.Core.BusinessLayer.dll described in this report. After installation, the\nOrion software framework executes the .NET program SolarWinds.BusinessLayerHost.exe to\nload plugins, including SolarWinds.Orion.Core.BusinessLayer.dll. This plugin contains many\nlegitimate namespaces, classes, and routines that implement functionality within the Orion\nframework. Hidden in plain sight, the class\nSolarWinds.Orion.Core.BusinessLayer.OrionImprovementBusinessLayer implements an HTTP-\nbased backdoor. Code within the logically unrelated routine\nSolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager.RefreshInternal\ninvokes the backdoor code when the Inventory Manager plugin is loaded.\nSolarWinds.Orion.Core.BusinessLayer.dll is signed by SolarWinds, using the certiﬁcate with\nserial number 0f:e9:73:75:20:22:a6:06:ad:f2:a3:6e:34:5d:c0:ed. The ﬁle was signed on March\n24, 2020.\nInitialization\nOn execution of the malicious\nSolarWinds.Orion.Core.BusinessLayer.OrionImprovementBusinessLayer.Initialize method the\nsample veriﬁes that its lower case process name hashes to the value 17291806236368054941.\nThis hash value is calculated as the standard FNV-1A 64-bit hash with an additional XOR by\n6605813339339102567 after computing the FNV-1A. This hash matches a process named\n\"solarwinds.businesslayerhost\".\nThe sample only executes if the ﬁlesystem write time of the assembly is at least 12 to 14 days\nprior to the current time; the exact threshold is selected randomly from an interval. The sample\ncontinues to check this time threshold as it is run by a legitimate recurring background task.\nOnce the threshold is met, the sample creates the named pipe 583da945-62af-10e8-4902-\na8f205c72b2e to act as a guard that only one instance is running before reading\nSolarWinds.Orion.Core.BusinessLayer.dll.conﬁg from disk and retrieving the XML ﬁeld\nappSettingsTheappSettingsﬁelds’keysarelegitimatevaluesthatthemaliciouslogicreEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-ba …9/16appSettings. The appSettings ﬁelds keys are legitimate values that the malicious logic re-\npurposes as a persistent conﬁguration. The key ReportWatcherRetry must be any value other\nthan 3 for the sample to continue execution.\nThe sample checks that the machine is domain joined and retrieves the domain name before\nexecution continues. A userID is generated by computing the MD5 of a network interface MAC\naddress that is up and not a loopback device, the domain name, and the registry value\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid. The userID is\nencoded via a custom XOR scheme after the MD5 is calculated. The ReportWatcherPostpone\nkey of appSettings is then read from SolarWinds.Orion.Core.BusinessLayer.dll.conﬁg to retrieve\nthe initial, legitimate value. This operation is performed as the sample later bit packs ﬂags into\nthis ﬁeld and the initial value must be known in order to read out the bit ﬂags. The sample then\ninvokes the method Update which is the core event loop of the sample.\nDGA and Blocklists\nThe backdoor determines its C2 server using a Domain Generation Algorithm (DGA) to construct\nand resolve a subdomain of avsvmcloud[.]com. The Update method is responsible for initializing\ncryptographic helpers for the generation of these random C2 subdomains. Subdomains are\ngenerated by concatenating a victim userId with a reversible encoding of the victims local\nmachine domain name. The attacker likely utilizes the DGA subdomain to vary the DNS response\nto victims as a means to control the targeting of the malware. These subdomains are\nconcatenated with one of the following to create the hostname to resolve:\n.appsync-api.eu-west-1[.]avsvmcloud[.]com\n.appsync-api.us-west-2[.]avsvmcloud[.]com\n.appsync-api.us-east-1[.]avsvmcloud[.]com\n.appsync-api.us-east-2[.]avsvmcloud[.]com\nProcess name, service name, and driver path listings are obtained, and each value is hashed via\nthe FNV-1a + XOR algorithm as described previously and checked against hardcoded blocklists.\nSome of these hashes have been brute force reversed as part of this analysis, showing that\nthese routines are scanning for analysis tools and antivirus engine components. If a blocklisted\nprocess is found the Update routine exits and the sample will continue to try executing the\nroutine until the blocklist passes. Blocklisted services are stopped by setting their\nHKLM\\SYSTEM\\CurrentControlSet\\services\\<service_name>\\Start registry entries to value 4\nfor disabled. Some entries in the service list if found on the system may affect the DGA\nalgorithms behavior in terms of the values generated. The list of stopped services is then bit-\npacked into the ReportWatcherPostpone key of the appSettings entry for the samples’ conﬁg\nﬁle. If any service was transitioned to disabled the Update method exits and retries later. The\nsample retrieves a driver listing via the WMI query Select * From Win32_SystemDriver. If any\nblocklisted driver is seen the Update method exits and retries. If all blocklist tests pass, the\nsample tries to resolve api.solarwinds.com to test the network for connectivity.\nNetwork Command and Control (C2)EN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …10/16If all blocklist and connectivity checks pass, the sample starts generating domains in a while\nloop via its DGA. The sample will delay for random intervals between the generation of domains;\nthis interval may be any random value from the ranges 1 to 3 minutes, 30 to 120 minutes, or on\nerror conditions up to 420 to 540 minutes (9 hours). The DNS A record of generated domains is\nchecked against a hardcoded list of IP address blocks which control the malware’s behavior.\nRecords within the following ranges will terminate the malware and update the conﬁguration\nkey ReportWatcherRetry to a value that prevents further execution:\n10.0.0.0/8\n172.16.0.0/12\n192.168.0.0/16\n224.0.0.0/3\nfc00:: - fe00::\nfec0:: - ffc0::\nff00:: - ff00::\n20.140.0.0/15\n96.31.172.0/24\n131.228.12.0/22\n144.86.226.0/24\nOnce a domain has been successfully retrieved in a CNAME DNS response the sample will spawn\na new thread of execution invoking the method HttpHelper.Initialize which is responsible for all\nC2 communications and dispatching. The HTTP thread begins by delaying for a conﬁgurable\namount of time that is controlled by the SetTime command. The HTTP thread will delay for a\nminimum of 1 minute between callouts. The malware uses HTTP GET or HTTP POST requests. If\nthe sample is attempting to send outbound data the content-type HTTP header will be set to\n\"application/octet-stream\" otherwise to \"application/json\".\nA JSON payload is present for all HTTP POST and PUT requests and contains the keys “userId”,\n“sessionId”, and “steps”. The “steps” ﬁeld contains a list of objects with the following keys:\n“Timestamp”, “Index”, “EventType”, “EventName”, “DurationMs”, “Succeeded”, and “Message”. The\nJSON key “EventType” is hardcoded to the value “Orion”, and the “EventName” is hardcoded to\n“EventManager”. Malware response messages to send to the server are DEFLATE compressed\nand single-byte-XOR encoded, then split among the “Message” ﬁelds in the “steps” array. Each\n“Message” value is Base64 encoded separately. Not all objects in the “steps” array contribute to\nthe malware message – the integer in the “Timestamp” ﬁeld must have the 0x2 bit set to indicate\nthat the contents of the “Message” ﬁeld are used in the malware message. Step objects whose\nbit 0x2 is clear in the Timestamp ﬁeld contain random data and are discarded when assembling\nh lEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …11/16the malware response.\nSteganography\nIn observed tra\u0000c these HTTP response bodies attempt to appear like benign XML related to\n.NET assemblies, but command data is actually spread across the many GUID and HEX strings\npresent. Commands are extracted from HTTP response bodies by searching for HEX strings\nusing the following regular expression: \"\\{[0-9a-f-]{36}\\}\"|\"[0-9a-f]{32}\"|\"[0-9a-f]{16}\". Command\ndata is spread across multiple strings that are disguised as GUID and HEX strings. All matched\nsubstrings in the response are ﬁltered for non HEX characters, joined together, and HEX-\ndecoded. The ﬁrst DWORD value shows the actual size of the message, followed immediately\nwith the message, with optional additional junk bytes following. The extracted message is\nsingle-byte XOR decoded using the ﬁrst byte of the message, and this is then DEFLATE\ndecompressed. The ﬁrst character is an ASCII integer that maps to the JobEngine enum, with\noptional additional command arguments delimited by space characters.\nCommands are then dispatched to a JobExecutionEngine based upon the command value as\ndescribed next.\nSupported Commands\nCommand Value Operation\nIdle 0 No operation\nExit 1 Terminate the current thread.\nSetTime 2Sets the delay time between main event loop executions\nDelay is in seconds, and varies random between [.9 *\n<delay>, 1.1 * <delay>].          If the delay is < 300 it is\ndoubled on the next execution through the loop, this\nmeans it should settle onto an interval of around [5, 10]\nminutes.         There is a second, unrelated delay routine\nthat delays for a random interval between [16hrs, 83hrs]\nCollectSystemDescription 3Proﬁle the local system including hostname, username,\nOS version, MAC addresses, IP address, DHCP\nconﬁguration, and domain information.\nUploadSystemDescription 4Perform a HTTP request to the speciﬁed URL, parse the\nresults and compare components against unknown\nhashed values. Format a report and send to the C2 server.\nRunTask 5Starts a new process with the given ﬁle path and\narguments\nGetProcessByDescription 6Returns a process listing. If no arguments are provided\nreturns just the PID and process name.        If an argument\nis provided it also returns the parent PID and username\nand domain for the process owner.\n \nKillTask 7 Terminate the given process, by PID.EN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …12/16GetFileSystemEntries 8 Given a path and an optional match pattern recursively list\nﬁles and directories\nWriteFile 9Given a ﬁle path and a Base64 encoded string write the\ncontents of the Base64 decoded string to the given ﬁle\npath. Write using append mode. Delay for [1s, 2s] after\nwriting is done.\nFileExists 10 Tests whether the given ﬁle path exists.\nDeleteFile 11 Deletes the speciﬁed ﬁle path.\nGetFileHash 12Compute the MD5 of a ﬁle at a given path and return result\nas a HEX string. If an argument is provided, it is the\nexpected MD5 hash of the ﬁle and returns an error if the\ncalculated MD5 differs.\n \nReadRegistryValue 13 Arbitrary registry read from one of the supported hives\nSetRegistryValue 14 Arbitrary registry write from one of the supported hives.\nDeleteRegistryValue 15 Arbitrary registry delete from one of the supported hives\nGetRegistrySubKeyAndValueNames\n 16Returns listing of subkeys and value names beneath the\ngiven registry path\nReboot 17 Attempts to immediately trigger a system reboot.\nIndicators and Detections to Help the Community\nTo empower the community to detect this supply chain backdoor, we are publishing indicators\nand detections to help organizations identify this backdoor and this threat actor. The signatures\nare a mix of Yara, IOC, and Snort formats.\nA list of the detections and signatures are available on the FireEye GitHub repository found\nhere. We are releasing detections and will continue to update the public repository with\noverlapping detections for host and network-based indicators as we develop new or reﬁne\nexisting ones. We have found multiple hashes with this backdoor and we will post updates of\nthose hashes.\nMITRE ATT&CK Techniques Observed\nID Description\nT1012 Query Registry\nT1027 Obfuscated Files or Information\nT1057 Process Discovery\nT1070.004 File DeletionEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …13/16T1071.001 Web Protocols\nT1071.004 Application Layer Protocol: DNS\nT1083 File and Directory Discovery\nT1105 Ingress Tool Transfer\nT1132.001 Standard Encoding\nT1195.002 Compromise Software Supply Chain\nT1518 Software Discovery\nT1518.001 Security Software Discovery\nT1543.003 Windows Service\nT1553.002 Code Signing\nT1568.002 Domain Generation Algorithms\nT1569.002 Service Execution\nT1584 Compromise Infrastructure\nImmediate Mitigation Recommendations\nPrior to following SolarWind’s recommendation to utilize Orion Platform release 2020.2.1 HF 1,\nwhich is currently available via the SolarWinds Customer Portal, organizations should consider\npreserving impacted devices and building new systems using the latest versions. Applying an\nupgrade to an impacted box could potentially overwrite forensic evidence as well as leave any\nadditional backdoors on the system. In addition, SolarWinds has released additional mitigation\nand hardening instructions here.\nIn the event you are unable to follow SolarWinds’ recommendations, the following are immediate\nmitigation techniques that could be deployed as ﬁrst steps to address the risk of trojanized\nSolarWinds software in an environment. If attacker activity is discovered in an environment, we\nrecommend conducting a comprehensive investigation and designing and executing a\nremediation strategy driven by the investigative ﬁndings and details of the impacted\nenvironment.\nEnsure that SolarWinds servers are isolated / contained until a further review and\ninvestigation is conducted. This should include blocking all Internet egress from\nSolarWinds servers.\nIf SolarWinds infrastructure is not isolated, consider taking the following steps:\nRestrict scope of connectivity to endpoints from SolarWinds servers, especially\nthose that would be considered Tier 0 / crown jewel assetsEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …14/16Restrict the scope of accounts that have local administrator privileged on\nSolarWinds servers.\nBlock Internet egress from servers or other endpoints with SolarWinds software.\nConsider (at a minimum) changing passwords for accounts that have access to SolarWinds\nservers / infrastructure. Based upon further review / investigation, additional remediation\nmeasures may be required.\nIf SolarWinds is used to managed networking infrastructure, consider conducting a review\nof network device conﬁgurations for unexpected / unauthorized modiﬁcations. Note, this\nis a proactive measure due to the scope of SolarWinds functionality, not based on\ninvestigative ﬁndings.\nAcknowledgements\nThis blog post was the combined effort of numerous personnel and teams across FireEye\ncoming together. Special thanks to:\nAndrew Archer, Doug Bienstock, Chris DiGiamo, Glenn Edwards, Nick Hornick, Alex Pennino,\nAndrew Rector, Scott Runnels, Eric Scales, Nalani Fraser, Sarah Jones, John Hultquist, Ben\nRead, Jon Leathery, Fred House, Dileep Jallepalli, Michael Sikorski, Stephen Eckels, William\nBallenthin, Jay Smith, Alex Berry, Nick Richard, Isif Ibrahima, Dan Perez, Marcin Siedlarz, Ben\nWithnell, Barry Vengerik, Nicole Oppenheim, Ian Ahl, Andrew Thompson, Matt Dunwoody, Evan\nReese, Steve Miller, Alyssa Rahman, John Gorman, Lennard Galang, Steve Stone, Nick Bennett,\nMatthew McWhirt, Mike Burns, Omer Baig.\nAlso special thanks to Nick Carr, Christopher Glyer, and Ramin Naﬁsi from Microsoft.\n    \nMandiant Advantage Platform\nPlatform Overview\nAutomated Defense\nSecurity Validation\nRansomware Defense Validation \n \n \n \n Solutions\nRansomware\nIndustrial Controls & OT\nCyber Risk Management\nDigital Risk Protection\nFollow usEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …15/16Attack Surface Management\nThreat Intelligence\nDigital Threat Monitoring\nManaged DefenseInsider Threats\nCyber Security Skills Gap\nElection Security\nGovernment Cyber Security\nManufacturing\nCyber Threat Visibility\nAttack Surface Visibility\nCyber Preparedness\nDetection and Response\nServices\nServices Overview\nIncident Response\nStrategic Readiness\nCyber Defense Transformation\nTechnical Assurance\nView all Services (48)\nExpertise on Demand \n \n Mandiant Academy\nOverview\nEducation Formats\nUpcoming Courses\nOn-Demand Courses\nCertiﬁcations\nThreatSpace Cyber Range\nFree Course Sneak Peaks\nResources\nResource Center\nMandiant Blog\nPodcasts\nCustomer Stories\nReports\nWebinars\nInsights\nInfographics\nDatasheets \n \n \n \n \n Company\nAbout Us\nCareers\nEvents\nMedia Center\nNoteholder Documents\nPartners  Connect with MandiantEN\n10/10/22, 6:10 PM Highly Evasive A ttack er Leverages SolarW inds Supply Chain to Compr omise Multiple Global V ictims W ith S…\nhttps://www .mandiant.com/r esour ces/blog/evasive-attack er-leverages-solarwinds-supply -chain-compr omises-with-sunburst-b …16/16Partners Overview\nService Partners\nCyber Risk Partners\nTechnology Partners\nPartner Portal \n \n \n \n Contact Us\nReport an Incident\nCustomer Support\nEmail Preferences\nCustomer Success\nMedia Inquiries\n© Copyright 2022 Mandiant. All rights reserved.\nPrivacy & Cookies Policy   Terms & Conditions   Compliance   Site MapEN\n"
}