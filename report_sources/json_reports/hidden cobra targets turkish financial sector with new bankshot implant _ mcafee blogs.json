{
    "title": "hidden cobra targets turkish financial sector with new bankshot implant _ mcafee blogs",
    "text": "Hidden Cobra Targets Turkish\nFinancial Sector With New Bankshot\nImplant\nLbAedd Hnld\nSecuring Tomorrow\n\n\n\n\nUnited States / English     Privacy Legal Notices Legal Contracts & Terms Site Map Copyright ©20202019 McAfee, LLC Search Blogs\n   Home/Other Blogs /McAfee Labs /Hidden Cobra Targets Turkish Financial Sector With New Bankshot Implant\n By Ryan Sherstobito  on Mar 08, 2018\nThis post was prepared with contributions from Asheer Malhotra, Charles Crawford, and Jessica Saavedra-Morales.  \nOn February 28, the McAfee Advanced Threat Research team discovered that the cybercrime group Hidden Cobra continues to target\ncryptocurrency and  nancial organizations. In this analysis, we observed the return of Hidden Cobra’s Bankshot malware implant\nsurfacing in the Turkish  nancial system. Based on the code similarity, the victim’s business sector, and the presence of control server\nstrings, this attack resembles previous attacks  by Hidden Cobra conducted against the global  nancial network SWIFT.\nIn this new, aggressive campaign we see a return of the Bankshot implant, which last appeared in 2017. Bankshot is designed to persist\non a victim’s network for further exploitation; thus the Advanced Threat Research team believes this operation is intended to gain\naccess to speci c  nancial organizations.\nBased on our analysis,  nancial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word\ndocument. The document contains an embedded Adobe Flash exploit, which was recently announced by the Korean Internet Security\nagency. The exploit, which takes advantage of CVE-2018-4878,  allows an attacker to execute arbitrary code such as an implant.\nthe Further investigation into this campaign and analysis of McAfee product telemetry shows that the infection occurred on March 2\nand 3. The implant’s  rst target was a major government-controlled  nancial organization. It next appeared in another Turkish\ngovernment organization involved in  nance and trade. A further three large  nancial institutions in Turkey were victims of this attack.\nThe implant has so far not surfaced in any other sector or country. This campaign suggests the attackers may plan a future heist\nagainst these targets by using Bankshot to gather information.\nBankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but\nthe similarly named domain is not associated with the legitimate entity. The malicious domain falcancoin.io was created December 27,\n2017, and was updated on February 19, only a few days before the implants began to appear. These implants are variations of earlier\nforms of Bankshot, a remote access tool that gives an attacker full capability on a victim’s system. This implant also contains\nfunctionality to wipe  les and content from the targeted system to erase evidence or perform other destructive actions. Bankshot was\n rst reported by the Department of Homeland Security  on December 13, 2017, and has only recently resurfaced in newly compiled\nvariants. The sample we analyzed is 99% similar to the documented Bankshot variants from 2017.\nBankshot implants hosted on falcancoin.io.\nThe Bankshot implant is attached to a malicious Word document with the  lename Agreement.docx. The document appears to be an\nagreement template for Bitcoin distribution between an unknown individual in Paris and a to-be-determined cryptocurrency exchange.\nThe author of this document is test-pc. It was created February 26 and was submitted from the Netherlands. The document contains an\nembedded Flash script that exploits CVE-2018-4878 and downloads and executes the DLL implant from falcancoin.io.\nWe discovered two more documents, written in Korean, that exploit the same vulnerability as Agreement.docx. These documents\nappear to be part of the same campaign and may have been used on di erent targets. These documents also communicated with\nfalcancoin.io to install Bankshot and also contain themes around cryptocurrency security.\nTwo Flash  les exploit CVE-2018-4878.\nMalicious documents in the attack.\n \nMalicious document exploiting CVE-2018-4878.\nThe implants are downloaded via a Flash  le embedded in the malicious document. They are executed when the victim views the\ndocument.\nThe malicious site falcancoin.io embedded in the Flash  le.\nImplant directory contained in the malicious Flash  le.\nThe implants (DLLs) are disguised as ZIP  les and communicate with three control servers, two of them Chinese-language online\ngambling sites. These URLs can be found hardcoded in the implants’ code.\nHardcoded control server URLs.\n \nAnalyzing Bankshot\nThe sample (a2e966edee45b30bb6bb5c978e55833eec169098) is a Windows DLL that serves as a backdoor and contains a variety of\ncapabilities. The malicious DLL is not a service DLL because it lacks ServiceMain(). To mask itself, it can run as a regular library loaded\ninto a legitimate process.\nThe malware begins by creating a new thread from the DllMain() function to carry out its malicious activities:\nNew thread created in the malware’s DllMain() function.\nThe malware performs the following activities:\nThe malicious thread dynamically loads the APIs it needs at the beginning of its execution using LoadLibrary() and GetProcAddress().\nAPIs from the following libraries are loaded at runtime:\nA dynamic API loaded by the malware.\n \nBased on packet capture analysis of previous implants from 2017, the following strings are used in control server communications:\nUser Agents\nThe implant either fetches the user agent from Internet Explorer (using ObtainUserAgentAsString()) or uses a default user agent\nspeci ed in the malware binary:\nMozilla/5.0 (Windows NT 6.1; WOW64) Chrome/28.0.1500.95 Safari/537.36\nControl Server Communications\nThe malware initiates communication with the control server by sending it an HTTP POST request with additional optional HTTP data,\nsuch as:\n------FormBoundary<randomly_generated_characters>\nContent-Disposition: form-data; name=\"board_id\"\n8306\n------FormBoundary<randomly_generated_characters>\nContent-Disposition: form-data; name=\"user_id\"\n*dJU!*JE&!M@UNQ@\n------FormBoundary<randomly_generated_characters>\nContent-Disposition: form-data; name=\"file1\"; filename=\"king.jpg\"\nContent-Type: application/octet-stream\nThe optional HTTP data with king.jpg looks like a beacon to inform the control server that the malware is ready to accept new\ncommands:\nMalware checking to make sure a received command is in the correct range.\n \nThe command index calculator and jump to the appropriate command.\n \nThe command index table and command handler address table. \nImplant Capabilities\nBased on the responses received from the control server, the malware can carry out the following malicious tasks:\nThe capability to terminate a process.\nThe capability to execute system commands.\n \nSpawning arbitrary processes.\nThe malware changing the  le time.\n \nGetting a user token using WTSQueryUserToken.\n \nA process created as logged-in user.\nGetting time information for all processes running on the system.\nGathering account information from running processes.\nMarking a  le for deletion on reboot.\nWiping  les with zeros and marking it for deletion on reboot. \nLoading an arbitrary library into its own process space. \nAfter every action is performed the malware sends a response to the control server indicating whether the action was successful.\nConnections\nThe US government reports  that Bankshot is used by Hidden Cobra to target multiple industries including  nancial organizations. This\nimplant has been connected to a major Korean bank attack  and is also known as Trojan Manuscript. That variant contained the\ncapability to search for hosts related to the SWIFT network and the same control server strings as the variant we found targeting the\nTurkish  nancial sector. The implant does not conduct  nancial transactions; rather it is a channel into the victim’s environment, in\nwhich further stages of implants can be deployed for  nancial reconnaissance. The Bankshot implant was also observed in 2017 in\ndocuments appearing to come from Latin American banks.\nMalicious document delivering the Bankshot implant in 2017.\nThese connections, combined with the implant’s nearly identical appearance to known variants, are a strong indication that we have\nuncovered a Hidden Cobra attack. Further, previous implants from 2017 contained bogus documents with  nancially themed content.\nA code comparison of hash 12c786c490366727cf7279fc141921d8 with hash 6de6a0df263ecd2d71a92597b2362f2c (from November 28, 2017). \nConclusion\nWe have found what may be an early data-gathering stage for future possible heists from  nancial organizations in Turkey (and possibly\nother countries). In this campaign, we see the adoption of a recent zero-day Adobe Flash vulnerability to get the implant onto the\nvictim’s systems.\nThe campaign has a high chance of success against victims who have an unpatched version of Flash. Documents with the Flash exploit\nmanaged to evade static defenses and remain undetected as an exploit on VirusTotal. This is the  rst time that Bankshot has been tied\ndirectly to  nancial-related hacking and the  rst time it has been used since November 2017.\nMcAfee detects these threats as:\nMcAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classi cation, which rate these URLs as High\nRisk.\n \nIndicators of Compromise\nMITRE ATT&CK techniques\nHashes\nDomains\n 843c17b06a3aee22447f021307909890b68828b9 (February 25)\n343ebca579bb888eb8ccb811f9b52280c72e484c (February 25\nBuilds imports by dynamically loading APIs\nDecrypts strings needed for control server communications\nPerforms control server communications\nHandles commands issued by the control server\nUninstalls self from the system\nKernel32.dll\nWs2_32/wsock32.dll\nApvapi32.dll\nOleaut32.dll\nIphlp.dll\nUrlmon.dll\nConnection: keep-alive\nCache-Control: max-age=0\nAccept: */*\nContent-Type: multipart/form-data; boundary=\nContent-Type: application/octet-stream\nAccept-Encoding: gzip,de ate,sdch\nAccept-Language: ko-KR -> Korean\nContent-Disposition: form-data;name=”board_id”\nContent-Disposition: form-data;name=”user_id”\nContent-Disposition: form-data;name=” le1″;  lename=”img01_29.jpg”\nContent-Disposition: form-data;name=” le1″;  lename=”my.doc”\nContent-Disposition: form-data;name=” le1″;  lename=”pratice.pdf”\nContent-Disposition: form-data;name=” le1″;  lename=”king.jpg”\nContent-Disposition: form-data;name=” le1″;  lename=”dream.avi”\nContent-Disposition: form-data;name=” le1″;  lename=”hp01.avi”\nContent-Disposition: form-data;name=” le1″;  lename=”star.avi”\nboard_id is a four-digit number that may be an identi er for a campaign ID. Based on analysis of previous samples, this is a unique\nidenti er.\nuser_id is a hardcoded value in the malware binary that is sent to the control server. The username appears to be attacker speci ed\nand has occurred in 2017 Bankshot samples. This links the previous samples with this unique username.\nfilename is based on static analysis. This looks like a speci c beacon to indicate that the malware is ready to receive commands.\nCommands received from the control server are encoded DWORDs\nAfter decoding, these DWORDs should be in the range 123459h to 123490h\nRecursively generate a list of  les in a directory and send to the control server\nTerminate a speci c process. The process is identi ed by the control server sending the PID to the malware.\nGather network addresses and operating system version\nExecute arbitrary commands using “cmd.exe /c”\nCreate processes\nWrite responses from the control server to a  le\nSend information for all drives\nWrite data sent by the control server to a temporary  le matching the  le path pattern %temp%\\DWS00*\nChange the time of a  le as speci ed by the control server\nCreate a process by impersonating a logged-on user\nGather the process time for all processes\nGather domain and account names based on all running processes\nRead a speci ed  le’s contents and send the data to the control server\nWrite data sent by the control server to an existing  le\nMark a  le to be deleted on reboot\nOverwrite a  le with all zeros and mark it for deletion on reboot\nDelete  les using the DeleteFile() API\nLoad an arbitrary library into its process space. This may be used to load additional downloaded components of the attack.\nRDN/Generic Exploit\nRDN/Generic.dx\nGeneric PWS.y\nGeneric.hbg\nExploit-CVE2018-4878\nEx ltration over command and control channel\nCommonly used port\nCommand-line interface\nService execution\nAutomated collection\nData from local system\nProcess discovery\nSystem time discovery\nCredential dumping\nExploitation of vulnerability\nProcess injection\nFile deletion\n650b7d25f4ed87490f8467eb48e0443fb244a8c4\n65e7d2338735ec04fd9692d020298e5a7953fd8d\n166e8c643a4db0df6 d6e3ab536b3de9edc9fb7\na2e966edee45b30bb6bb5c978e55833eec169098\n530hr[dot]com/data/common.php\n028xmz[dot]com/include/common.php\n168wangpi[dot]com/include/charset.php\nFalcancoin[dot]io\nAbout the Author\n\nRyan Sherstobito \nRyan Sherstobito  is a Senior Analyst for Major Campaigns – Advanced Threat Research in McAfee. Ryan\nspecializes in threat intelligence in the Asia Paci c Region where he conducts cutting edge research into new\nadversarial techniques and adapts those to better monitor the threat landscape. He formerly was the Chief\nCorporate Evangelist at Panda Security, where ...\nRead more posts from Ryan Sherstobito  \n Previous Article Next Article \nCategories: McAfee Labs\nTags: cybercrime , malware, advanced persistent threats , cybersecurity , Advanced Threat Research\nLeave a reply\nFacebook Comments Comments (0)\nSimilar Blogs\nWhatsApp Security Hacks: Are\nYour ‘Private’ Messages Really\nEver Private?\nMar 14, 2020\nIs WhatsApp Safe for Kids? Here’s\nWhat Parents Need to Know\nMar 07, 2020\nIs Mobile Malware Playing Hide\nand Steal on Your Device?\nMar 03, 2020\nFamily Safety\n Family Safety\n Consumer\nSubscribe to McAfee Securing Tomorrow Blogs\nEmail address  SubscribeBlog Home Categories Authors Subscribe\nFor Home For Enterprise \n "
}